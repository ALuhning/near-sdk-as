(module
 (type $FUNCSIG$iii (func (param i32 i32) (result i32)))
 (type $FUNCSIG$v (func))
 (type $FUNCSIG$iiii (func (param i32 i32 i32) (result i32)))
 (type $FUNCSIG$viiii (func (param i32 i32 i32 i32)))
 (type $FUNCSIG$vii (func (param i32 i32)))
 (type $FUNCSIG$ii (func (param i32) (result i32)))
 (type $FUNCSIG$viii (func (param i32 i32 i32)))
 (type $FUNCSIG$vi (func (param i32)))
 (type $FUNCSIG$i (func (result i32)))
 (type $FUNCSIG$vjj (func (param i64 i64)))
 (type $FUNCSIG$iiiiii (func (param i32 i32 i32 i32 i32) (result i32)))
 (type $FUNCSIG$jjj (func (param i64 i64) (result i64)))
 (type $FUNCSIG$iiji (func (param i32 i64 i32) (result i32)))
 (type $FUNCSIG$jjjj (func (param i64 i64 i64) (result i64)))
 (type $FUNCSIG$jj (func (param i64) (result i64)))
 (type $FUNCSIG$jjjjjj (func (param i64 i64 i64 i64 i64) (result i64)))
 (type $FUNCSIG$iiiii (func (param i32 i32 i32 i32) (result i32)))
 (type $FUNCSIG$jjjjj (func (param i64 i64 i64 i64) (result i64)))
 (type $FUNCSIG$viij (func (param i32 i32 i64)))
 (type $FUNCSIG$ij (func (param i64) (result i32)))
 (type $FUNCSIG$viji (func (param i32 i64 i32)))
 (type $FUNCSIG$vj (func (param i64)))
 (type $FUNCSIG$jii (func (param i32 i32) (result i64)))
 (type $FUNCSIG$jiij (func (param i32 i32 i64) (result i64)))
 (type $FUNCSIG$ji (func (param i32) (result i64)))
 (type $FUNCSIG$iij (func (param i32 i64) (result i32)))
 (type $FUNCSIG$j (func (result i64)))
 (type $FUNCSIG$iijj (func (param i32 i64 i64) (result i32)))
 (type $FUNCSIG$iiiiji (func (param i32 i32 i32 i64 i32) (result i32)))
 (type $FUNCSIG$jjjjjjjjj (func (param i64 i64 i64 i64 i64 i64 i64 i64) (result i64)))
 (type $FUNCSIG$iiiiiji (func (param i32 i32 i32 i32 i64 i32) (result i32)))
 (type $FUNCSIG$jjjjjjjjjj (func (param i64 i64 i64 i64 i64 i64 i64 i64 i64) (result i64)))
 (type $FUNCSIG$vjjj (func (param i64 i64 i64)))
 (import "env" "abort" (func $~lib/builtins/abort (param i32 i32 i32 i32)))
 (import "env" "log_utf8" (func $~lib/near-runtime-ts/runtime_api/runtime_api.log_utf8 (param i64 i64)))
 (import "env" "value_return" (func $~lib/nearEntry/value_return (param i64 i64)))
 (import "env" "storage_iter_prefix" (func $~lib/near-runtime-ts/runtime_api/runtime_api.storage_iter_prefix (param i64 i64) (result i64)))
 (import "env" "storage_iter_next" (func $~lib/near-runtime-ts/runtime_api/runtime_api.storage_iter_next (param i64 i64 i64) (result i64)))
 (import "env" "register_len" (func $~lib/near-runtime-ts/runtime_api/runtime_api.register_len (param i64) (result i64)))
 (import "env" "read_register" (func $~lib/near-runtime-ts/runtime_api/runtime_api.read_register (param i64 i64)))
 (import "env" "storage_write" (func $~lib/near-runtime-ts/runtime_api/runtime_api.storage_write (param i64 i64 i64 i64 i64) (result i64)))
 (import "env" "storage_iter_range" (func $~lib/near-runtime-ts/runtime_api/runtime_api.storage_iter_range (param i64 i64 i64 i64) (result i64)))
 (import "env" "storage_has_key" (func $~lib/near-runtime-ts/runtime_api/runtime_api.storage_has_key (param i64 i64) (result i64)))
 (import "env" "storage_remove" (func $~lib/near-runtime-ts/runtime_api/runtime_api.storage_remove (param i64 i64 i64) (result i64)))
 (import "env" "input" (func $~lib/nearEntry/input (param i64)))
 (import "env" "register_len" (func $~lib/nearEntry/register_len (param i64) (result i64)))
 (import "env" "panic" (func $~lib/nearEntry/panic))
 (import "env" "read_register" (func $~lib/nearEntry/read_register (param i64 i64)))
 (import "env" "storage_read" (func $~lib/near-runtime-ts/runtime_api/runtime_api.storage_read (param i64 i64 i64) (result i64)))
 (import "env" "signer_account_id" (func $~lib/near-runtime-ts/runtime_api/runtime_api.signer_account_id (param i64)))
 (import "env" "current_account_id" (func $~lib/near-runtime-ts/runtime_api/runtime_api.current_account_id (param i64)))
 (import "env" "block_index" (func $~lib/near-runtime-ts/runtime_api/runtime_api.block_index (result i64)))
 (import "env" "attached_deposit" (func $~lib/near-runtime-ts/runtime_api/runtime_api.attached_deposit (param i64)))
 (import "env" "account_balance" (func $~lib/near-runtime-ts/runtime_api/runtime_api.account_balance (param i64)))
 (import "env" "prepaid_gas" (func $~lib/near-runtime-ts/runtime_api/runtime_api.prepaid_gas (result i64)))
 (import "env" "used_gas" (func $~lib/near-runtime-ts/runtime_api/runtime_api.used_gas (result i64)))
 (import "env" "promise_results_count" (func $~lib/near-runtime-ts/runtime_api/runtime_api.promise_results_count (result i64)))
 (import "env" "promise_result" (func $~lib/near-runtime-ts/runtime_api/runtime_api.promise_result (param i64 i64) (result i64)))
 (import "env" "promise_create" (func $~lib/near-runtime-ts/runtime_api/runtime_api.promise_create (param i64 i64 i64 i64 i64 i64 i64 i64) (result i64)))
 (import "env" "promise_then" (func $~lib/near-runtime-ts/runtime_api/runtime_api.promise_then (param i64 i64 i64 i64 i64 i64 i64 i64 i64) (result i64)))
 (import "env" "promise_return" (func $~lib/near-runtime-ts/runtime_api/runtime_api.promise_return (param i64)))
 (import "env" "sha256" (func $~lib/near-runtime-ts/runtime_api/runtime_api.sha256 (param i64 i64 i64)))
 (memory $0 1)
 (data (i32.const 8) "\1e\00\00\00\01\00\00\00\01\00\00\00\1e\00\00\00~\00l\00i\00b\00/\00r\00t\00/\00t\00l\00s\00f\00.\00t\00s\00")
 (data (i32.const 56) "(\00\00\00\01\00\00\00\01\00\00\00(\00\00\00a\00l\00l\00o\00c\00a\00t\00i\00o\00n\00 \00t\00o\00o\00 \00l\00a\00r\00g\00e\00")
 (data (i32.const 112) "\1e\00\00\00\01\00\00\00\01\00\00\00\1e\00\00\00~\00l\00i\00b\00/\00r\00t\00/\00p\00u\00r\00e\00.\00t\00s\00")
 (data (i32.const 160) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00:\00l\00e\00n\00")
 (data (i32.const 184) "\0c\00\00\00\01\00\00\00\01\00\00\00\0c\00\00\00:\00f\00r\00o\00n\00t\00")
 (data (i32.const 216) "\n\00\00\00\01\00\00\00\01\00\00\00\n\00\00\00:\00b\00a\00c\00k\00")
 (data (i32.const 248) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00:\00:\00")
 (data (i32.const 272) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00:\00r\00")
 (data (i32.const 296) " \00\00\00\01\00\00\00\01\00\00\00 \00\00\000\001\002\003\004\005\006\007\008\009\00a\00b\00c\00d\00e\00f\00")
 (data (i32.const 344) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00=\00")
 (data (i32.const 368) "\80\00\00\00\01\00\00\00\01\00\00\00\80\00\00\00A\00B\00C\00D\00E\00F\00G\00H\00I\00J\00K\00L\00M\00N\00O\00P\00Q\00R\00S\00T\00U\00V\00W\00X\00Y\00Z\00a\00b\00c\00d\00e\00f\00g\00h\00i\00j\00k\00l\00m\00n\00o\00p\00q\00r\00s\00t\00u\00v\00w\00x\00y\00z\000\001\002\003\004\005\006\007\008\009\00+\00/\00")
 (data (i32.const 512) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00t\00r\00u\00e\00")
 (data (i32.const 536) "\n\00\00\00\01\00\00\00\01\00\00\00\n\00\00\00f\00a\00l\00s\00e\00")
 (data (i32.const 568) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00n\00u\00l\00l\00")
 (data (i32.const 592) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\000\00")
 (data (i32.const 616) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\009\00")
 (data (i32.const 640) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00A\00")
 (data (i32.const 664) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00a\00")
 (data (i32.const 688) "$\00\00\00\01\00\00\00\01\00\00\00$\00\00\00I\00n\00d\00e\00x\00 \00o\00u\00t\00 \00o\00f\00 \00r\00a\00n\00g\00e\00")
 (data (i32.const 744) "\14\00\00\00\01\00\00\00\01\00\00\00\14\00\00\00~\00l\00i\00b\00/\00r\00t\00.\00t\00s\00")
 (data (i32.const 784) "\14\00\00\00\01\00\00\00\01\00\00\00\14\00\00\00h\00e\00l\00l\00o\00 \00t\00e\00s\00t\00")
 (data (i32.const 824) "\1c\00\00\00\01\00\00\00\01\00\00\00\1c\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00l\00e\00n\00g\00t\00h\00")
 (data (i32.const 872) "&\00\00\00\01\00\00\00\01\00\00\00&\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00b\00u\00f\00f\00e\00r\00.\00t\00s\00")
 (data (i32.const 928) "\1c\00\00\00\01\00\00\00\01\00\00\00\1c\00\00\00~\00l\00i\00b\00/\00s\00t\00r\00i\00n\00g\00.\00t\00s\00")
 (data (i32.const 976) "\n\00\00\00\01\00\00\00\01\00\00\00\n\00\00\00h\00e\00l\00l\00o\00")
 (data (i32.const 1008) "\00\00\00\00\01\00\00\00\01\00\00\00\00\00\00\00")
 (data (i32.const 1024) "^\00\00\00\01\00\00\00\01\00\00\00^\00\00\00E\00l\00e\00m\00e\00n\00t\00 \00t\00y\00p\00e\00 \00m\00u\00s\00t\00 \00b\00e\00 \00n\00u\00l\00l\00a\00b\00l\00e\00 \00i\00f\00 \00a\00r\00r\00a\00y\00 \00i\00s\00 \00h\00o\00l\00e\00y\00")
 (data (i32.const 1136) "\1a\00\00\00\01\00\00\00\01\00\00\00\1a\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00.\00t\00s\00")
 (data (i32.const 1184) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00,\00")
 (data (i32.const 1208) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\"\00")
 (data (i32.const 1232) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\\\00")
 (data (i32.const 1256) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00\\\00\"\00")
 (data (i32.const 1280) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00\\\00\\\00")
 (data (i32.const 1304) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\08\00")
 (data (i32.const 1328) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00\\\00b\00")
 (data (i32.const 1352) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\n\00")
 (data (i32.const 1376) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00\\\00n\00")
 (data (i32.const 1400) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\0d\00")
 (data (i32.const 1424) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00\\\00r\00")
 (data (i32.const 1448) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\t\00")
 (data (i32.const 1472) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00\\\00t\00")
 (data (i32.const 1496) "H\00\00\00\01\00\00\00\01\00\00\00H\00\00\00U\00n\00s\00u\00p\00p\00o\00r\00t\00e\00d\00 \00c\00o\00n\00t\00r\00o\00l\00 \00c\00h\00a\00r\00a\00c\00t\00e\00r\00 \00c\00o\00d\00e\00:\00 \00")
 (data (i32.const
 (data (i32.const 2000) "\10\00\00\00\01\00\00\00\n\00\00\00\10\00\00\00@\06\00\00@\06\00\00\90\01\00\00d\00\00\00")
 (data (i32.const 2032) "F\00\00\00\01\00\00\00\01\00\00\00F\00\00\00~\00l\00i\00b\00/\00a\00s\00s\00e\00m\00b\00l\00y\00s\00c\00r\00i\00p\00t\00-\00j\00s\00o\00n\00/\00e\00n\00c\00o\00d\00e\00r\00.\00t\00s\00")
 (data (i32.const 2120) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00:\00")
 (data (i32.const 2144) "\1e\00\00\00\01\00\00\00\01\00\00\00\1e\00\00\00s\00t\00o\00r\00a\00g\00e\00K\00e\00y\00s\00T\00e\00s\00t\00")
 (data (i32.const 2192) "\0e\00\00\00\01\00\00\00\01\00\00\00\0e\00\00\00s\00o\00m\00e\00K\00e\00y\00")
 (data (i32.const 2224) "R\00\00\00\01\00\00\00\01\00\00\00R\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00k\00e\00y\00s\00 \00c\00o\00n\00t\00e\00n\00t\00s\00 \00f\00o\00r\00 \00e\00m\00p\00t\00y\00 \00s\00t\00o\00r\00a\00g\00e\00")
 (data (i32.const 2328) " \00\00\00\01\00\00\00\01\00\00\00 \00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00m\00a\00i\00n\00.\00t\00s\00")
 (data (i32.const 2376) "\12\00\00\00\01\00\00\00\01\00\00\00\12\00\00\00s\00o\00m\00e\00A\00p\00p\00l\00e\00")
 (data (i32.const 2416) "\0e\00\00\00\01\00\00\00\01\00\00\00\0e\00\00\00m\00y\00A\00p\00p\00l\00e\00")
 (data (i32.const 2448) "\10\00\00\00\01\00\00\00\01\00\00\00\10\00\00\00m\00y\00V\00a\00l\00u\00e\001\00")
 (data (i32.const 2480) "\10\00\00\00\01\00\00\00\01\00\00\00\10\00\00\00s\00o\00m\00e\00K\00e\00y\002\00")
 (data (i32.const 2512) "\10\00\00\00\01\00\00\00\01\00\00\00\10\00\00\00s\00o\00m\00e\00K\00e\00y\006\00")
 (data (i32.const 2544) "\10\00\00\00\01\00\00\00\01\00\00\00\10\00\00\00m\00y\00V\00a\00l\00u\00e\002\00")
 (data (i32.const 2576) "\10\00\00\00\01\00\00\00\01\00\00\00\10\00\00\00s\00o\00m\00e\00K\00e\00y\003\00")
 (data (i32.const 2608) "*\00\00\00\01\00\00\00\01\00\00\00*\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00k\00e\00y\00s\00 \00l\00e\00n\00g\00t\00h\00")
 (data (i32.const 2672) ".\00\00\00\01\00\00\00\01\00\00\00.\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00k\00e\00y\00s\00 \00c\00o\00n\00t\00e\00n\00t\00s\00")
 (data (i32.const 2736) "8\00\00\00\01\00\00\00\01\00\00\008\00\00\00S\00t\00o\00r\00a\00g\00e\00 \00d\00o\00e\00s\00 \00n\00o\00t\00 \00c\00o\00n\00t\00a\00i\00n\00 \00k\00e\00y\00")
 (data (i32.const 2808) "\16\00\00\00\01\00\00\00\01\00\00\00\16\00\00\00n\00o\00n\00e\00x\00i\00s\00t\00i\00n\00g\00")
 (data (i32.const 2848) "4\00\00\00\01\00\00\00\01\00\00\004\00\00\00S\00t\00o\00r\00a\00g\00e\00 \00h\00a\00s\00 \00u\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00k\00e\00y\00")
 (data (i32.const 2920) "J\00\00\00\01\00\00\00\01\00\00\00J\00\00\00S\00t\00o\00r\00a\00g\00e\00 \00c\00o\00n\00t\00a\00i\00n\00s\00 \00k\00e\00y\00 \00t\00h\00a\00t\00 \00w\00a\00s\00 \00d\00e\00l\00e\00t\00e\00d\00")
 (data (i32.const 3016) "4\00\00\00\01\00\00\00\01\00\00\004\00\00\00S\00o\00m\00e\00 \00o\00t\00h\00e\00r\00 \00k\00e\00y\00 \00g\00o\00t\00 \00d\00e\00l\00e\00t\00e\00d\00")
 (data (i32.const 3088) "T\00\00\00\01\00\00\00\01\00\00\00T\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00k\00e\00y\00s\00 \00l\00e\00n\00g\00t\00h\00 \00a\00f\00t\00e\00r\00 \00r\00e\00m\00o\00v\00i\00n\00g\00 \00a\00 \00k\00e\00y\00")
 (data (i32.const 3192) "B\00\00\00\01\00\00\00\01\00\00\00B\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00k\00e\00y\00s\00w\00i\00t\00h\00d\00e\00l\00e\00t\00e\00 \00c\00o\00n\00t\00e\00n\00t\00s\00")
 (data (i32.const 3280) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00[\00")
 (data (i32.const 3304) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00]\00")
 (data (i32.const 3328) "\1c\00\00\00\01\00\00\00\01\00\00\00\1c\00\00\00A\00r\00r\00a\00y\00 \00i\00s\00 \00e\00m\00p\00t\00y\00")
 (data (i32.const 3376) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00s\00")
 (data (i32.const 3400) "0\00\00\00\01\00\00\00\01\00\00\000\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00s\00t\00r\00i\00n\00g\00 \00f\00i\00e\00l\00d\00 \00")
 (data (i32.const 3464) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00 \00:\00 \00\"\00")
 (data (i32.const 3488) "F\00\00\00\01\00\00\00\01\00\00\00F\00\00\00~\00l\00i\00b\00/\00a\00s\00s\00e\00m\00b\00l\00y\00s\00c\00r\00i\00p\00t\00-\00j\00s\00o\00n\00/\00d\00e\00c\00o\00d\00e\00r\00.\00t\00s\00")
 (data (i32.const 3576) ",\00\00\00\01\00\00\00\01\00\00\00,\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00b\00o\00o\00l\00 \00f\00i\00e\00l\00d\00 \00")
 (data (i32.const 3640) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00 \00:\00 \00")
 (data (i32.const 3664) ",\00\00\00\01\00\00\00\01\00\00\00,\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00n\00u\00l\00l\00 \00f\00i\00e\00l\00d\00 \00")
 (data (i32.const 3728) "2\00\00\00\01\00\00\00\01\00\00\002\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00i\00n\00t\00e\00g\00e\00r\00 \00f\00i\00e\00l\00d\00 \00")
 (data (i32.const 3800) ".\00\00\00\01\00\00\00\01\00\00\00.\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00a\00r\00r\00a\00y\00 \00f\00i\00e\00l\00d\00 \00")
 (data (i32.const 3864) "0\00\00\00\01\00\00\00\01\00\00\000\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00o\00b\00j\00e\00c\00t\00 \00f\00i\00e\00l\00d\00 \00")
 (data (i32.const 3928) "$\00\00\00\01\00\00\00\01\00\00\00$\00\00\00~\00l\00i\00b\00/\00t\00y\00p\00e\00d\00a\00r\00r\00a\00y\00.\00t\00s\00")
 (data (i32.const 3984) "(\00\00\00\01\00\00\00\01\00\00\00(\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00i\00n\00p\00u\00t\00 \00e\00n\00d\00")
 (data (i32.const 4040) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00{\00")
 (data (i32.const 4064) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00}\00")
 (data (i32.const 4088) "\18\00\00\00\01\00\00\00\01\00\00\00\18\00\00\00E\00x\00p\00e\00c\00t\00e\00d\00 \00\'\00,\00\'\00")
 (data (i32.const 4128) ":\00\00\00\01\00\00\00\01\00\00\00:\00\00\00E\00x\00p\00e\00c\00t\00e\00d\00 \00d\00o\00u\00b\00l\00e\00-\00q\00u\00o\00t\00e\00d\00 \00s\00t\00r\00i\00n\00g\00")
 (data (i32.const 4208) "8\00\00\00\01\00\00\00\01\00\00\008\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00c\00o\00n\00t\00r\00o\00l\00 \00c\00h\00a\00r\00a\00c\00t\00e\00r\00")
 (data (i32.const 4280) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00/\00")
 (data (i32.const 4304) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00b\00")
 (data (i32.const 4328) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00n\00")
 (data (i32.const 4352) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00r\00")
 (data (i32.const 4376) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00t\00")
 (data (i32.const 4400) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00u\00")
 (data (i32.const 4424) "&\00\00\00\01\00\00\00\01\00\00\00&\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00\\\00u\00 \00d\00i\00g\00i\00t\00")
 (data (i32.const 4480) "<\00\00\00\01\00\00\00\01\00\00\00<\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00e\00s\00c\00a\00p\00e\00d\00 \00c\00h\00a\00r\00a\00c\00t\00e\00r\00:\00 \00")
 (data (i32.const 4560) "\18\00\00\00\01\00\00\00\01\00\00\00\18\00\00\00E\00x\00p\00e\00c\00t\00e\00d\00 \00\'\00:\00\'\00")
 (data (i32.const 4600) "0\00\00\00\01\00\00\00\01\00\00\000\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00e\00n\00d\00 \00o\00f\00 \00o\00b\00j\00e\00c\00t\00")
 (data (i32.const 4664) ".\00\00\00\01\00\00\00\01\00\00\00.\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00e\00n\00d\00 \00o\00f\00 \00a\00r\00r\00a\00y\00")
 (data (i32.const 4728) "\14\00\00\00\01\00\00\00\01\00\00\00\14\00\00\00E\00x\00p\00e\00c\00t\00e\00d\00 \00\'\00")
 (data (i32.const 4768) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\'\00")
 (data (i32.const 4792) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00-\00")
 (data (i32.const 4816) "\"\00\00\00\01\00\00\00\01\00\00\00\"\00\00\00C\00a\00n\00n\00o\00t\00 \00p\00a\00r\00s\00e\00 \00J\00S\00O\00N\00")
 (data (i32.const 4872) "\14\00\00\00\01\00\00\00\01\00\00\00\14\00\00\00b\00a\00s\00e\005\008\00T\00e\00s\00t\00")
 (data (i32.const 4912) "t\00\00\00\01\00\00\00\01\00\00\00t\00\00\001\002\003\004\005\006\007\008\009\00A\00B\00C\00D\00E\00F\00G\00H\00J\00K\00L\00M\00N\00P\00Q\00R\00S\00T\00U\00V\00W\00X\00Y\00Z\00a\00b\00c\00d\00e\00f\00g\00h\00i\00j\00k\00m\00n\00o\00p\00q\00r\00s\00t\00u\00v\00w\00x\00y\00z\00")
 (data (i32.const 5048) "\1c\00\00\00\01\00\00\00\01\00\00\00\1c\00\00\00N\00o\00n\00-\00z\00e\00r\00o\00 \00c\00a\00r\00r\00y\00")
 (data (i32.const 5096) "<\00\00\00\01\00\00\00\01\00\00\00<\00\00\00~\00l\00i\00b\00/\00n\00e\00a\00r\00-\00r\00u\00n\00t\00i\00m\00e\00-\00t\00s\00/\00b\00a\00s\00e\005\008\00.\00t\00s\00")
 (data (i32.const 5176) "*\00\00\00\01\00\00\00\01\00\00\00*\00\00\00b\00a\00s\00e\005\008\00 \00e\00n\00c\00o\00d\00e\00d\00 \00v\00a\00l\00u\00e\00 \00")
 (data (i32.const 5240) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\001\00T\00M\00u\00")
 (data (i32.const 5264) "N\00\00\00\01\00\00\00\01\00\00\00N\00\00\00W\00r\00o\00n\00g\00 \00e\00n\00c\00o\00d\00e\00d\00 \00v\00a\00l\00u\00e\00 \00f\00o\00r\00 \00b\00a\00s\00e\005\008\00 \00e\00n\00c\00o\00d\00i\00n\00g\00")
 (data (i32.const 5360) "\14\00\00\00\01\00\00\00\01\00\00\00\14\00\00\00b\00a\00s\00e\006\004\00T\00e\00s\00t\00")
 (data (i32.const 5400) "\10\00\00\00\01\00\00\00\01\00\00\00\10\00\00\00A\00A\00F\00a\00Z\00A\00=\00=\00")
 (data (i32.const 5432) "\\\00\00\00\01\00\00\00\01\00\00\00\\\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00d\00e\00c\00o\00d\00e\00d\00 \00v\00a\00l\00u\00e\00 \00a\00f\00t\00e\00r\00 \00b\00a\00s\00e\006\004\00 \00r\00o\00u\00n\00d\00t\00r\00i\00p\00")
 (data (i32.const 5544) "\0e\00\00\00\01\00\00\00\01\00\00\00\0e\00\00\00l\00o\00g\00T\00e\00s\00t\00")
 (data (i32.const 5576) "4\00\00\00\01\00\00\00\01\00\00\004\00\00\00s\00t\00o\00r\00a\00g\00e\00S\00t\00r\00i\00n\00g\00R\00o\00u\00n\00d\00t\00r\00i\00p\00T\00e\00s\00t\00")
 (data (i32.const 5648) "\18\00\00\00\01\00\00\00\01\00\00\00\18\00\00\00s\00o\00m\00e\00O\00t\00h\00e\00r\00K\00e\00y\00")
 (data (i32.const 5688) "\14\00\00\00\01\00\00\00\01\00\00\00\14\00\00\00o\00t\00h\00e\00r\00V\00a\00l\00u\00e\00")
 (data (i32.const 5728) "8\00\00\00\01\00\00\00\01\00\00\008\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00v\00a\00l\00u\00e\00 \00f\00r\00o\00m\00 \00s\00t\00o\00r\00a\00g\00e\00")
 (data (i32.const 5800) ":\00\00\00\01\00\00\00\01\00\00\00:\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00v\00a\00l\00u\00e\002\00 \00f\00r\00o\00m\00 \00s\00t\00o\00r\00a\00g\00e\00")
 (data (i32.const 5880) "\1c\00\00\00\01\00\00\00\01\00\00\00\1c\00\00\00n\00o\00n\00e\00x\00i\00s\00t\00e\00n\00t\00K\00e\00y\00")
 (data (i32.const 5928) "p\00\00\00\01\00\00\00\01\00\00\00p\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00d\00 \00v\00a\00l\00u\00e\00 \00o\00n\00 \00g\00e\00t\00t\00i\00n\00g\00 \00s\00t\00r\00i\00n\00g\00 \00w\00i\00t\00h\00 \00a\00 \00n\00o\00n\00e\00x\00i\00s\00t\00e\00n\00t\00 \00k\00e\00y\00")
 (data (i32.const 6056) "2\00\00\00\01\00\00\00\01\00\00\002\00\00\00s\00t\00o\00r\00a\00g\00e\00B\00y\00t\00e\00s\00R\00o\00u\00n\00d\00t\00r\00i\00p\00T\00e\00s\00t\00")
 (data (i32.const 6128) "D\00\00\00\01\00\00\00\01\00\00\00D\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00b\00y\00t\00e\00s\00 \00v\00a\00l\00u\00e\00 \00f\00r\00o\00m\00 \00s\00t\00o\00r\00a\00g\00e\00")
 (data (i32.const 6216) "n\00\00\00\01\00\00\00\01\00\00\00n\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00d\00 \00v\00a\00l\00u\00e\00 \00o\00n\00 \00g\00e\00t\00t\00i\00n\00g\00 \00b\00y\00t\00e\00s\00 \00w\00i\00t\00h\00 \00a\00 \00n\00o\00n\00e\00x\00i\00s\00t\00e\00n\00t\00 \00k\00e\00y\00")
 (data (i32.const 6344) "B\00\00\00\01\00\00\00\01\00\00\00B\00\00\00s\00t\00o\00r\00a\00g\00e\00G\00e\00n\00e\00r\00i\00c\00G\00e\00t\00S\00e\00t\00R\00o\00u\00n\00d\00t\00r\00i\00p\00T\00e\00s\00t\00")
 (data (i32.const 6432) "$\00\00\00\01\00\00\00\01\00\00\00$\00\00\00m\00y\00s\00t\00e\00r\00i\00o\00u\00s\00S\00t\00r\00a\00n\00g\00e\00r\00")
 (data (i32.const 6488) "\16\00\00\00\01\00\00\00\01\00\00\00\16\00\00\00H\00e\00l\00l\00o\00 \00w\00o\00r\00l\00d\00")
 (data (i32.const 6528) "\10\00\00\00\01\00\00\00\01\00\00\00\10\00\00\00m\00e\00s\00s\00a\00g\00e\001\00")
 (data (i32.const 6560) "\0c\00\00\00\01\00\00\00\01\00\00\00\0c\00\00\00s\00e\00n\00d\00e\00r\00")
 (data (i32.const 6592) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00t\00e\00x\00t\00")
 (data (i32.const 6616) "\0c\00\00\00\01\00\00\00\01\00\00\00\0c\00\00\00n\00u\00m\00b\00e\00r\00")
 (data (i32.const 6648) "\"\00\00\00\01\00\00\00\01\00\00\00\"\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00m\00o\00d\00e\00l\00.\00t\00s\00")
 (data (i32.const 6704) "d\00\00\00\01\00\00\00\01\00\00\00d\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00d\00a\00t\00a\00 \00v\00a\00l\00u\00e\00 \00(\00s\00e\00n\00d\00e\00r\00)\00 \00f\00o\00r\00 \00r\00e\00t\00r\00i\00e\00v\00e\00d\00 \00o\00b\00j\00e\00c\00t\00")
 (data (i32.const 6824) "`\00\00\00\01\00\00\00\01\00\00\00`\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00d\00a\00t\00a\00 \00v\00a\00l\00u\00e\00 \00(\00t\00e\00x\00t\00)\00 \00f\00o\00r\00 \00r\00e\00t\00r\00i\00e\00v\00e\00d\00 \00o\00b\00j\00e\00c\00t\00")
 (data (i32.const 6936) "d\00\00\00\01\00\00\00\01\00\00\00d\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00d\00a\00t\00a\00 \00v\00a\00l\00u\00e\00 \00(\00n\00u\00m\00b\00e\00r\00)\00 \00f\00o\00r\00 \00r\00e\00t\00r\00i\00e\00v\00e\00d\00 \00o\00b\00j\00e\00c\00t\00")
 (data (i32.const 7056) "\16\00\00\00\01\00\00\00\01\00\00\00\16\00\00\00n\00o\00n\00e\00x\00i\00s\00t\00e\00n\00t\00")
 (data (i32.const 7096) "^\00\00\00\01\00\00\00\01\00\00\00^\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00d\00a\00t\00a\00 \00v\00a\00l\00u\00e\00 \00f\00o\00r\00 \00g\00e\00t\00<\00T\00>\00 \00n\00o\00n\00e\00x\00i\00s\00t\00e\00n\00t\00 \00k\00e\00y\00")
 (data (i32.const 7208) "\10\00\00\00\01\00\00\00\01\00\00\00\10\00\00\00m\00e\00s\00s\00a\00g\00e\002\00")
 (data (i32.const 7240) "\0c\00\00\00\01\00\00\00\01\00\00\00\0c\00\00\00u\006\004\00k\00e\00y\00")
 (data (i32.const 7272) "L\00\00\00\01\00\00\00\01\00\00\00L\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00d\00a\00t\00a\00 \00v\00a\00l\00u\00e\00 \00f\00o\00r\00 \00u\006\004\00 \00r\00o\00u\00n\00d\00t\00r\00i\00p\00")
 (data (i32.const 7368) "`\00\00\00\01\00\00\00\01\00\00\00`\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00d\00a\00t\00a\00 \00v\00a\00l\00u\00e\00 \00f\00o\00r\00 \00u\006\004\00 \00g\00e\00t\00 \00n\00o\00n\00e\00x\00i\00s\00t\00e\00n\00t\00 \00k\00e\00y\00")
 (data (i32.const 7480) "\0c\00\00\00\01\00\00\00\01\00\00\00\0c\00\00\00u\003\002\00k\00e\00y\00")
 (data (i32.const 7512) "L\00\00\00\01\00\00\00\01\00\00\00L\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00d\00a\00t\00a\00 \00v\00a\00l\00u\00e\00 \00f\00o\00r\00 \00u\003\002\00 \00r\00o\00u\00n\00d\00t\00r\00i\00p\00")
 (data (i32.const 7608) "`\00\00\00\01\00\00\00\01\00\00\00`\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00d\00a\00t\00a\00 \00v\00a\00l\00u\00e\00 \00f\00o\00r\00 \00u\003\002\00 \00g\00e\00t\00 \00n\00o\00n\00e\00x\00i\00s\00t\00e\00n\00t\00 \00k\00e\00y\00")
 (data (i32.const 7720) "\0c\00\00\00\01\00\00\00\01\00\00\00\0c\00\00\00i\003\002\00k\00e\00y\00")
 (data (i32.const 7752) "L\00\00\00\01\00\00\00\01\00\00\00L\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00d\00a\00t\00a\00 \00v\00a\00l\00u\00e\00 \00f\00o\00r\00 \00i\003\002\00 \00r\00o\00u\00n\00d\00t\00r\00i\00p\00")
 (data (i32.const 7848) "`\00\00\00\01\00\00\00\01\00\00\00`\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00d\00a\00t\00a\00 \00v\00a\00l\00u\00e\00 \00f\00o\00r\00 \00i\003\002\00 \00g\00e\00t\00 \00n\00o\00n\00e\00x\00i\00s\00t\00e\00n\00t\00 \00k\00e\00y\00")
 (data (i32.const 7960) "\0e\00\00\00\01\00\00\00\01\00\00\00\0e\00\00\00b\00o\00o\00l\00k\00e\00y\00")
 (data (i32.const 7992) "N\00\00\00\01\00\00\00\01\00\00\00N\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00d\00a\00t\00a\00 \00v\00a\00l\00u\00e\00 \00f\00o\00r\00 \00b\00o\00o\00l\00 \00r\00o\00u\00n\00d\00t\00r\00i\00p\00")
 (data (i32.const 8088) "b\00\00\00\01\00\00\00\01\00\00\00b\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00d\00a\00t\00a\00 \00v\00a\00l\00u\00e\00 \00f\00o\00r\00 \00b\00o\00o\00l\00 \00g\00e\00t\00 \00n\00o\00n\00e\00x\00i\00s\00t\00e\00n\00t\00 \00k\00e\00y\00")
 (data (i32.const 8208) "\12\00\00\00\01\00\00\00\01\00\00\00\12\00\00\00s\00t\00r\00i\00n\00g\00k\00e\00y\00")
 (data (i32.const 8248) "\16\00\00\00\01\00\00\00\01\00\00\00\16\00\00\00S\00t\00r\00i\00n\00g\00V\00a\00l\00u\00e\00")
 (data (i32.const 8288) "R\00\00\00\01\00\00\00\01\00\00\00R\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00d\00a\00t\00a\00 \00v\00a\00l\00u\00e\00 \00f\00o\00r\00 \00s\00t\00r\00i\00n\00g\00 \00r\00o\00u\00n\00d\00t\00r\00i\00p\00")
 (data (i32.const 8392) "l\00\00\00\01\00\00\00\01\00\00\00l\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00d\00a\00t\00a\00 \00v\00a\00l\00u\00e\00 \00f\00o\00r\00 \00g\00e\00t\00<\00T\00>\00 \00s\00t\00r\00i\00n\00g\00 \00n\00o\00n\00e\00x\00i\00s\00t\00e\00n\00t\00 \00k\00e\00y\00")
 (data (i32.const 8520) "\10\00\00\00\01\00\00\00\01\00\00\00\10\00\00\00m\00a\00p\00T\00e\00s\00t\00s\00")
 (data (i32.const 8552) "\n\00\00\00\01\00\00\00\01\00\00\00\n\00\00\00m\00a\00p\00I\00d\00")
 (data (i32.const 8584) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00z\00z\00z\00")
 (data (i32.const 8608) "<\00\00\00\01\00\00\00\01\00\00\00<\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00v\00a\00l\00u\00e\00s\00 \00i\00n\00 \00e\00m\00p\00t\00y\00 \00m\00a\00p\00")
 (data (i32.const 8688) "\1c\00\00\00\01\00\00\00\01\00\00\00\1c\00\00\00n\00o\00n\00e\00x\00i\00s\00t\00e\00n\00t\00k\00e\00y\00")
 (data (i32.const 8736) ">\00\00\00\01\00\00\00\01\00\00\00>\00\00\00M\00a\00p\00 \00c\00o\00n\00t\00a\00i\00n\00s\00 \00a\00 \00n\00o\00n\00 \00e\00x\00i\00s\00t\00e\00n\00t\00 \00k\00e\00y\00")
 (data (i32.const 8816) "X\00\00\00\01\00\00\00\01\00\00\00X\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00r\00e\00s\00u\00l\00t\00 \00o\00n\00 \00g\00e\00t\00 \00w\00i\00t\00h\00 \00n\00o\00n\00e\00x\00i\00s\00t\00e\00n\00t\00 \00k\00e\00y\00")
 (data (i32.const 8920) "\0e\00\00\00\01\00\00\00\01\00\00\00\0e\00\00\00m\00a\00p\00K\00e\00y\001\00")
 (data (i32.const 8952) "\0e\00\00\00\01\00\00\00\01\00\00\00\0e\00\00\00m\00a\00p\00K\00e\00y\003\00")
 (data (i32.const 8984) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00j\00o\00e\00")
 (data (i32.const 9008) "\n\00\00\00\01\00\00\00\01\00\00\00\n\00\00\00H\00o\00w\00d\00y\00")
 (data (i32.const 9040) "X\00\00\00\01\00\00\00\01\00\00\00X\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00v\00a\00l\00u\00e\00s\00 \00s\00i\00z\00e\00 \00i\00n\00 \00m\00a\00p\00 \00w\00i\00t\00h\00 \002\00 \00e\00n\00t\00r\00i\00e\00s\00")
 (data (i32.const 9144) "`\00\00\00\01\00\00\00\01\00\00\00`\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00v\00a\00l\00u\00e\00s\00 \00c\00o\00n\00t\00e\00n\00t\00s\00 \00i\00n\00 \00m\00a\00p\00 \00w\00i\00t\00h\00 \002\00 \00e\00n\00t\00r\00i\00e\00s\00")
 (data (i32.const 9256) "\0e\00\00\00\01\00\00\00\01\00\00\00\0e\00\00\00m\00a\00p\00K\00e\00y\002\00")
 (data (i32.const 9288) "\0e\00\00\00\01\00\00\00\01\00\00\00\0e\00\00\00m\00a\00p\00K\00e\00y\004\00")
 (data (i32.const 9320) "f\00\00\00\01\00\00\00\01\00\00\00f\00\00\00M\00a\00p\00 \00d\00o\00e\00s\00 \00n\00o\00t\00 \00c\00o\00n\00t\00a\00i\00n\00 \00a\00 \00k\00e\00y\00 \00t\00h\00a\00t\00 \00w\00a\00s\00 \00a\00d\00d\00e\00d\00 \00(\00m\00a\00p\00K\00e\00y\001\00)\00")
 (data (i32.const 9440) "f\00\00\00\01\00\00\00\01\00\00\00f\00\00\00M\00a\00p\00 \00d\00o\00e\00s\00 \00n\00o\00t\00 \00c\00o\00n\00t\00a\00i\00n\00 \00a\00 \00k\00e\00y\00 \00t\00h\00a\00t\00 \00w\00a\00s\00 \00a\00d\00d\00e\00d\00 \00(\00m\00a\00p\00K\00e\00y\003\00)\00")
 (data (i32.const 9560) ":\00\00\00\01\00\00\00\01\00\00\00:\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00r\00e\00s\00u\00l\00t\00 \00f\00r\00o\00m\00 \00m\00a\00p\00 \00g\00e\00t\00")
 (data (i32.const 9640) "T\00\00\00\01\00\00\00\01\00\00\00T\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00v\00a\00l\00u\00e\00s\00 \00s\00i\00z\00e\00 \00i\00n\00 \00m\00a\00p\00 \00a\00f\00t\00e\00r\00 \00d\00e\00l\00e\00t\00e\00")
 (data (i32.const 9744) "\\\00\00\00\01\00\00\00\01\00\00\00\\\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00v\00a\00l\00u\00e\00s\00 \00c\00o\00n\00t\00e\00n\00t\00s\00 \00i\00n\00 \00m\00a\00p\00 \00a\00f\00t\00e\00r\00 \00d\00e\00l\00e\00t\00e\00")
 (data (i32.const 9856) "F\00\00\00\01\00\00\00\01\00\00\00F\00\00\00M\00a\00p\00 \00c\00o\00n\00t\00a\00i\00n\00s\00 \00a\00 \00k\00e\00y\00 \00t\00h\00a\00t\00 \00w\00a\00s\00 \00d\00e\00l\00e\00t\00e\00d\00")
 (data (i32.const 9944) "\9a\00\00\00\01\00\00\00\01\00\00\00\9a\00\00\00M\00a\00p\00 \00d\00o\00e\00s\00 \00n\00o\00t\00 \00c\00o\00n\00t\00a\00i\00n\00 \00a\00 \00k\00e\00y\00 \00t\00h\00a\00t\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00t\00h\00e\00r\00e\00 \00a\00f\00t\00e\00r\00 \00d\00e\00l\00e\00t\00i\00o\00n\00 \00o\00f\00 \00a\00n\00o\00t\00h\00e\00r\00 \00k\00e\00y\00")
 (data (i32.const 10120) "T\00\00\00\01\00\00\00\01\00\00\00T\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00r\00e\00s\00u\00l\00t\00 \00f\00r\00o\00m\00 \00m\00a\00p\00 \00g\00e\00t\00 \00a\00f\00t\00e\00r\00 \00d\00e\00l\00e\00t\00e\00")
 (data (i32.const 10224) "\\\00\00\00\01\00\00\00\01\00\00\00\\\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00r\00e\00s\00u\00l\00t\00 \00f\00r\00o\00m\00 \00m\00a\00p\00 \00g\00e\00t\00 \00o\00n\00 \00a\00 \00d\00e\00l\00e\00t\00e\00d\00 \00k\00e\00y\00")
 (data (i32.const 10336) "\1a\00\00\00\01\00\00\00\01\00\00\00\1a\00\00\00m\00a\00p\00P\00r\00i\00m\00i\00t\00i\00v\00e\00s\00")
 (data (i32.const 10384) "B\00\00\00\01\00\00\00\01\00\00\00B\00\00\00K\00e\00y\00 \00i\00s\00 \00n\00o\00t\00 \00p\00r\00e\00s\00e\00n\00t\00 \00i\00n\00 \00t\00h\00e\00 \00s\00t\00o\00r\00a\00g\00e\00")
 (data (i32.const 10472) ">\00\00\00\01\00\00\00\01\00\00\00>\00\00\00~\00l\00i\00b\00/\00n\00e\00a\00r\00-\00r\00u\00n\00t\00i\00m\00e\00-\00t\00s\00/\00s\00t\00o\00r\00a\00g\00e\00.\00t\00s\00")
 (data (i32.const 10552) "<\00\00\00\01\00\00\00\01\00\00\00<\00\00\00w\00r\00o\00n\00g\00 \00v\00a\00l\00u\00e\00 \00o\00n\00 \00m\00a\00p\00 \00g\00e\00t\00 \00f\00o\00r\00 \00i\003\002\00")
 (data (i32.const 10632) "\16\00\00\00\01\00\00\00\01\00\00\00\16\00\00\00v\00e\00c\00t\00o\00r\00T\00e\00s\00t\00s\00")
 (data (i32.const 10672) "\0e\00\00\00\01\00\00\00\01\00\00\00\0e\00\00\00v\00e\00c\00t\00o\00r\001\00")
 (data (i32.const 10704) ",\00\00\00\01\00\00\00\01\00\00\00,\00\00\00V\00e\00c\00t\00o\00r\00 \00n\00o\00t\00 \00i\00n\00i\00t\00i\00a\00l\00i\00z\00e\00d\00")
 (data (i32.const 10768) "B\00\00\00\01\00\00\00\01\00\00\00B\00\00\00E\00m\00p\00t\00y\00 \00v\00e\00c\00t\00o\00r\00 \00h\00a\00s\00 \00i\00n\00c\00o\00r\00r\00e\00c\00t\00 \00l\00e\00n\00g\00t\00h\00")
 (data (i32.const 10856) "H\00\00\00\01\00\00\00\01\00\00\00H\00\00\00E\00m\00p\00t\00y\00 \00v\00e\00c\00t\00o\00r\00 \00i\00n\00c\00o\00r\00r\00e\00c\00t\00l\00y\00 \00h\00a\00s\00 \00i\00n\00d\00e\00x\00 \000\00")
 (data (i32.const 10944) "B\00\00\00\01\00\00\00\01\00\00\00B\00\00\00i\00s\00E\00m\00p\00t\00y\00 \00i\00n\00c\00o\00r\00r\00e\00c\00t\00 \00o\00n\00 \00e\00m\00p\00t\00y\00 \00v\00e\00c\00t\00o\00r\00")
 (data (i32.const 11032) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00b\00b\00")
 (data (i32.const 11056) "6\00\00\00\01\00\00\00\01\00\00\006\00\00\00V\00e\00c\00t\00o\00r\00 \00h\00a\00s\00 \00i\00n\00c\00o\00r\00r\00e\00c\00t\00 \00l\00e\00n\00g\00t\00h\00")
 (data (i32.const 11128) "L\00\00\00\01\00\00\00\01\00\00\00L\00\00\00N\00o\00n\00 \00e\00m\00p\00t\00y\00 \00v\00e\00c\00t\00o\00r\00 \00d\00o\00e\00s\00 \00n\00o\00t\00 \00h\00a\00v\00e\00 \00i\00n\00d\00e\00x\00 \000\00")
 (data (i32.const 11224) "J\00\00\00\01\00\00\00\01\00\00\00J\00\00\00V\00e\00c\00t\00o\00r\00 \00s\00i\00z\00e\00 \001\00 \00i\00n\00c\00o\00r\00r\00e\00c\00t\00l\00y\00 \00h\00a\00s\00 \00i\00n\00d\00e\00x\00 \001\00")
 (data (i32.const 11320) "J\00\00\00\01\00\00\00\01\00\00\00J\00\00\00i\00s\00E\00m\00p\00t\00y\00 \00i\00n\00c\00o\00r\00r\00e\00c\00t\00 \00o\00n\00 \00n\00o\00n\00-\00e\00m\00p\00t\00y\00 \00v\00e\00c\00t\00o\00r\00")
 (data (i32.const 11416) "h\00\00\00\01\00\00\00\01\00\00\00h\00\00\00~\00l\00i\00b\00/\00n\00e\00a\00r\00-\00r\00u\00n\00t\00i\00m\00e\00-\00t\00s\00/\00c\00o\00l\00l\00e\00c\00t\00i\00o\00n\00s\00/\00p\00e\00r\00s\00i\00s\00t\00e\00n\00t\00V\00e\00c\00t\00o\00r\00.\00t\00s\00")
 (data (i32.const 11536) "(\00\00\00\01\00\00\00\01\00\00\00(\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00b\00a\00c\00k\00 \00e\00n\00t\00r\00y\00")
 (data (i32.const 11592) "(\00\00\00\01\00\00\00\01\00\00\00(\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00l\00a\00s\00t\00 \00e\00n\00t\00r\00y\00")
 (data (i32.const 11648) "*\00\00\00\01\00\00\00\01\00\00\00*\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00f\00r\00o\00n\00t\00 \00e\00n\00t\00r\00y\00")
 (data (i32.const 11712) "*\00\00\00\01\00\00\00\01\00\00\00*\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00f\00i\00r\00s\00t\00 \00e\00n\00t\00r\00y\00")
 (data (i32.const 11776) "2\00\00\00\01\00\00\00\01\00\00\002\00\00\00i\00n\00c\00o\00r\00r\00e\00c\00t\00 \00v\00e\00c\00t\00o\00r\00 \00c\00o\00n\00t\00e\00n\00t\00s\00")
 (data (i32.const 11848) "\04\00\00\00\01\00\00\00\00\00\00\00\04\00\00\00(+\00\00")
 (data (i32.const 11872) "\n\00\00\00\01\00\00\00\01\00\00\00\n\00\00\00w\00r\00o\00n\00g\00")
 (data (i32.const 11904) "R\00\00\00\01\00\00\00\01\00\00\00R\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00v\00e\00c\00t\00o\00r\00 \00c\00o\00n\00t\00e\00n\00t\00s\00.\00 \00E\00x\00p\00e\00c\00t\00e\00d\00 \00[\00b\00b\00]\00")
 (data (i32.const 12008) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00b\00c\00")
 (data (i32.const 12032) "F\00\00\00\01\00\00\00\01\00\00\00F\00\00\00V\00e\00c\00t\00o\00r\00 \00s\00i\00z\00e\00 \002\00 \00d\00o\00e\00s\00 \00n\00o\00t\00 \00h\00a\00v\00e\00 \00i\00n\00d\00e\00x\00 \001\00")
 (data (i32.const 12120) "J\00\00\00\01\00\00\00\01\00\00\00J\00\00\00V\00e\00c\00t\00o\00r\00 \00s\00i\00z\00e\00 \002\00 \00i\00n\00c\00o\00r\00r\00e\00c\00t\00l\00y\00 \00h\00a\00s\00 \00i\00n\00d\00e\00x\00 \002\00")
 (data (i32.const 12216) "\08\00\00\00\01\00\00\00\00\00\00\00\08\00\00\00(+\00\00\f8.\00\00")
 (data (i32.const 12240) "Z\00\00\00\01\00\00\00\01\00\00\00Z\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00v\00e\00c\00t\00o\00r\00 \00c\00o\00n\00t\00e\00n\00t\00s\00.\00 \00E\00x\00p\00e\00c\00t\00e\00d\00 \00[\00b\00a\00,\00 \00b\00b\00]\00")
 (data (i32.const 12352) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00b\00d\00")
 (data (i32.const 12376) "\08\00\00\00\01\00\00\00\00\00\00\00\08\00\00\00(+\00\00P0\00\00")
 (data (i32.const 12400) "Z\00\00\00\01\00\00\00\01\00\00\00Z\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00v\00e\00c\00t\00o\00r\00 \00c\00o\00n\00t\00e\00n\00t\00s\00.\00 \00E\00x\00p\00e\00c\00t\00e\00d\00 \00[\00b\00a\00,\00 \00b\00d\00]\00")
 (data (i32.const 12512) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00a\00a\00")
 (data (i32.const 12536) "\08\00\00\00\01\00\00\00\00\00\00\00\08\00\00\00\f00\00\00P0\00\00")
 (data (i32.const 12560) "Z\00\00\00\01\00\00\00\01\00\00\00Z\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00v\00e\00c\00t\00o\00r\00 \00c\00o\00n\00t\00e\00n\00t\00s\00.\00 \00E\00x\00p\00e\00c\00t\00e\00d\00 \00[\00a\00a\00,\00 \00b\00d\00]\00")
 (data (i32.const 12672) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00b\00e\00")
 (data (i32.const 12696) "\0c\00\00\00\01\00\00\00\00\00\00\00\0c\00\00\00\f00\00\00P0\00\00\901\00\00")
 (data (i32.const 12728) "b\00\00\00\01\00\00\00\01\00\00\00b\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00v\00e\00c\00t\00o\00r\00 \00c\00o\00n\00t\00e\00n\00t\00s\00.\00 \00E\00x\00p\00e\00c\00t\00e\00d\00 \00[\00a\00a\00,\00 \00b\00d\00,\00 \00b\00e\00]\00")
 (data (i32.const 12848) "\1e\00\00\00\01\00\00\00\01\00\00\00\1e\00\00\00V\00e\00c\00t\00o\00r\00 \00i\00s\00 \00e\00m\00p\00t\00y\00")
 (data (i32.const 12896) "\08\00\00\00\01\00\00\00\00\00\00\00\08\00\00\00\f00\00\00P0\00\00")
 (data (i32.const 12920) "P\00\00\00\01\00\00\00\01\00\00\00P\00\00\00V\00e\00c\00t\00o\00r\00 \00h\00a\00s\00 \00i\00n\00c\00o\00r\00r\00e\00c\00t\00 \00l\00e\00n\00g\00t\00h\00 \00a\00f\00t\00e\00r\00 \00d\00e\00l\00e\00t\00e\00")
 (data (i32.const 13016) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00b\00a\00")
 (data (i32.const 13040) "\08\00\00\00\01\00\00\00\00\00\00\00\08\00\00\00\e82\00\00P0\00\00")
 (data (i32.const 13064) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00b\00f\00")
 (data (i32.const 13088) "\0c\00\00\00\01\00\00\00\00\00\00\00\0c\00\00\00\e82\00\00P0\00\00\183\00\00")
 (data (i32.const 13120) "b\00\00\00\01\00\00\00\01\00\00\00b\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00v\00e\00c\00t\00o\00r\00 \00c\00o\00n\00t\00e\00n\00t\00s\00.\00 \00E\00x\00p\00e\00c\00t\00e\00d\00 \00[\00b\00a\00,\00 \00b\00d\00,\00 \00b\00f\00]\00")
 (data (i32.const 13240) "\08\00\00\00\01\00\00\00\00\00\00\00\08\00\00\00\e82\00\00P0\00\00")
 (data (i32.const 13264) "\12\00\00\00\01\00\00\00\01\00\00\00\12\00\00\00v\00e\00c\00t\00o\00r\00i\003\002\00")
 (data (i32.const 13304) ">\00\00\00\01\00\00\00\01\00\00\00>\00\00\00V\00e\00c\00t\00o\00r\00 \00i\003\002\00 \00h\00a\00s\00 \00i\00n\00c\00o\00r\00r\00e\00c\00t\00 \00l\00e\00n\00g\00t\00h\00")
 (data (i32.const 13384) "\14\00\00\00\01\00\00\00\01\00\00\00\14\00\00\00d\00e\00q\00u\00e\00T\00e\00s\00t\00s\00")
 (data (i32.const 13424) "\0e\00\00\00\01\00\00\00\01\00\00\00\0e\00\00\00d\00e\00q\00u\00e\00i\00d\00")
 (data (i32.const 13456) "6\00\00\00\01\00\00\00\01\00\00\006\00\00\00e\00m\00p\00t\00y\00 \00d\00e\00q\00u\00e\00 \00l\00e\00n\00g\00t\00h\00 \00i\00s\00 \00w\00r\00o\00n\00g\00")
 (data (i32.const 13528) "8\00\00\00\01\00\00\00\01\00\00\008\00\00\00e\00m\00p\00t\00y\00 \00d\00e\00q\00u\00e\00 \00c\00o\00n\00t\00a\00i\00n\00s\00 \00i\00n\00d\00e\00x\00 \000\00")
 (data (i32.const 13600) "J\00\00\00\01\00\00\00\01\00\00\00J\00\00\00e\00m\00p\00t\00y\00 \00d\00e\00q\00u\00e\00 \00r\00e\00t\00u\00r\00n\00s\00 \00f\00a\00l\00s\00e\00 \00f\00o\00r\00 \00i\00s\00E\00m\00p\00t\00y\00")
 (data (i32.const 13696) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\001\00")
 (data (i32.const 13720) "*\00\00\00\01\00\00\00\01\00\00\00*\00\00\00d\00e\00q\00u\00e\00 \00l\00e\00n\00g\00t\00h\00 \00i\00s\00 \00w\00r\00o\00n\00g\00")
 (data (i32.const 13784) "<\00\00\00\01\00\00\00\01\00\00\00<\00\00\00d\00e\00q\00u\00e\00 \00d\00o\00e\00s\00 \00n\00o\00t\00 \00c\00o\00n\00t\00a\00i\00n\00 \00i\00n\00d\00e\00x\00 \000\00")
 (data (i32.const 13864) "<\00\00\00\01\00\00\00\01\00\00\00<\00\00\00d\00e\00q\00u\00e\00 \00r\00e\00t\00u\00r\00n\00s\00 \00t\00r\00u\00e\00 \00f\00o\00r\00 \00i\00s\00E\00m\00p\00t\00y\00")
 (data (i32.const 13944) "f\00\00\00\01\00\00\00\01\00\00\00f\00\00\00~\00l\00i\00b\00/\00n\00e\00a\00r\00-\00r\00u\00n\00t\00i\00m\00e\00-\00t\00s\00/\00c\00o\00l\00l\00e\00c\00t\00i\00o\00n\00s\00/\00p\00e\00r\00s\00i\00s\00t\00e\00n\00t\00D\00e\00q\00u\00e\00.\00t\00s\00")
 (data (i32.const 14064) "8\00\00\00\01\00\00\00\01\00\00\008\00\00\00w\00r\00o\00n\00g\00 \00e\00l\00e\00m\00e\00n\00t\00 \00v\00a\00l\00u\00e\00 \00u\00s\00i\00n\00g\00 \00[\00]\00")
 (data (i32.const 14136) "$\00\00\00\01\00\00\00\01\00\00\00$\00\00\00w\00r\00o\00n\00g\00 \00b\00a\00c\00k\00 \00e\00l\00e\00m\00e\00n\00t\00")
 (data (i32.const 14192) "&\00\00\00\01\00\00\00\01\00\00\00&\00\00\00w\00r\00o\00n\00g\00 \00f\00r\00o\00n\00t\00 \00e\00l\00e\00m\00e\00n\00t\00")
 (data (i32.const 14248) "&\00\00\00\01\00\00\00\01\00\00\00&\00\00\00w\00r\00o\00n\00g\00 \00f\00i\00r\00s\00t\00 \00e\00l\00e\00m\00e\00n\00t\00")
 (data (i32.const 14304) "$\00\00\00\01\00\00\00\01\00\00\00$\00\00\00w\00r\00o\00n\00g\00 \00l\00a\00s\00t\00 \00e\00l\00e\00m\00e\00n\00t\00")
 (data (i32.const 14360) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00-\002\00")
 (data (i32.const 14384) "<\00\00\00\01\00\00\00\01\00\00\00<\00\00\00d\00e\00q\00u\00e\00 \00d\00o\00e\00s\00 \00n\00o\00t\00 \00c\00o\00n\00t\00a\00i\00n\00 \00i\00n\00d\00e\00x\00 \001\00")
 (data (i32.const 14464) "\1c\00\00\00\01\00\00\00\01\00\00\00\1c\00\00\00D\00e\00q\00u\00e\00 \00i\00s\00 \00e\00m\00p\00t\00y\00")
 (data (i32.const 14512) "D\00\00\00\01\00\00\00\01\00\00\00D\00\00\00d\00e\00q\00u\00e\00 \00o\00f\00 \00l\00e\00n\00g\00t\00h\00 \001\00 \00c\00o\00n\00t\00a\00i\00n\00s\00 \00i\00n\00d\00e\00x\00 \001\00")
 (data (i32.const 14600) "\12\00\00\00\01\00\00\00\01\00\00\00\12\00\00\00t\00o\00p\00n\00T\00e\00s\00t\00s\00")
 (data (i32.const 14640) "\0c\00\00\00\01\00\00\00\01\00\00\00\0c\00\00\00t\00o\00p\00n\00i\00d\00")
 (data (i32.const 14672) "\18\00\00\00\01\00\00\00\01\00\00\00\18\00\00\00t\00o\00p\00n\00 \00i\00s\00 \00n\00u\00l\00l\00")
 (data (i32.const 14712) "J\00\00\00\01\00\00\00\01\00\00\00J\00\00\00e\00m\00p\00t\00y\00 \00t\00o\00p\00n\00 \00-\00 \00w\00r\00o\00n\00g\00 \00r\00e\00s\00u\00l\00t\00 \00f\00o\00r\00 \00i\00s\00E\00m\00p\00t\00y\00")
 (data (i32.const 14808) "2\00\00\00\01\00\00\00\01\00\00\002\00\00\00e\00m\00p\00t\00y\00 \00t\00o\00p\00n\00 \00-\00 \00w\00r\00o\00n\00g\00 \00l\00e\00n\00g\00t\00h\00")
 (data (i32.const 14880) "J\00\00\00\01\00\00\00\01\00\00\00J\00\00\00e\00m\00p\00t\00y\00 \00t\00o\00p\00n\00 \00-\00 \00c\00o\00n\00t\00a\00i\00n\00s\00 \00n\00o\00n\00e\00x\00i\00s\00t\00e\00n\00t\00 \00k\00e\00y\00")
 (data (i32.const 14976) "V\00\00\00\01\00\00\00\01\00\00\00V\00\00\00k\00e\00y\00s\00 \00t\00o\00 \00r\00a\00t\00i\00n\00g\00s\00 \00f\00o\00r\00 \00e\00m\00p\00t\00y\00 \00t\00o\00p\00n\00 \00i\00s\00 \00n\00o\00t\00 \00e\00m\00p\00t\00y\00")
 (data (i32.const 15080) "\\\00\00\00\01\00\00\00\01\00\00\00\\\00\00\00g\00e\00t\00 \00t\00o\00p\00 \00f\00o\00r\00 \00e\00m\00p\00t\00y\00 \00t\00o\00p\00n\00 \00r\00e\00t\00u\00r\00n\00e\00d\00 \00n\00o\00n\00 \00e\00m\00p\00t\00y\00 \00l\00i\00s\00t\00")
 (data (i32.const 15192) "X\00\00\00\01\00\00\00\01\00\00\00X\00\00\00g\00e\00t\00T\00o\00p\00W\00i\00t\00h\00R\00a\00t\00i\00n\00g\00 \00f\00o\00r\00 \00e\00m\00p\00t\00y\00 \00t\00o\00p\00n\00 \00i\00s\00 \00n\00o\00t\00 \00e\00m\00p\00t\00y\00")
 (data (i32.const 15296) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00k\001\00")
 (data (i32.const 15320) ">\00\00\00\01\00\00\00\01\00\00\00>\00\00\00t\00o\00p\00n\00 \00-\00 \00w\00r\00o\00n\00g\00 \00r\00e\00s\00u\00l\00t\00 \00f\00o\00r\00 \00i\00s\00E\00m\00p\00t\00y\00")
 (data (i32.const 15400) "&\00\00\00\01\00\00\00\01\00\00\00&\00\00\00t\00o\00p\00n\00 \00-\00 \00w\00r\00o\00n\00g\00 \00l\00e\00n\00g\00t\00h\00")
 (data (i32.const 15456) ">\00\00\00\01\00\00\00\01\00\00\00>\00\00\00t\00o\00p\00n\00 \00-\00 \00c\00o\00n\00t\00a\00i\00n\00s\00 \00n\00o\00n\00e\00x\00i\00s\00t\00e\00n\00t\00 \00k\00e\00y\00")
 (data (i32.const 15536) "d\00\00\00\01\00\00\00\01\00\00\00d\00\00\00t\00o\00p\00n\00 \00-\00 \00d\00o\00e\00s\00 \00n\00o\00t\00 \00c\00o\00n\00t\00a\00i\00n\00 \00a\00 \00k\00e\00y\00 \00t\00h\00a\00t\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00t\00h\00e\00r\00e\00")
 (data (i32.const 15656) "\04\00\00\00\01\00\00\00\00\00\00\00\04\00\00\00\d0;\00\00")
 (data (i32.const 15680) "<\00\00\00\01\00\00\00\01\00\00\00<\00\00\00k\00e\00y\00s\00 \00t\00o\00 \00r\00a\00t\00i\00n\00g\00s\00 \00w\00r\00o\00n\00g\00 \00f\00o\00r\00 \00t\00o\00p\00n\00")
 (data (i32.const 15760) "\04\00\00\00\01\00\00\00\00\00\00\00\04\00\00\00\d0;\00\00")
 (data (i32.const 15784) "P\00\00\00\01\00\00\00\01\00\00\00P\00\00\00g\00e\00t\00 \00t\00o\00p\00 \00f\00o\00r\00 \00t\00o\00p\00n\00 \00r\00e\00t\00u\00r\00n\00e\00d\00 \00n\00o\00n\00 \00e\00m\00p\00t\00y\00 \00l\00i\00s\00t\00")
 (data (i32.const 15880) "&\00\00\00\01\00\00\00\01\00\00\00&\00\00\00w\00r\00o\00n\00g\00 \00k\00e\00y\00 \00i\00n\00 \00g\00e\00t\00T\00o\00p\00")
 (data (i32.const 15936) "$\00\00\00\01\00\00\00\01\00\00\00$\00\00\00g\00e\00t\00T\00o\00p\00F\00r\00o\00m\00K\00e\00y\00:\00 \00k\00e\00y\00")
 (data (i32.const 15992) "\1e\00\00\00\01\00\00\00\01\00\00\00\1e\00\00\00 \00d\00o\00e\00s\00 \00n\00o\00t\00 \00e\00x\00i\00s\00t\00")
 (data (i32.const 16040) "d\00\00\00\01\00\00\00\01\00\00\00d\00\00\00~\00l\00i\00b\00/\00n\00e\00a\00r\00-\00r\00u\00n\00t\00i\00m\00e\00-\00t\00s\00/\00c\00o\00l\00l\00e\00c\00t\00i\00o\00n\00s\00/\00p\00e\00r\00s\00i\00s\00t\00e\00n\00t\00T\00o\00p\00n\00.\00t\00s\00")
 (data (i32.const 16160) "F\00\00\00\01\00\00\00\01\00\00\00F\00\00\00g\00e\00t\00T\00o\00p\00F\00r\00o\00m\00K\00e\00y\00 \00f\00o\00r\00 \00t\00o\00p\00n\00 \00w\00r\00o\00n\00g\00 \00r\00e\00s\00u\00l\00t\00")
 (data (i32.const 16248) "l\00\00\00\01\00\00\00\01\00\00\00l\00\00\00g\00e\00t\00T\00o\00p\00W\00i\00t\00h\00R\00a\00t\00i\00n\00g\00 \00f\00o\00r\00 \00t\00o\00p\00n\00 \00w\00i\00t\00h\00 \001\00 \00e\00l\00e\00m\00e\00n\00t\00 \00i\00s\00 \00w\00r\00o\00n\00g\00 \00s\00i\00z\00e\00")
 (data (i32.const 16376) "Z\00\00\00\01\00\00\00\01\00\00\00Z\00\00\00g\00e\00t\00T\00o\00p\00W\00i\00t\00h\00R\00a\00t\00i\00n\00g\00F\00r\00o\00m\00K\00e\00y\00 \00f\00o\00r\00 \00t\00o\00p\00n\00 \00i\00s\00 \00n\00o\00t\00 \00e\00m\00p\00t\00y\00")
 (data (i32.const 16488) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00k\00")
 (data (i32.const 16512) "\04\00\00\00\01\00\00\00\00\00\00\00\04\00\00\00\d0;\00\00")
 (data (i32.const 16536) "\08\00\00\00\01\00\00\00\00\00\00\00\08\00\00\00\d0;\00\00x@\00\00")
 (data (i32.const 16560) "\08\00\00\00\01\00\00\00\00\00\00\00\08\00\00\00\d0;\00\00x@\00\00")
 (data (i32.const 16584) "\08\00\00\00\01\00\00\00\00\00\00\00\08\00\00\00\d0;\00\00x@\00\00")
 (data (i32.const 16608) "2\00\00\00\01\00\00\00\01\00\00\002\00\00\00g\00e\00t\00 \00t\00o\00p\00 \00f\00o\00r\00 \00t\00o\00p\00n\00 \00i\00s\00 \00w\00r\00o\00n\00g\00")
 (data (i32.const 16680) "^\00\00\00\01\00\00\00\01\00\00\00^\00\00\00g\00e\00t\00 \00t\00o\00p\00 \00f\00o\00r\00 \00t\00o\00p\00n\00 \00i\00s\00 \00w\00r\00o\00n\00g\00 \00w\00h\00e\00n\00 \00l\00i\00m\00i\00t\00 \00i\00s\00 \00a\00p\00p\00l\00i\00e\00d\00")
 (data (i32.const 16792) "\04\00\00\00\01\00\00\00\00\00\00\00\04\00\00\00x@\00\00")
 (data (i32.const 16816) "\04\00\00\00\01\00\00\00\00\00\00\00\04\00\00\00x@\00\00")
 (data (i32.const 16840) "\18\00\00\00\01\00\00\00\01\00\00\00\18\00\00\00c\00o\00n\00t\00e\00x\00t\00T\00e\00s\00t\00s\00")
 (data (i32.const 16880) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00b\00o\00b\00")
 (data (i32.const 16904) "\18\00\00\00\01\00\00\00\01\00\00\00\18\00\00\00W\00r\00o\00n\00g\00 \00s\00e\00n\00d\00e\00r\00")
 (data (i32.const 16944) "\1e\00\00\00\01\00\00\00\01\00\00\00\1e\00\00\00c\00o\00n\00t\00r\00a\00c\00t\00a\00c\00c\00o\00u\00n\00t\00")
 (data (i32.const 16992) "&\00\00\00\01\00\00\00\01\00\00\00&\00\00\00W\00r\00o\00n\00g\00 \00c\00o\00n\00t\00r\00a\00c\00t\00 \00n\00a\00m\00e\00")
 (data (i32.const 17048) "6\00\00\00\01\00\00\00\01\00\00\006\00\00\00~\00l\00i\00b\00/\00b\00i\00g\00n\00u\00m\00/\00i\00n\00t\00e\00g\00e\00r\00/\00u\001\002\008\00.\00t\00s\00")
 (data (i32.const 17120) "(\00\00\00\01\00\00\00\01\00\00\00(\00\00\00W\00r\00o\00n\00g\00 \00r\00e\00c\00e\00i\00v\00e\00d\00A\00m\00o\00u\00n\00t\00")
 (data (i32.const 17176) "\"\00\00\00\01\00\00\00\01\00\00\00\"\00\00\00W\00r\00o\00n\00g\00 \00p\00r\00e\00p\00a\00i\00d\00 \00g\00a\00s\00")
 (data (i32.const 17232) "\1c\00\00\00\01\00\00\00\01\00\00\00\1c\00\00\00W\00r\00o\00n\00g\00 \00u\00s\00e\00d\00 \00g\00a\00s\00")
 (data (i32.const 17280) "\18\00\00\00\01\00\00\00\01\00\00\00\18\00\00\00p\00r\00o\00m\00i\00s\00e\00T\00e\00s\00t\00s\00")
 (data (i32.const 17320) "0\00\00\00\01\00\00\00\01\00\00\000\00\00\00w\00r\00o\00n\00g\00 \00l\00e\00n\00g\00t\00h\00 \00f\00o\00r\00 \00r\00e\00s\00u\00l\00t\00s\00")
 (data (i32.const 17384) ",\00\00\00\01\00\00\00\01\00\00\00,\00\00\00c\00o\00n\00t\00r\00a\00c\00t\00N\00a\00m\00e\00F\00o\00r\00P\00r\00o\00m\00i\00s\00e\00")
 (data (i32.const 17448) "\14\00\00\00\01\00\00\00\01\00\00\00\14\00\00\00m\00e\00t\00h\00o\00d\00N\00a\00m\00e\00")
 (data (i32.const 17488) "\12\00\00\00\01\00\00\00\01\00\00\00\12\00\00\00m\00a\00t\00h\00T\00e\00s\00t\00s\00")
 (data (i32.const 17528) "L\00\00\00\01\00\00\00\01\00\00\00L\00\00\00C\00a\00n\00n\00o\00t\00 \00c\00o\00n\00v\00e\00r\00t\00 \00i\00n\00p\00u\00t\00 \00U\00i\00n\00t\008\00A\00r\00r\00a\00y\00 \00t\00o\00 \00u\003\002\00")
 (data (i32.const 17624) "8\00\00\00\01\00\00\00\01\00\00\008\00\00\00~\00l\00i\00b\00/\00n\00e\00a\00r\00-\00r\00u\00n\00t\00i\00m\00e\00-\00t\00s\00/\00m\00a\00t\00h\00.\00t\00s\00")
 (data (i32.const 17696) "\14\00\00\00\01\00\00\00\01\00\00\00\14\00\00\00w\00r\00o\00n\00g\00 \00h\00a\00s\00h\00")
 (data (i32.const 17736) "\0c\00\00\00\01\00\00\00\01\00\00\00\0c\00\00\00t\00o\00H\00a\00s\00h\00")
 (data (i32.const 17768) "0\00\00\00\01\00\00\00\01\00\00\000\00\00\00w\00r\00o\00n\00g\00 \00h\00a\00s\00h\00 \00o\00f\00 \00t\00h\00e\00 \00s\00t\00r\00i\00n\00g\00")
 (data (i32.const 17832) "\0c\00\00\00\01\00\00\00\00\00\00\00\0c\00\00\00\01\00\00\00\06\00\00\00\07\00\00\00")
 (data (i32.const 17864) ">\00\00\00\01\00\00\00\01\00\00\00>\00\00\00w\00r\00o\00n\00g\00 \00o\00u\00t\00p\00u\00t\00 \00l\00e\00n\00g\00t\00h\00 \00f\00o\00r\00 \00h\00a\00s\00h\002\005\006\00")
 (data (i32.const 17944) "2\00\00\00\01\00\00\00\01\00\00\002\00\00\00w\00r\00o\00n\00g\00 \00c\00o\00n\00t\00e\00n\00t\00s\00 \00o\00f\00 \00h\00a\00s\00h\002\005\006\00")
 (data (i32.const 18016) "-\00\00\00\10\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\10\00\00\00\00\00\00\001\00\00\00\02\00\00\00\10\00\00\00\00\00\00\00\93\04\00\00\02\00\00\00\93 \00\00\02\00\00\00\93\00\00\00\02\00\00\00\10\00\00\00\00\00\00\00\10\00\00\00\0b\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\93 \00\00\02\00\00\00\10\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\93 \00\00\02\00\00\003\00\00\00\02\00\00\00\10\00\00\00\00\00\00\00\93 \00\00\02\00\00\00\10\00\00\00\00\00\00\00")
 (table $0 4 funcref)
 (elem (i32.const 0) $null $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/model/TextMessage>#values~anonymous|0 $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTop~anonymous|0 $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTopFromKey~anonymous|0)
 (global $~lib/rt/tlsf/ROOT (mut i32) (i32.const 0))
 (global $~lib/near-runtime-ts/storage/storage (mut i32) (i32.const 0))
 (global $~lib/near-runtime-ts/collections/index/collections._KEY_LENGTH_SUFFIX i32 (i32.const 176))
 (global $~lib/near-runtime-ts/collections/index/collections._KEY_FRONT_INDEX_SUFFIX i32 (i32.const 200))
 (global $~lib/near-runtime-ts/collections/index/collections._KEY_BACK_INDEX_SUFFIX i32 (i32.const 232))
 (global $~lib/near-runtime-ts/collections/index/collections._KEY_ELEMENT_SUFFIX i32 (i32.const 264))
 (global $~lib/near-runtime-ts/collections/index/collections._KEY_RATING_SUFFIX i32 (i32.const 288))
 (global $~lib/near-runtime-ts/collections/index/collections._RATING_OFFSET i64 (i64.const 2147483648))
 (global $~lib/bignum/utils/HEX_CHARS i32 (i32.const 312))
 (global $~lib/bignum/globals/__divmod_quot_lo (mut i64) (i64.const 0))
 (global $~lib/bignum/globals/__divmod_quot_hi (mut i64) (i64.const 0))
 (global $~lib/bignum/globals/__divmod_rem (mut i64) (i64.const 0))
 (global $~lib/bignum/globals/__res128_lo (mut i64) (i64.const 0))
 (global $~lib/bignum/globals/__res128_hi (mut i64) (i64.const 0))
 (global $~lib/bignum/globals/__float_u128_lo (mut i64) (i64.const 0))
 (global $~lib/bignum/globals/__float_u128_hi (mut i64) (i64.const 0))
 (global $~lib/near-runtime-ts/contract/context (mut i32) (i32.const 0))
 (global $~lib/near-runtime-ts/base64/base64.PADCHAR i32 (i32.const 360))
 (global $~lib/near-runtime-ts/base64/base64.ALPHA i32 (i32.const 384))
 (global $~lib/assemblyscript-json/decoder/TRUE_STR i32 (i32.const 528))
 (global $~lib/assemblyscript-json/decoder/FALSE_STR i32 (i32.const 552))
 (global $~lib/assemblyscript-json/decoder/NULL_STR i32 (i32.const 584))
 (global $~lib/assemblyscript-json/decoder/CHAR_0 (mut i32) (i32.const 0))
 (global $~lib/assemblyscript-json/decoder/CHAR_9 (mut i32) (i32.const 0))
 (global $~lib/assemblyscript-json/decoder/CHAR_A (mut i32) (i32.const 0))
 (global $~lib/assemblyscript-json/decoder/CHAR_A_LOWER (mut i32) (i32.const 0))
 (global $~lib/rt/pure/CUR (mut i32) (i32.const 0))
 (global $~lib/rt/pure/END (mut i32) (i32.const 0))
 (global $~lib/rt/pure/ROOTS (mut i32) (i32.const 0))
 (global $~lib/ASC_SHRINK_LEVEL i32 (i32.const 0))
 (global $~lib/nearEntry/PrimitiveHandler.String (mut i32) (i32.const 0))
 (global $~lib/nearEntry/PrimitiveHandler.Boolean (mut i32) (i32.const 0))
 (global $~lib/nearEntry/PrimitiveHandler.U64 (mut i32) (i32.const 0))
 (global $~lib/nearEntry/PrimitiveHandler.I64 (mut i32) (i32.const 0))
 (global $~lib/nearEntry/PrimitiveHandler.U32 (mut i32) (i32.const 0))
 (global $~lib/nearEntry/PrimitiveHandler.I32 (mut i32) (i32.const 0))
 (global $~lib/argc (mut i32) (i32.const 0))
 (global $~lib/builtins/u32.MAX_VALUE i32 (i32.const -1))
 (global $~lib/number/U32.MAX_VALUE i32 (i32.const -1))
 (global $~lib/builtins/i32.MAX_VALUE i32 (i32.const 2147483647))
 (global $~lib/builtins/i32.MIN_VALUE i32 (i32.const -2147483648))
 (global $~lib/rt/__rtti_base i32 (i32.const 18016))
 (global $~lib/heap/__heap_base i32 (i32.const 18380))
 (global $assembly/main/__near_ArgsParser_simple i32 (i32.const 26))
 (export "memory" (memory $0))
 (export "__alloc" (func $~lib/rt/tlsf/__alloc))
 (export "__retain" (func $~lib/rt/pure/__retain))
 (export "__release" (func $~lib/rt/pure/__release))
 (export "__collect" (func $~lib/rt/pure/__collect))
 (export "__rtti_base" (global $~lib/rt/__rtti_base))
 (export "hello" (func $assembly/main/__wrapper_hello))
 (export "storageKeysTest" (func $assembly/main/__wrapper_storageKeysTest))
 (export "__near_ArgsParser_simple" (global $assembly/main/__near_ArgsParser_simple))
 (export "__near_ArgsParser_simple#setString" (func $assembly/main/__near_ArgsParser_simple#setString))
 (export "__near_ArgsParser_simple#setBoolean" (func $~lib/assemblyscript-json/decoder/ThrowingJSONHandler#setBoolean))
 (export "__near_ArgsParser_simple#setNull" (func $assembly/main/__near_ArgsParser_simple#setNull))
 (export "__near_ArgsParser_simple#setInteger" (func $~lib/assemblyscript-json/decoder/ThrowingJSONHandler#setInteger))
 (export "__near_ArgsParser_simple#pushArray" (func $assembly/main/__near_ArgsParser_simple#pushArray))
 (export "__near_ArgsParser_simple#popArray" (func $~lib/assemblyscript-json/decoder/JSONHandler#popArray))
 (export "__near_ArgsParser_simple#pushObject" (func $assembly/main/__near_ArgsParser_simple#pushObject))
 (export "__near_ArgsParser_simple#popObject" (func $~lib/assemblyscript-json/decoder/JSONHandler#popObject))
 (export "__near_ArgsParser_simple#get:buffer" (func $__near_ArgsParser_simple#get:buffer))
 (export "__near_ArgsParser_simple#set:buffer" (func $__near_ArgsParser_simple#set:buffer))
 (export "__near_ArgsParser_simple#get:decoder" (func $__near_ArgsParser_simple#get:decoder))
 (export "__near_ArgsParser_simple#set:decoder" (func $__near_ArgsParser_simple#set:decoder))
 (export "__near_ArgsParser_simple#get:handledRoot" (func $__near_ArgsParser_simple#get:handledRoot))
 (export "__near_ArgsParser_simple#set:handledRoot" (func $__near_ArgsParser_simple#set:handledRoot))
 (export "__near_ArgsParser_simple#get:__near_param_s" (func $__near_ArgsParser_simple#get:__near_param_s))
 (export "__near_ArgsParser_simple#set:__near_param_s" (func $__near_ArgsParser_simple#set:__near_param_s))
 (export "simple" (func $assembly/main/__wrapper_simple))
 (export "base58Test" (func $assembly/main/base58Test))
 (export "base64Test" (func $assembly/main/base64Test))
 (export "logTest" (func $assembly/main/logTest))
 (export "storageStringRoundtripTest" (func $assembly/main/storageStringRoundtripTest))
 (export "storageBytesRoundtripTest" (func $assembly/main/storageBytesRoundtripTest))
 (export "storageGenericGetSetRoundtripTest" (func $assembly/main/storageGenericGetSetRoundtripTest))
 (export "mapTests" (func $assembly/main/mapTests))
 (export "mapTestsWithPrimitices" (func $assembly/main/mapTestsWithPrimitices))
 (export "vectorTests" (func $assembly/main/vectorTests))
 (export "dequeTests" (func $assembly/main/dequeTests))
 (export "topnTests" (func $assembly/main/topnTests))
 (export "contextTests" (func $assembly/main/contextTests))
 (export "promiseTests" (func $assembly/main/promiseTests))
 (export "mathTests" (func $assembly/main/mathTests))
 (start $start)
 (func $~lib/rt/tlsf/removeBlock (; 29 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  local.get $1
  i32.load
  local.set $2
  local.get $2
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 24
   i32.const 277
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.set $3
  local.get $3
  i32.const 16
  i32.ge_u
  if (result i32)
   local.get $3
   i32.const 1073741808
   i32.lt_u
  else   
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 24
   i32.const 279
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  i32.const 256
  i32.lt_u
  if
   i32.const 0
   local.set $4
   local.get $3
   i32.const 4
   i32.shr_u
   local.set $5
  else   
   i32.const 31
   local.get $3
   i32.clz
   i32.sub
   local.set $4
   local.get $3
   local.get $4
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 1
   i32.const 4
   i32.shl
   i32.xor
   local.set $5
   local.get $4
   i32.const 8
   i32.const 1
   i32.sub
   i32.sub
   local.set $4
  end
  local.get $4
  i32.const 23
  i32.lt_u
  if (result i32)
   local.get $5
   i32.const 16
   i32.lt_u
  else   
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 24
   i32.const 292
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.load offset=16
  local.set $6
  local.get $1
  i32.load offset=20
  local.set $7
  local.get $6
  if
   local.get $6
   local.get $7
   i32.store offset=20
  end
  local.get $7
  if
   local.get $7
   local.get $6
   i32.store offset=16
  end
  local.get $1
  local.get $0
  local.set $10
  local.get $4
  local.set $9
  local.get $5
  local.set $8
  local.get $10
  local.get $9
  i32.const 4
  i32.shl
  local.get $8
  i32.add
  i32.const 2
  i32.shl
  i32.add
  i32.load offset=96
  i32.eq
  if
   local.get $0
   local.set $11
   local.get $4
   local.set $10
   local.get $5
   local.set $9
   local.get $7
   local.set $8
   local.get $11
   local.get $10
   i32.const 4
   i32.shl
   local.get $9
   i32.add
   i32.const 2
   i32.shl
   i32.add
   local.get $8
   i32.store offset=96
   local.get $7
   i32.eqz
   if
    local.get $0
    local.set $9
    local.get $4
    local.set $8
    local.get $9
    local.get $8
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=4
    local.set $9
    local.get $0
    local.set $8
    local.get $4
    local.set $11
    local.get $9
    i32.const 1
    local.get $5
    i32.shl
    i32.const -1
    i32.xor
    i32.and
    local.tee $9
    local.set $10
    local.get $8
    local.get $11
    i32.const 2
    i32.shl
    i32.add
    local.get $10
    i32.store offset=4
    local.get $9
    i32.eqz
    if
     local.get $0
     local.get $0
     i32.load
     i32.const 1
     local.get $4
     i32.shl
     i32.const -1
     i32.xor
     i32.and
     i32.store
    end
   end
  end
 )
 (func $~lib/rt/tlsf/insertBlock (; 30 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  local.get $1
  i32.eqz
  if
   i32.const 0
   i32.const 24
   i32.const 205
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.load
  local.set $2
  local.get $2
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 24
   i32.const 207
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  local.set $3
  local.get $3
  i32.const 16
  i32.add
  local.get $3
  i32.load
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  i32.add
  local.set $4
  local.get $4
  i32.load
  local.set $5
  local.get $5
  i32.const 1
  i32.and
  if
   local.get $2
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.const 16
   i32.add
   local.get $5
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   local.set $3
   local.get $3
   i32.const 1073741808
   i32.lt_u
   if
    local.get $0
    local.get $4
    call $~lib/rt/tlsf/removeBlock
    local.get $1
    local.get $2
    i32.const 3
    i32.and
    local.get $3
    i32.or
    local.tee $2
    i32.store
    local.get $1
    local.set $6
    local.get $6
    i32.const 16
    i32.add
    local.get $6
    i32.load
    i32.const 3
    i32.const -1
    i32.xor
    i32.and
    i32.add
    local.set $4
    local.get $4
    i32.load
    local.set $5
   end
  end
  local.get $2
  i32.const 2
  i32.and
  if
   local.get $1
   local.set $6
   local.get $6
   i32.const 4
   i32.sub
   i32.load
   local.set $6
   local.get $6
   i32.load
   local.set $3
   local.get $3
   i32.const 1
   i32.and
   i32.eqz
   if
    i32.const 0
    i32.const 24
    i32.const 228
    i32.const 15
    call $~lib/builtins/abort
    unreachable
   end
   local.get $3
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.const 16
   i32.add
   local.get $2
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   local.set $7
   local.get $7
   i32.const 1073741808
   i32.lt_u
   if
    local.get $0
    local.get $6
    call $~lib/rt/tlsf/removeBlock
    local.get $6
    local.get $3
    i32.const 3
    i32.and
    local.get $7
    i32.or
    local.tee $2
    i32.store
    local.get $6
    local.set $1
   end
  end
  local.get $4
  local.get $5
  i32.const 2
  i32.or
  i32.store
  local.get $2
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.set $8
  local.get $8
  i32.const 16
  i32.ge_u
  if (result i32)
   local.get $8
   i32.const 1073741808
   i32.lt_u
  else   
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 24
   i32.const 243
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 16
  i32.add
  local.get $8
  i32.add
  local.get $4
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 24
   i32.const 244
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  i32.const 4
  i32.sub
  local.get $1
  i32.store
  local.get $8
  i32.const 256
  i32.lt_u
  if
   i32.const 0
   local.set $9
   local.get $8
   i32.const 4
   i32.shr_u
   local.set $10
  else   
   i32.const 31
   local.get $8
   i32.clz
   i32.sub
   local.set $9
   local.get $8
   local.get $9
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 1
   i32.const 4
   i32.shl
   i32.xor
   local.set $10
   local.get $9
   i32.const 8
   i32.const 1
   i32.sub
   i32.sub
   local.set $9
  end
  local.get $9
  i32.const 23
  i32.lt_u
  if (result i32)
   local.get $10
   i32.const 16
   i32.lt_u
  else   
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 24
   i32.const 260
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.set $7
  local.get $9
  local.set $3
  local.get $10
  local.set $6
  local.get $7
  local.get $3
  i32.const 4
  i32.shl
  local.get $6
  i32.add
  i32.const 2
  i32.shl
  i32.add
  i32.load offset=96
  local.set $11
  local.get $1
  i32.const 0
  i32.store offset=16
  local.get $1
  local.get $11
  i32.store offset=20
  local.get $11
  if
   local.get $11
   local.get $1
   i32.store offset=16
  end
  local.get $0
  local.set $12
  local.get $9
  local.set $7
  local.get $10
  local.set $3
  local.get $1
  local.set $6
  local.get $12
  local.get $7
  i32.const 4
  i32.shl
  local.get $3
  i32.add
  i32.const 2
  i32.shl
  i32.add
  local.get $6
  i32.store offset=96
  local.get $0
  local.get $0
  i32.load
  i32.const 1
  local.get $9
  i32.shl
  i32.or
  i32.store
  local.get $0
  local.set $13
  local.get $9
  local.set $12
  local.get $0
  local.set $3
  local.get $9
  local.set $6
  local.get $3
  local.get $6
  i32.const 2
  i32.shl
  i32.add
  i32.load offset=4
  i32.const 1
  local.get $10
  i32.shl
  i32.or
  local.set $7
  local.get $13
  local.get $12
  i32.const 2
  i32.shl
  i32.add
  local.get $7
  i32.store offset=4
 )
 (func $~lib/rt/tlsf/addMemory (; 31 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  local.get $1
  local.get $2
  i32.le_u
  if (result i32)
   local.get $1
   i32.const 15
   i32.and
   i32.eqz
  else   
   i32.const 0
  end
  if (result i32)
   local.get $2
   i32.const 15
   i32.and
   i32.eqz
  else   
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 24
   i32.const 386
   i32.const 4
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.set $3
  local.get $3
  i32.load offset=1568
  local.set $4
  i32.const 0
  local.set $5
  local.get $4
  if
   local.get $1
   local.get $4
   i32.const 16
   i32.add
   i32.ge_u
   i32.eqz
   if
    i32.const 0
    i32.const 24
    i32.const 396
    i32.const 15
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   i32.const 16
   i32.sub
   local.get $4
   i32.eq
   if
    local.get $1
    i32.const 16
    i32.sub
    local.set $1
    local.get $4
    i32.load
    local.set $5
   else    
    nop
   end
  else   
   local.get $1
   local.get $0
   i32.const 1572
   i32.add
   i32.ge_u
   i32.eqz
   if
    i32.const 0
    i32.const 24
    i32.const 408
    i32.const 4
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $2
  local.get $1
  i32.sub
  local.set $6
  local.get $6
  i32.const 48
  i32.lt_u
  if
   i32.const 0
   return
  end
  local.get $6
  i32.const 16
  i32.const 1
  i32.shl
  i32.sub
  local.set $7
  local.get $1
  local.set $8
  local.get $8
  local.get $7
  i32.const 1
  i32.or
  local.get $5
  i32.const 2
  i32.and
  i32.or
  i32.store
  local.get $8
  i32.const 0
  i32.store offset=16
  local.get $8
  i32.const 0
  i32.store offset=20
  local.get $1
  local.get $6
  i32.add
  i32.const 16
  i32.sub
  local.set $4
  local.get $4
  i32.const 0
  i32.const 2
  i32.or
  i32.store
  local.get $0
  local.set $9
  local.get $4
  local.set $3
  local.get $9
  local.get $3
  i32.store offset=1568
  local.get $0
  local.get $8
  call $~lib/rt/tlsf/insertBlock
  i32.const 1
 )
 (func $~lib/rt/tlsf/initializeRoot (; 32 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/heap/__heap_base
  i32.const 15
  i32.add
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  local.set $0
  memory.size
  local.set $1
  local.get $0
  i32.const 1572
  i32.add
  i32.const 65535
  i32.add
  i32.const 65535
  i32.const -1
  i32.xor
  i32.and
  i32.const 16
  i32.shr_u
  local.set $2
  local.get $2
  local.get $1
  i32.gt_s
  if (result i32)
   local.get $2
   local.get $1
   i32.sub
   memory.grow
   i32.const 0
   i32.lt_s
  else   
   i32.const 0
  end
  if
   unreachable
  end
  local.get $0
  local.set $3
  local.get $3
  i32.const 0
  i32.store
  local.get $3
  local.set $5
  i32.const 0
  local.set $4
  local.get $5
  local.get $4
  i32.store offset=1568
  block $break|0
   i32.const 0
   local.set $5
   loop $loop|0
    local.get $5
    i32.const 23
    i32.lt_u
    i32.eqz
    br_if $break|0
    local.get $3
    local.set $7
    local.get $5
    local.set $6
    i32.const 0
    local.set $4
    local.get $7
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    local.get $4
    i32.store offset=4
    block $break|1
     i32.const 0
     local.set $7
     loop $loop|1
      local.get $7
      i32.const 16
      i32.lt_u
      i32.eqz
      br_if $break|1
      local.get $3
      local.set $9
      local.get $5
      local.set $8
      local.get $7
      local.set $6
      i32.const 0
      local.set $4
      local.get $9
      local.get $8
      i32.const 4
      i32.shl
      local.get $6
      i32.add
      i32.const 2
      i32.shl
      i32.add
      local.get $4
      i32.store offset=96
      local.get $7
      i32.const 1
      i32.add
      local.set $7
      br $loop|1
     end
     unreachable
    end
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    br $loop|0
   end
   unreachable
  end
  local.get $3
  local.get $0
  i32.const 1572
  i32.add
  i32.const 15
  i32.add
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  memory.size
  i32.const 16
  i32.shl
  call $~lib/rt/tlsf/addMemory
  drop
  local.get $3
  global.set $~lib/rt/tlsf/ROOT
 )
 (func $~lib/rt/tlsf/prepareSize (; 33 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  i32.const 1073741808
  i32.ge_u
  if
   i32.const 72
   i32.const 24
   i32.const 457
   i32.const 29
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 15
  i32.add
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  local.tee $1
  i32.const 16
  local.tee $2
  local.get $1
  local.get $2
  i32.gt_u
  select
 )
 (func $~lib/rt/tlsf/searchBlock (; 34 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  local.get $1
  i32.const 256
  i32.lt_u
  if
   i32.const 0
   local.set $2
   local.get $1
   i32.const 4
   i32.shr_u
   local.set $3
  else   
   local.get $1
   i32.const 536870904
   i32.lt_u
   if (result i32)
    local.get $1
    i32.const 1
    i32.const 27
    local.get $1
    i32.clz
    i32.sub
    i32.shl
    i32.add
    i32.const 1
    i32.sub
   else    
    local.get $1
   end
   local.set $4
   i32.const 31
   local.get $4
   i32.clz
   i32.sub
   local.set $2
   local.get $4
   local.get $2
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 1
   i32.const 4
   i32.shl
   i32.xor
   local.set $3
   local.get $2
   i32.const 8
   i32.const 1
   i32.sub
   i32.sub
   local.set $2
  end
  local.get $2
  i32.const 23
  i32.lt_u
  if (result i32)
   local.get $3
   i32.const 16
   i32.lt_u
  else   
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 24
   i32.const 338
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.set $5
  local.get $2
  local.set $4
  local.get $5
  local.get $4
  i32.const 2
  i32.shl
  i32.add
  i32.load offset=4
  i32.const 0
  i32.const -1
  i32.xor
  local.get $3
  i32.shl
  i32.and
  local.set $6
  i32.const 0
  local.set $7
  local.get $6
  i32.eqz
  if
   local.get $0
   i32.load
   i32.const 0
   i32.const -1
   i32.xor
   local.get $2
   i32.const 1
   i32.add
   i32.shl
   i32.and
   local.set $5
   local.get $5
   i32.eqz
   if
    i32.const 0
    local.set $7
   else    
    local.get $5
    i32.ctz
    local.set $2
    local.get $0
    local.set $8
    local.get $2
    local.set $4
    local.get $8
    local.get $4
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=4
    local.set $6
    local.get $6
    i32.eqz
    if
     i32.const 0
     i32.const 24
     i32.const 351
     i32.const 17
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    local.set $9
    local.get $2
    local.set $8
    local.get $6
    i32.ctz
    local.set $4
    local.get $9
    local.get $8
    i32.const 4
    i32.shl
    local.get $4
    i32.add
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=96
    local.set $7
   end
  else   
   local.get $0
   local.set $9
   local.get $2
   local.set $8
   local.get $6
   i32.ctz
   local.set $4
   local.get $9
   local.get $8
   i32.const 4
   i32.shl
   local.get $4
   i32.add
   i32.const 2
   i32.shl
   i32.add
   i32.load offset=96
   local.set $7
  end
  local.get $7
 )
 (func $~lib/rt/tlsf/growMemory (; 35 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $1
  i32.const 536870904
  i32.lt_u
  if
   local.get $1
   i32.const 1
   i32.const 27
   local.get $1
   i32.clz
   i32.sub
   i32.shl
   i32.const 1
   i32.sub
   i32.add
   local.set $1
  end
  memory.size
  local.set $2
  local.get $1
  i32.const 16
  local.get $2
  i32.const 16
  i32.shl
  i32.const 16
  i32.sub
  local.get $0
  local.set $3
  local.get $3
  i32.load offset=1568
  i32.ne
  i32.shl
  i32.add
  local.set $1
  local.get $1
  i32.const 65535
  i32.add
  i32.const 65535
  i32.const -1
  i32.xor
  i32.and
  i32.const 16
  i32.shr_u
  local.set $4
  local.get $2
  local.tee $3
  local.get $4
  local.tee $5
  local.get $3
  local.get $5
  i32.gt_s
  select
  local.set $6
  local.get $6
  memory.grow
  i32.const 0
  i32.lt_s
  if
   local.get $4
   memory.grow
   i32.const 0
   i32.lt_s
   if
    unreachable
   end
  end
  memory.size
  local.set $7
  local.get $0
  local.get $2
  i32.const 16
  i32.shl
  local.get $7
  i32.const 16
  i32.shl
  call $~lib/rt/tlsf/addMemory
  drop
 )
 (func $~lib/rt/tlsf/prepareBlock (; 36 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  i32.load
  local.set $3
  local.get $2
  i32.const 15
  i32.and
  i32.eqz
  i32.eqz
  if
   i32.const 0
   i32.const 24
   i32.const 365
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.get $2
  i32.sub
  local.set $4
  local.get $4
  i32.const 32
  i32.ge_u
  if
   local.get $1
   local.get $2
   local.get $3
   i32.const 2
   i32.and
   i32.or
   i32.store
   local.get $1
   i32.const 16
   i32.add
   local.get $2
   i32.add
   local.set $5
   local.get $5
   local.get $4
   i32.const 16
   i32.sub
   i32.const 1
   i32.or
   i32.store
   local.get $0
   local.get $5
   call $~lib/rt/tlsf/insertBlock
  else   
   local.get $1
   local.get $3
   i32.const 1
   i32.const -1
   i32.xor
   i32.and
   i32.store
   local.get $1
   local.set $5
   local.get $5
   i32.const 16
   i32.add
   local.get $5
   i32.load
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   local.get $1
   local.set $5
   local.get $5
   i32.const 16
   i32.add
   local.get $5
   i32.load
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   i32.load
   i32.const 2
   i32.const -1
   i32.xor
   i32.and
   i32.store
  end
 )
 (func $~lib/rt/tlsf/allocateBlock (; 37 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  call $~lib/rt/tlsf/prepareSize
  local.set $2
  local.get $0
  local.get $2
  call $~lib/rt/tlsf/searchBlock
  local.set $3
  local.get $3
  i32.eqz
  if
   local.get $0
   local.get $2
   call $~lib/rt/tlsf/growMemory
   local.get $0
   local.get $2
   call $~lib/rt/tlsf/searchBlock
   local.set $3
   local.get $3
   i32.eqz
   if
    i32.const 0
    i32.const 24
    i32.const 487
    i32.const 15
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $3
  i32.load
  i32.const -4
  i32.and
  local.get $2
  i32.ge_u
  i32.eqz
  if
   i32.const 0
   i32.const 24
   i32.const 489
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  i32.const 0
  i32.store offset=4
  local.get $3
  local.get $1
  i32.store offset=12
  local.get $0
  local.get $3
  call $~lib/rt/tlsf/removeBlock
  local.get $0
  local.get $3
  local.get $2
  call $~lib/rt/tlsf/prepareBlock
  local.get $3
 )
 (func $~lib/rt/tlsf/__alloc (; 38 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/rt/tlsf/ROOT
  local.set $2
  local.get $2
  i32.eqz
  if
   call $~lib/rt/tlsf/initializeRoot
   global.get $~lib/rt/tlsf/ROOT
   local.set $2
  end
  local.get $2
  local.get $0
  call $~lib/rt/tlsf/allocateBlock
  local.set $3
  local.get $3
  local.get $1
  i32.store offset=8
  local.get $3
  i32.const 16
  i32.add
 )
 (func $~lib/rt/pure/increment (; 39 ;) (type $FUNCSIG$vi) (param $0 i32)
  (local $1 i32)
  local.get $0
  i32.load offset=4
  local.set $1
  local.get $1
  i32.const -268435456
  i32.and
  local.get $1
  i32.const 1
  i32.add
  i32.const -268435456
  i32.and
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 128
   i32.const 104
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $1
  i32.const 1
  i32.add
  i32.store offset=4
  local.get $0
  i32.load
  i32.const 1
  i32.and
  i32.eqz
  i32.eqz
  if
   i32.const 0
   i32.const 128
   i32.const 107
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
 )
 (func $~lib/rt/pure/__retain (; 40 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  global.get $~lib/heap/__heap_base
  i32.gt_u
  if
   local.get $0
   i32.const 16
   i32.sub
   call $~lib/rt/pure/increment
  end
  local.get $0
 )
 (func $~lib/near-runtime-ts/storage/Storage#constructor (; 41 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  i32.eqz
  if
   i32.const 0
   i32.const 3
   call $~lib/rt/tlsf/__alloc
   call $~lib/rt/pure/__retain
   local.set $0
  end
  local.get $0
 )
 (func $start:~lib/near-runtime-ts/storage (; 42 ;) (type $FUNCSIG$v)
  i32.const 0
  call $~lib/near-runtime-ts/storage/Storage#constructor
  global.set $~lib/near-runtime-ts/storage/storage
 )
 (func $~lib/near-runtime-ts/contract/Context#constructor (; 43 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  i32.eqz
  if
   i32.const 0
   i32.const 4
   call $~lib/rt/tlsf/__alloc
   call $~lib/rt/pure/__retain
   local.set $0
  end
  local.get $0
 )
 (func $start:~lib/near-runtime-ts/contract (; 44 ;) (type $FUNCSIG$v)
  i32.const 0
  call $~lib/near-runtime-ts/contract/Context#constructor
  global.set $~lib/near-runtime-ts/contract/context
 )
 (func $start:~lib/near-runtime-ts/index (; 45 ;) (type $FUNCSIG$v)
  call $start:~lib/near-runtime-ts/storage
  call $start:~lib/near-runtime-ts/contract
 )
 (func $~lib/string/String#get:length (; 46 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  i32.const 16
  i32.sub
  i32.load offset=12
  i32.const 1
  i32.shr_u
 )
 (func $~lib/string/String#charCodeAt (; 47 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  local.get $0
  call $~lib/string/String#get:length
  i32.ge_u
  if
   i32.const -1
   return
  end
  local.get $0
  local.get $1
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u
 )
 (func $start:~lib/assemblyscript-json/decoder (; 48 ;) (type $FUNCSIG$v)
  i32.const 608
  i32.const 0
  call $~lib/string/String#charCodeAt
  global.set $~lib/assemblyscript-json/decoder/CHAR_0
  i32.const 632
  i32.const 0
  call $~lib/string/String#charCodeAt
  global.set $~lib/assemblyscript-json/decoder/CHAR_9
  i32.const 656
  i32.const 0
  call $~lib/string/String#charCodeAt
  global.set $~lib/assemblyscript-json/decoder/CHAR_A
  i32.const 680
  i32.const 0
  call $~lib/string/String#charCodeAt
  global.set $~lib/assemblyscript-json/decoder/CHAR_A_LOWER
 )
 (func $start:~lib/assemblyscript-json/index (; 49 ;) (type $FUNCSIG$v)
  call $start:~lib/assemblyscript-json/decoder
 )
 (func $start:~lib/rt/index-full (; 50 ;) (type $FUNCSIG$v)
  call $start:~lib/near-runtime-ts/index
  call $start:~lib/assemblyscript-json/index
 )
 (func $~lib/rt/tlsf/freeBlock (; 51 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $1
  i32.load
  local.set $2
  local.get $2
  i32.const 1
  i32.and
  i32.eqz
  i32.eqz
  if
   i32.const 0
   i32.const 24
   i32.const 546
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  local.get $2
  i32.const 1
  i32.or
  i32.store
  local.get $0
  local.get $1
  call $~lib/rt/tlsf/insertBlock
 )
 (func $~lib/rt/__typeinfo (; 52 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/rt/__rtti_base
  local.set $1
  local.get $0
  local.get $1
  i32.load
  i32.gt_u
  if
   i32.const 704
   i32.const 760
   i32.const 22
   i32.const 27
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 4
  i32.add
  local.get $0
  i32.const 8
  i32.mul
  i32.add
  i32.load
 )
 (func $~lib/util/memory/memcpy (; 53 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  block $break|0
   loop $continue|0
    local.get $2
    if (result i32)
     local.get $1
     i32.const 3
     i32.and
    else     
     i32.const 0
    end
    i32.eqz
    br_if $break|0
    local.get $0
    local.tee $5
    i32.const 1
    i32.add
    local.set $0
    local.get $5
    local.get $1
    local.tee $5
    i32.const 1
    i32.add
    local.set $1
    local.get $5
    i32.load8_u
    i32.store8
    local.get $2
    i32.const 1
    i32.sub
    local.set $2
    br $continue|0
   end
   unreachable
  end
  local.get $0
  i32.const 3
  i32.and
  i32.const 0
  i32.eq
  if
   block $break|1
    loop $continue|1
     local.get $2
     i32.const 16
     i32.ge_u
     i32.eqz
     br_if $break|1
     local.get $0
     local.get $1
     i32.load
     i32.store
     local.get $0
     i32.const 4
     i32.add
     local.get $1
     i32.const 4
     i32.add
     i32.load
     i32.store
     local.get $0
     i32.const 8
     i32.add
     local.get $1
     i32.const 8
     i32.add
     i32.load
     i32.store
     local.get $0
     i32.const 12
     i32.add
     local.get $1
     i32.const 12
     i32.add
     i32.load
     i32.store
     local.get $1
     i32.const 16
     i32.add
     local.set $1
     local.get $0
     i32.const 16
     i32.add
     local.set $0
     local.get $2
     i32.const 16
     i32.sub
     local.set $2
     br $continue|1
    end
    unreachable
   end
   local.get $2
   i32.const 8
   i32.and
   if
    local.get $0
    local.get $1
    i32.load
    i32.store
    local.get $0
    i32.const 4
    i32.add
    local.get $1
    i32.const 4
    i32.add
    i32.load
    i32.store
    local.get $0
    i32.const 8
    i32.add
    local.set $0
    local.get $1
    i32.const 8
    i32.add
    local.set $1
   end
   local.get $2
   i32.const 4
   i32.and
   if
    local.get $0
    local.get $1
    i32.load
    i32.store
    local.get $0
    i32.const 4
    i32.add
    local.set $0
    local.get $1
    i32.const 4
    i32.add
    local.set $1
   end
   local.get $2
   i32.const 2
   i32.and
   if
    local.get $0
    local.get $1
    i32.load16_u
    i32.store16
    local.get $0
    i32.const 2
    i32.add
    local.set $0
    local.get $1
    i32.const 2
    i32.add
    local.set $1
   end
   local.get $2
   i32.const 1
   i32.and
   if
    local.get $0
    local.tee $5
    i32.const 1
    i32.add
    local.set $0
    local.get $5
    local.get $1
    local.tee $5
    i32.const 1
    i32.add
    local.set $1
    local.get $5
    i32.load8_u
    i32.store8
   end
   return
  end
  local.get $2
  i32.const 32
  i32.ge_u
  if
   block $break|2
    block $case2|2
     block $case1|2
      block $case0|2
       local.get $0
       i32.const 3
       i32.and
       local.set $5
       local.get $5
       i32.const 1
       i32.eq
       br_if $case0|2
       local.get $5
       i32.const 2
       i32.eq
       br_if $case1|2
       local.get $5
       i32.const 3
       i32.eq
       br_if $case2|2
       br $break|2
      end
      local.get $1
      i32.load
      local.set $3
      local.get $0
      local.tee $5
      i32.const 1
      i32.add
      local.set $0
      local.get $5
      local.get $1
      local.tee $5
      i32.const 1
      i32.add
      local.set $1
      local.get $5
      i32.load8_u
      i32.store8
      local.get $0
      local.tee $5
      i32.const 1
      i32.add
      local.set $0
      local.get $5
      local.get $1
      local.tee $5
      i32.const 1
      i32.add
      local.set $1
      local.get $5
      i32.load8_u
      i32.store8
      local.get $0
      local.tee $5
      i32.const 1
      i32.add
      local.set $0
      local.get $5
      local.get $1
      local.tee $5
      i32.const 1
      i32.add
      local.set $1
      local.get $5
      i32.load8_u
      i32.store8
      local.get $2
      i32.const 3
      i32.sub
      local.set $2
      block $break|3
       loop $continue|3
        local.get $2
        i32.const 17
        i32.ge_u
        i32.eqz
        br_if $break|3
        local.get $1
        i32.const 1
        i32.add
        i32.load
        local.set $4
        local.get $0
        local.get $3
        i32.const 24
        i32.shr_u
        local.get $4
        i32.const 8
        i32.shl
        i32.or
        i32.store
        local.get $1
        i32.const 5
        i32.add
        i32.load
        local.set $3
        local.get $0
        i32.const 4
        i32.add
        local.get $4
        i32.const 24
        i32.shr_u
        local.get $3
        i32.const 8
        i32.shl
        i32.or
        i32.store
        local.get $1
        i32.const 9
        i32.add
        i32.load
        local.set $4
        local.get $0
        i32.const 8
        i32.add
        local.get $3
        i32.const 24
        i32.shr_u
        local.get $4
        i32.const 8
        i32.shl
        i32.or
        i32.store
        local.get $1
        i32.const 13
        i32.add
        i32.load
        local.set $3
        local.get $0
        i32.const 12
        i32.add
        local.get $4
        i32.const 24
        i32.shr_u
        local.get $3
        i32.const 8
        i32.shl
        i32.or
        i32.store
        local.get $1
        i32.const 16
        i32.add
        local.set $1
        local.get $0
        i32.const 16
        i32.add
        local.set $0
        local.get $2
        i32.const 16
        i32.sub
        local.set $2
        br $continue|3
       end
       unreachable
      end
      br $break|2
     end
     local.get $1
     i32.load
     local.set $3
     local.get $0
     local.tee $5
     i32.const 1
     i32.add
     local.set $0
     local.get $5
     local.get $1
     local.tee $5
     i32.const 1
     i32.add
     local.set $1
     local.get $5
     i32.load8_u
     i32.store8
     local.get $0
     local.tee $5
     i32.const 1
     i32.add
     local.set $0
     local.get $5
     local.get $1
     local.tee $5
     i32.const 1
     i32.add
     local.set $1
     local.get $5
     i32.load8_u
     i32.store8
     local.get $2
     i32.const 2
     i32.sub
     local.set $2
     block $break|4
      loop $continue|4
       local.get $2
       i32.const 18
       i32.ge_u
       i32.eqz
       br_if $break|4
       local.get $1
       i32.const 2
       i32.add
       i32.load
       local.set $4
       local.get $0
       local.get $3
       i32.const 16
       i32.shr_u
       local.get $4
       i32.const 16
       i32.shl
       i32.or
       i32.store
       local.get $1
       i32.const 6
       i32.add
       i32.load
       local.set $3
       local.get $0
       i32.const 4
       i32.add
       local.get $4
       i32.const 16
       i32.shr_u
       local.get $3
       i32.const 16
       i32.shl
       i32.or
       i32.store
       local.get $1
       i32.const 10
       i32.add
       i32.load
       local.set $4
       local.get $0
       i32.const 8
       i32.add
       local.get $3
       i32.const 16
       i32.shr_u
       local.get $4
       i32.const 16
       i32.shl
       i32.or
       i32.store
       local.get $1
       i32.const 14
       i32.add
       i32.load
       local.set $3
       local.get $0
       i32.const 12
       i32.add
       local.get $4
       i32.const 16
       i32.shr_u
       local.get $3
       i32.const 16
       i32.shl
       i32.or
       i32.store
       local.get $1
       i32.const 16
       i32.add
       local.set $1
       local.get $0
       i32.const 16
       i32.add
       local.set $0
       local.get $2
       i32.const 16
       i32.sub
       local.set $2
       br $continue|4
      end
      unreachable
     end
     br $break|2
    end
    local.get $1
    i32.load
    local.set $3
    local.get $0
    local.tee $5
    i32.const 1
    i32.add
    local.set $0
    local.get $5
    local.get $1
    local.tee $5
    i32.const 1
    i32.add
    local.set $1
    local.get $5
    i32.load8_u
    i32.store8
    local.get $2
    i32.const 1
    i32.sub
    local.set $2
    block $break|5
     loop $continue|5
      local.get $2
      i32.const 19
      i32.ge_u
      i32.eqz
      br_if $break|5
      local.get $1
      i32.const 3
      i32.add
      i32.load
      local.set $4
      local.get $0
      local.get $3
      i32.const 8
      i32.shr_u
      local.get $4
      i32.const 24
      i32.shl
      i32.or
      i32.store
      local.get $1
      i32.const 7
      i32.add
      i32.load
      local.set $3
      local.get $0
      i32.const 4
      i32.add
      local.get $4
      i32.const 8
      i32.shr_u
      local.get $3
      i32.const 24
      i32.shl
      i32.or
      i32.store
      local.get $1
      i32.const 11
      i32.add
      i32.load
      local.set $4
      local.get $0
      i32.const 8
      i32.add
      local.get $3
      i32.const 8
      i32.shr_u
      local.get $4
      i32.const 24
      i32.shl
      i32.or
      i32.store
      local.get $1
      i32.const 15
      i32.add
      i32.load
      local.set $3
      local.get $0
      i32.const 12
      i32.add
      local.get $4
      i32.const 8
      i32.shr_u
      local.get $3
      i32.const 24
      i32.shl
      i32.or
      i32.store
      local.get $1
      i32.const 16
      i32.add
      local.set $1
      local.get $0
      i32.const 16
      i32.add
      local.set $0
      local.get $2
      i32.const 16
      i32.sub
      local.set $2
      br $continue|5
     end
     unreachable
    end
    br $break|2
   end
  end
  local.get $2
  i32.const 16
  i32.and
  if
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
  end
  local.get $2
  i32.const 8
  i32.and
  if
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
  end
  local.get $2
  i32.const 4
  i32.and
  if
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
  end
  local.get $2
  i32.const 2
  i32.and
  if
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
  end
  local.get $2
  i32.const 1
  i32.and
  if
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
  end
 )
 (func $~lib/memory/memory.copy (; 54 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  block $~lib/util/memory/memmove|inlined.0
   local.get $0
   local.set $5
   local.get $1
   local.set $4
   local.get $2
   local.set $3
   local.get $5
   local.get $4
   i32.eq
   if
    br $~lib/util/memory/memmove|inlined.0
   end
   local.get $4
   local.get $3
   i32.add
   local.get $5
   i32.le_u
   if (result i32)
    i32.const 1
   else    
    local.get $5
    local.get $3
    i32.add
    local.get $4
    i32.le_u
   end
   if
    local.get $5
    local.get $4
    local.get $3
    call $~lib/util/memory/memcpy
    br $~lib/util/memory/memmove|inlined.0
   end
   local.get $5
   local.get $4
   i32.lt_u
   if
    local.get $4
    i32.const 7
    i32.and
    local.get $5
    i32.const 7
    i32.and
    i32.eq
    if
     block $break|0
      loop $continue|0
       local.get $5
       i32.const 7
       i32.and
       i32.eqz
       br_if $break|0
       local.get $3
       i32.eqz
       if
        br $~lib/util/memory/memmove|inlined.0
       end
       local.get $3
       i32.const 1
       i32.sub
       local.set $3
       local.get $5
       local.tee $6
       i32.const 1
       i32.add
       local.set $5
       local.get $6
       local.get $4
       local.tee $6
       i32.const 1
       i32.add
       local.set $4
       local.get $6
       i32.load8_u
       i32.store8
       br $continue|0
      end
      unreachable
     end
     block $break|1
      loop $continue|1
       local.get $3
       i32.const 8
       i32.ge_u
       i32.eqz
       br_if $break|1
       local.get $5
       local.get $4
       i64.load
       i64.store
       local.get $3
       i32.const 8
       i32.sub
       local.set $3
       local.get $5
       i32.const 8
       i32.add
       local.set $5
       local.get $4
       i32.const 8
       i32.add
       local.set $4
       br $continue|1
      end
      unreachable
     end
    end
    block $break|2
     loop $continue|2
      local.get $3
      i32.eqz
      br_if $break|2
      local.get $5
      local.tee $6
      i32.const 1
      i32.add
      local.set $5
      local.get $6
      local.get $4
      local.tee $6
      i32.const 1
      i32.add
      local.set $4
      local.get $6
      i32.load8_u
      i32.store8
      local.get $3
      i32.const 1
      i32.sub
      local.set $3
      br $continue|2
     end
     unreachable
    end
   else    
    local.get $4
    i32.const 7
    i32.and
    local.get $5
    i32.const 7
    i32.and
    i32.eq
    if
     block $break|3
      loop $continue|3
       local.get $5
       local.get $3
       i32.add
       i32.const 7
       i32.and
       i32.eqz
       br_if $break|3
       local.get $3
       i32.eqz
       if
        br $~lib/util/memory/memmove|inlined.0
       end
       local.get $5
       local.get $3
       i32.const 1
       i32.sub
       local.tee $3
       i32.add
       local.get $4
       local.get $3
       i32.add
       i32.load8_u
       i32.store8
       br $continue|3
      end
      unreachable
     end
     block $break|4
      loop $continue|4
       local.get $3
       i32.const 8
       i32.ge_u
       i32.eqz
       br_if $break|4
       local.get $3
       i32.const 8
       i32.sub
       local.set $3
       local.get $5
       local.get $3
       i32.add
       local.get $4
       local.get $3
       i32.add
       i64.load
       i64.store
       br $continue|4
      end
      unreachable
     end
    end
    block $break|5
     loop $continue|5
      local.get $3
      i32.eqz
      br_if $break|5
      local.get $5
      local.get $3
      i32.const 1
      i32.sub
      local.tee $3
      i32.add
      local.get $4
      local.get $3
      i32.add
      i32.load8_u
      i32.store8
      br $continue|5
     end
     unreachable
    end
   end
  end
 )
 (func $~lib/rt/tlsf/__free (; 55 ;) (type $FUNCSIG$vi) (param $0 i32)
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   i32.const 0
   i32.const 24
   i32.const 576
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 0
  i32.ne
  if (result i32)
   local.get $0
   i32.const 15
   i32.and
   i32.eqz
  else   
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 24
   i32.const 577
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/tlsf/ROOT
  local.get $0
  i32.const 16
  i32.sub
  call $~lib/rt/tlsf/freeBlock
 )
 (func $~lib/rt/pure/growRoots (; 56 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/rt/pure/ROOTS
  local.set $0
  global.get $~lib/rt/pure/CUR
  local.get $0
  i32.sub
  local.set $1
  local.get $1
  i32.const 2
  i32.mul
  local.tee $2
  i32.const 64
  i32.const 2
  i32.shl
  local.tee $3
  local.get $2
  local.get $3
  i32.gt_u
  select
  local.set $4
  local.get $4
  i32.const 0
  call $~lib/rt/tlsf/__alloc
  local.set $5
  local.get $5
  local.get $0
  local.get $1
  call $~lib/memory/memory.copy
  local.get $0
  if
   local.get $0
   call $~lib/rt/tlsf/__free
  end
  local.get $5
  global.set $~lib/rt/pure/ROOTS
  local.get $5
  local.get $1
  i32.add
  global.set $~lib/rt/pure/CUR
  local.get $5
  local.get $4
  i32.add
  global.set $~lib/rt/pure/END
 )
 (func $~lib/rt/pure/appendRoot (; 57 ;) (type $FUNCSIG$vi) (param $0 i32)
  (local $1 i32)
  global.get $~lib/rt/pure/CUR
  local.set $1
  local.get $1
  global.get $~lib/rt/pure/END
  i32.ge_u
  if
   call $~lib/rt/pure/growRoots
   global.get $~lib/rt/pure/CUR
   local.set $1
  end
  local.get $1
  local.get $0
  i32.store
  local.get $1
  i32.const 4
  i32.add
  global.set $~lib/rt/pure/CUR
 )
 (func $~lib/rt/pure/decrement (; 58 ;) (type $FUNCSIG$vi) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  i32.load offset=4
  local.set $1
  local.get $1
  i32.const 268435455
  i32.and
  local.set $2
  local.get $0
  i32.load
  i32.const 1
  i32.and
  i32.eqz
  i32.eqz
  if
   i32.const 0
   i32.const 128
   i32.const 115
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.const 1
  i32.eq
  if
   local.get $0
   i32.const 16
   i32.add
   i32.const 1
   call $~lib/rt/__visit_members
   local.get $1
   i32.const -2147483648
   i32.and
   i32.eqz
   if
    global.get $~lib/rt/tlsf/ROOT
    local.get $0
    call $~lib/rt/tlsf/freeBlock
   else    
    local.get $0
    i32.const -2147483648
    i32.const 0
    i32.or
    i32.const 0
    i32.or
    i32.store offset=4
   end
  else   
   local.get $2
   i32.const 0
   i32.gt_u
   i32.eqz
   if
    i32.const 0
    i32.const 128
    i32.const 124
    i32.const 15
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.load offset=8
   call $~lib/rt/__typeinfo
   i32.const 16
   i32.and
   i32.eqz
   if
    local.get $0
    i32.const -2147483648
    i32.const 805306368
    i32.or
    local.get $2
    i32.const 1
    i32.sub
    i32.or
    i32.store offset=4
    local.get $1
    i32.const -2147483648
    i32.and
    i32.eqz
    if
     local.get $0
     call $~lib/rt/pure/appendRoot
    end
   else    
    local.get $0
    local.get $1
    i32.const 268435455
    i32.const -1
    i32.xor
    i32.and
    local.get $2
    i32.const 1
    i32.sub
    i32.or
    i32.store offset=4
   end
  end
 )
 (func $~lib/rt/pure/__release (; 59 ;) (type $FUNCSIG$vi) (param $0 i32)
  local.get $0
  global.get $~lib/heap/__heap_base
  i32.gt_u
  if
   local.get $0
   i32.const 16
   i32.sub
   call $~lib/rt/pure/decrement
  end
 )
 (func $~lib/rt/pure/markGray (; 60 ;) (type $FUNCSIG$vi) (param $0 i32)
  (local $1 i32)
  local.get $0
  i32.load offset=4
  local.set $1
  local.get $1
  i32.const 1879048192
  i32.and
  i32.const 268435456
  i32.ne
  if
   local.get $0
   local.get $1
   i32.const 1879048192
   i32.const -1
   i32.xor
   i32.and
   i32.const 268435456
   i32.or
   i32.store offset=4
   local.get $0
   i32.const 16
   i32.add
   i32.const 2
   call $~lib/rt/__visit_members
  end
 )
 (func $~lib/rt/pure/scanBlack (; 61 ;) (type $FUNCSIG$vi) (param $0 i32)
  local.get $0
  local.get $0
  i32.load offset=4
  i32.const 1879048192
  i32.const -1
  i32.xor
  i32.and
  i32.const 0
  i32.or
  i32.store offset=4
  local.get $0
  i32.const 16
  i32.add
  i32.const 4
  call $~lib/rt/__visit_members
 )
 (func $~lib/rt/pure/scan (; 62 ;) (type $FUNCSIG$vi) (param $0 i32)
  (local $1 i32)
  local.get $0
  i32.load offset=4
  local.set $1
  local.get $1
  i32.const 1879048192
  i32.and
  i32.const 268435456
  i32.eq
  if
   local.get $1
   i32.const 268435455
   i32.and
   i32.const 0
   i32.gt_u
   if
    local.get $0
    call $~lib/rt/pure/scanBlack
   else    
    local.get $0
    local.get $1
    i32.const 1879048192
    i32.const -1
    i32.xor
    i32.and
    i32.const 536870912
    i32.or
    i32.store offset=4
    local.get $0
    i32.const 16
    i32.add
    i32.const 3
    call $~lib/rt/__visit_members
   end
  end
 )
 (func $~lib/rt/pure/collectWhite (; 63 ;) (type $FUNCSIG$vi) (param $0 i32)
  (local $1 i32)
  local.get $0
  i32.load offset=4
  local.set $1
  local.get $1
  i32.const 1879048192
  i32.and
  i32.const 536870912
  i32.eq
  if (result i32)
   local.get $1
   i32.const -2147483648
   i32.and
   i32.eqz
  else   
   i32.const 0
  end
  if
   local.get $0
   local.get $1
   i32.const 1879048192
   i32.const -1
   i32.xor
   i32.and
   i32.const 0
   i32.or
   i32.store offset=4
   local.get $0
   i32.const 16
   i32.add
   i32.const 5
   call $~lib/rt/__visit_members
   global.get $~lib/rt/tlsf/ROOT
   local.get $0
   call $~lib/rt/tlsf/freeBlock
  end
 )
 (func $~lib/rt/pure/__collect (; 64 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/rt/pure/ROOTS
  local.set $0
  local.get $0
  local.set $1
  block $break|0
   local.get $1
   local.set $2
   global.get $~lib/rt/pure/CUR
   local.set $3
   loop $loop|0
    local.get $2
    local.get $3
    i32.lt_u
    i32.eqz
    br_if $break|0
    local.get $2
    i32.load
    local.set $4
    local.get $4
    i32.load offset=4
    local.set $5
    local.get $5
    i32.const 1879048192
    i32.and
    i32.const 805306368
    i32.eq
    if (result i32)
     local.get $5
     i32.const 268435455
     i32.and
     i32.const 0
     i32.gt_u
    else     
     i32.const 0
    end
    if
     local.get $4
     call $~lib/rt/pure/markGray
     local.get $1
     local.get $4
     i32.store
     local.get $1
     i32.const 4
     i32.add
     local.set $1
    else     
     local.get $5
     i32.const 1879048192
     i32.and
     i32.const 0
     i32.eq
     if (result i32)
      local.get $5
      i32.const 268435455
      i32.and
      i32.eqz
     else      
      i32.const 0
     end
     if
      global.get $~lib/rt/tlsf/ROOT
      local.get $4
      call $~lib/rt/tlsf/freeBlock
     else      
      local.get $4
      local.get $5
      i32.const -2147483648
      i32.const -1
      i32.xor
      i32.and
      i32.store offset=4
     end
    end
    local.get $2
    i32.const 4
    i32.add
    local.set $2
    br $loop|0
   end
   unreachable
  end
  local.get $1
  global.set $~lib/rt/pure/CUR
  block $break|1
   local.get $0
   local.set $5
   loop $loop|1
    local.get $5
    local.get $1
    i32.lt_u
    i32.eqz
    br_if $break|1
    local.get $5
    i32.load
    call $~lib/rt/pure/scan
    local.get $5
    i32.const 4
    i32.add
    local.set $5
    br $loop|1
   end
   unreachable
  end
  block $break|2
   local.get $0
   local.set $5
   loop $loop|2
    local.get $5
    local.get $1
    i32.lt_u
    i32.eqz
    br_if $break|2
    local.get $5
    i32.load
    local.set $4
    local.get $4
    local.get $4
    i32.load offset=4
    i32.const -2147483648
    i32.const -1
    i32.xor
    i32.and
    i32.store offset=4
    local.get $4
    call $~lib/rt/pure/collectWhite
    local.get $5
    i32.const 4
    i32.add
    local.set $5
    br $loop|2
   end
   unreachable
  end
  local.get $0
  global.set $~lib/rt/pure/CUR
 )
 (func $~lib/string/String.UTF8.byteLength (; 65 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  local.set $2
  local.get $2
  local.get $0
  i32.const 16
  i32.sub
  i32.load offset=12
  i32.add
  local.set $3
  local.get $1
  if (result i32)
   i32.const 1
  else   
   i32.const 0
  end
  local.set $4
  block $break|0
   loop $continue|0
    local.get $2
    local.get $3
    i32.lt_u
    i32.eqz
    br_if $break|0
    local.get $2
    i32.load16_u
    local.set $5
    local.get $5
    i32.const 128
    i32.lt_u
    if
     local.get $1
     if (result i32)
      local.get $5
      i32.eqz
     else      
      i32.const 0
     end
     if
      br $break|0
     end
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     local.get $2
     i32.const 2
     i32.add
     local.set $2
    else     
     local.get $5
     i32.const 2048
     i32.lt_u
     if
      local.get $4
      i32.const 2
      i32.add
      local.set $4
      local.get $2
      i32.const 2
      i32.add
      local.set $2
     else      
      local.get $5
      i32.const 64512
      i32.and
      i32.const 55296
      i32.eq
      if (result i32)
       local.get $2
       i32.const 2
       i32.add
       local.get $3
       i32.lt_u
      else       
       i32.const 0
      end
      if
       local.get $2
       i32.load16_u offset=2
       i32.const 64512
       i32.and
       i32.const 56320
       i32.eq
       if
        local.get $2
        i32.const 4
        i32.add
        local.set $2
        local.get $4
        i32.const 4
        i32.add
        local.set $4
        br $continue|0
       end
      end
      local.get $2
      i32.const 2
      i32.add
      local.set $2
      local.get $4
      i32.const 3
      i32.add
      local.set $4
     end
    end
    br $continue|0
   end
   unreachable
  end
  local.get $4
  local.set $5
  local.get $0
  call $~lib/rt/pure/__release
  local.get $5
 )
 (func $~lib/memory/memory.fill (; 66 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i64)
  block $~lib/util/memory/memset|inlined.0
   local.get $0
   local.set $5
   local.get $1
   local.set $4
   local.get $2
   local.set $3
   local.get $3
   i32.eqz
   if
    br $~lib/util/memory/memset|inlined.0
   end
   local.get $5
   local.get $4
   i32.store8
   local.get $5
   local.get $3
   i32.add
   i32.const 1
   i32.sub
   local.get $4
   i32.store8
   local.get $3
   i32.const 2
   i32.le_u
   if
    br $~lib/util/memory/memset|inlined.0
   end
   local.get $5
   i32.const 1
   i32.add
   local.get $4
   i32.store8
   local.get $5
   i32.const 2
   i32.add
   local.get $4
   i32.store8
   local.get $5
   local.get $3
   i32.add
   i32.const 2
   i32.sub
   local.get $4
   i32.store8
   local.get $5
   local.get $3
   i32.add
   i32.const 3
   i32.sub
   local.get $4
   i32.store8
   local.get $3
   i32.const 6
   i32.le_u
   if
    br $~lib/util/memory/memset|inlined.0
   end
   local.get $5
   i32.const 3
   i32.add
   local.get $4
   i32.store8
   local.get $5
   local.get $3
   i32.add
   i32.const 4
   i32.sub
   local.get $4
   i32.store8
   local.get $3
   i32.const 8
   i32.le_u
   if
    br $~lib/util/memory/memset|inlined.0
   end
   i32.const 0
   local.get $5
   i32.sub
   i32.const 3
   i32.and
   local.set $6
   local.get $5
   local.get $6
   i32.add
   local.set $5
   local.get $3
   local.get $6
   i32.sub
   local.set $3
   local.get $3
   i32.const -4
   i32.and
   local.set $3
   i32.const -1
   i32.const 255
   i32.div_u
   local.get $4
   i32.const 255
   i32.and
   i32.mul
   local.set $7
   local.get $5
   local.get $7
   i32.store
   local.get $5
   local.get $3
   i32.add
   i32.const 4
   i32.sub
   local.get $7
   i32.store
   local.get $3
   i32.const 8
   i32.le_u
   if
    br $~lib/util/memory/memset|inlined.0
   end
   local.get $5
   i32.const 4
   i32.add
   local.get $7
   i32.store
   local.get $5
   i32.const 8
   i32.add
   local.get $7
   i32.store
   local.get $5
   local.get $3
   i32.add
   i32.const 12
   i32.sub
   local.get $7
   i32.store
   local.get $5
   local.get $3
   i32.add
   i32.const 8
   i32.sub
   local.get $7
   i32.store
   local.get $3
   i32.const 24
   i32.le_u
   if
    br $~lib/util/memory/memset|inlined.0
   end
   local.get $5
   i32.const 12
   i32.add
   local.get $7
   i32.store
   local.get $5
   i32.const 16
   i32.add
   local.get $7
   i32.store
   local.get $5
   i32.const 20
   i32.add
   local.get $7
   i32.store
   local.get $5
   i32.const 24
   i32.add
   local.get $7
   i32.store
   local.get $5
   local.get $3
   i32.add
   i32.const 28
   i32.sub
   local.get $7
   i32.store
   local.get $5
   local.get $3
   i32.add
   i32.const 24
   i32.sub
   local.get $7
   i32.store
   local.get $5
   local.get $3
   i32.add
   i32.const 20
   i32.sub
   local.get $7
   i32.store
   local.get $5
   local.get $3
   i32.add
   i32.const 16
   i32.sub
   local.get $7
   i32.store
   i32.const 24
   local.get $5
   i32.const 4
   i32.and
   i32.add
   local.set $6
   local.get $5
   local.get $6
   i32.add
   local.set $5
   local.get $3
   local.get $6
   i32.sub
   local.set $3
   local.get $7
   i64.extend_i32_u
   local.get $7
   i64.extend_i32_u
   i64.const 32
   i64.shl
   i64.or
   local.set $8
   block $break|0
    loop $continue|0
     local.get $3
     i32.const 32
     i32.ge_u
     i32.eqz
     br_if $break|0
     local.get $5
     local.get $8
     i64.store
     local.get $5
     i32.const 8
     i32.add
     local.get $8
     i64.store
     local.get $5
     i32.const 16
     i32.add
     local.get $8
     i64.store
     local.get $5
     i32.const 24
     i32.add
     local.get $8
     i64.store
     local.get $3
     i32.const 32
     i32.sub
     local.set $3
     local.get $5
     i32.const 32
     i32.add
     local.set $5
     br $continue|0
    end
    unreachable
   end
  end
 )
 (func $~lib/arraybuffer/ArrayBufferView#constructor (; 67 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  i32.const 1073741808
  local.get $2
  i32.shr_u
  i32.gt_u
  if
   i32.const 840
   i32.const 888
   i32.const 14
   i32.const 56
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  local.get $2
  i32.shl
  local.tee $1
  i32.const 0
  call $~lib/rt/tlsf/__alloc
  local.set $3
  local.get $3
  i32.const 0
  local.get $1
  call $~lib/memory/memory.fill
  local.get $0
  i32.eqz
  if
   i32.const 12
   i32.const 2
   call $~lib/rt/tlsf/__alloc
   call $~lib/rt/pure/__retain
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=8
  local.get $0
  local.tee $4
  local.get $3
  local.tee $5
  local.get $4
  i32.load
  local.tee $4
  i32.ne
  if
   local.get $5
   call $~lib/rt/pure/__retain
   drop
   local.get $4
   call $~lib/rt/pure/__release
  end
  local.get $5
  i32.store
  local.get $0
  local.get $3
  i32.store offset=4
  local.get $0
  local.get $1
  i32.store offset=8
  local.get $0
 )
 (func $~lib/typedarray/Uint8Array#constructor (; 68 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  if (result i32)
   local.get $0
  else   
   i32.const 12
   i32.const 6
   call $~lib/rt/tlsf/__alloc
   call $~lib/rt/pure/__retain
  end
  local.get $1
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.set $0
  local.get $0
 )
 (func $~lib/rt/tlsf/reallocateBlock (; 69 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $2
  call $~lib/rt/tlsf/prepareSize
  local.set $3
  local.get $1
  i32.load
  local.set $4
  local.get $4
  i32.const 1
  i32.and
  i32.eqz
  if (result i32)
   local.get $1
   i32.load offset=4
   i32.const -268435456
   i32.and
   i32.eqz
  else   
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 24
   i32.const 504
   i32.const 4
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  local.get $4
  i32.const -4
  i32.and
  i32.le_u
  if
   local.get $0
   local.get $1
   local.get $3
   call $~lib/rt/tlsf/prepareBlock
   local.get $1
   local.get $2
   i32.store offset=12
   local.get $1
   return
  end
  local.get $1
  local.set $5
  local.get $5
  i32.const 16
  i32.add
  local.get $5
  i32.load
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  i32.add
  local.set $6
  local.get $6
  i32.load
  local.set $7
  local.get $7
  i32.const 1
  i32.and
  if
   local.get $4
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.const 16
   i32.add
   local.get $7
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   local.set $5
   local.get $5
   local.get $3
   i32.ge_u
   if
    local.get $0
    local.get $6
    call $~lib/rt/tlsf/removeBlock
    local.get $1
    local.get $4
    i32.const 3
    i32.and
    local.get $5
    i32.or
    i32.store
    local.get $1
    local.get $2
    i32.store offset=12
    local.get $0
    local.get $1
    local.get $3
    call $~lib/rt/tlsf/prepareBlock
    local.get $1
    return
   end
  end
  local.get $0
  local.get $2
  call $~lib/rt/tlsf/allocateBlock
  local.set $8
  local.get $8
  local.get $1
  i32.load offset=8
  i32.store offset=8
  local.get $8
  i32.const 16
  i32.add
  local.get $1
  i32.const 16
  i32.add
  local.get $2
  call $~lib/memory/memory.copy
  local.get $1
  local.get $4
  i32.const 1
  i32.or
  i32.store
  local.get $0
  local.get $1
  call $~lib/rt/tlsf/insertBlock
  local.get $8
 )
 (func $~lib/rt/tlsf/__realloc (; 70 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   i32.const 0
   i32.const 24
   i32.const 568
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 0
  i32.ne
  if (result i32)
   local.get $0
   i32.const 15
   i32.and
   i32.eqz
  else   
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 24
   i32.const 569
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/tlsf/ROOT
  local.get $0
  i32.const 16
  i32.sub
  local.get $1
  call $~lib/rt/tlsf/reallocateBlock
  i32.const 16
  i32.add
 )
 (func $~lib/string/String.UTF8.encode (; 71 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  local.set $2
  local.get $0
  local.get $0
  i32.const 16
  i32.sub
  i32.load offset=12
  i32.add
  local.set $3
  local.get $0
  local.get $1
  call $~lib/string/String.UTF8.byteLength
  i32.const 0
  call $~lib/rt/tlsf/__alloc
  local.set $4
  local.get $4
  local.set $5
  block $break|0
   loop $continue|0
    local.get $2
    local.get $3
    i32.lt_u
    i32.eqz
    br_if $break|0
    local.get $2
    i32.load16_u
    local.set $6
    local.get $6
    i32.const 128
    i32.lt_u
    if
     local.get $1
     if (result i32)
      local.get $6
      i32.eqz
     else      
      i32.const 0
     end
     if
      br $break|0
     end
     local.get $5
     local.get $6
     i32.store8
     local.get $5
     i32.const 1
     i32.add
     local.set $5
     local.get $2
     i32.const 2
     i32.add
     local.set $2
    else     
     local.get $6
     i32.const 2048
     i32.lt_u
     if
      local.get $5
      local.get $6
      i32.const 6
      i32.shr_u
      i32.const 192
      i32.or
      i32.store8
      local.get $5
      local.get $6
      i32.const 63
      i32.and
      i32.const 128
      i32.or
      i32.store8 offset=1
      local.get $5
      i32.const 2
      i32.add
      local.set $5
      local.get $2
      i32.const 2
      i32.add
      local.set $2
     else      
      local.get $6
      i32.const 64512
      i32.and
      i32.const 55296
      i32.eq
      if (result i32)
       local.get $2
       i32.const 2
       i32.add
       local.get $3
       i32.lt_u
      else       
       i32.const 0
      end
      if
       local.get $2
       i32.load16_u offset=2
       local.set $7
       local.get $7
       i32.const 64512
       i32.and
       i32.const 56320
       i32.eq
       if
        i32.const 65536
        local.get $6
        i32.const 1023
        i32.and
        i32.const 10
        i32.shl
        i32.add
        local.get $7
        i32.const 1023
        i32.and
        i32.add
        local.set $6
        local.get $5
        local.get $6
        i32.const 18
        i32.shr_u
        i32.const 240
        i32.or
        i32.store8
        local.get $5
        local.get $6
        i32.const 12
        i32.shr_u
        i32.const 63
        i32.and
        i32.const 128
        i32.or
        i32.store8 offset=1
        local.get $5
        local.get $6
        i32.const 6
        i32.shr_u
        i32.const 63
        i32.and
        i32.const 128
        i32.or
        i32.store8 offset=2
        local.get $5
        local.get $6
        i32.const 63
        i32.and
        i32.const 128
        i32.or
        i32.store8 offset=3
        local.get $2
        i32.const 4
        i32.add
        local.set $2
        local.get $5
        i32.const 4
        i32.add
        local.set $5
        br $continue|0
       end
      end
      local.get $5
      local.get $6
      i32.const 12
      i32.shr_u
      i32.const 224
      i32.or
      i32.store8
      local.get $5
      local.get $6
      i32.const 6
      i32.shr_u
      i32.const 63
      i32.and
      i32.const 128
      i32.or
      i32.store8 offset=1
      local.get $5
      local.get $6
      i32.const 63
      i32.and
      i32.const 128
      i32.or
      i32.store8 offset=2
      local.get $2
      i32.const 2
      i32.add
      local.set $2
      local.get $5
      i32.const 3
      i32.add
      local.set $5
     end
    end
    br $continue|0
   end
   unreachable
  end
  local.get $1
  if
   local.get $2
   local.get $3
   i32.le_u
   i32.eqz
   if
    i32.const 0
    i32.const 944
    i32.const 567
    i32.const 8
    call $~lib/builtins/abort
    unreachable
   end
   local.get $4
   local.get $5
   local.get $4
   i32.sub
   i32.const 1
   i32.add
   call $~lib/rt/tlsf/__realloc
   local.set $4
   local.get $5
   i32.const 0
   i32.store8
  else   
   local.get $2
   local.get $3
   i32.eq
   i32.eqz
   if
    i32.const 0
    i32.const 944
    i32.const 571
    i32.const 8
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $4
  call $~lib/rt/pure/__retain
  local.set $6
  local.get $0
  call $~lib/rt/pure/__release
  local.get $6
 )
 (func $~lib/near-runtime-ts/util/util.toUTF8 (; 72 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  local.get $1
  call $~lib/string/String.UTF8.encode
  local.tee $2
  local.set $3
  local.get $2
  call $~lib/rt/pure/__release
  local.get $0
  call $~lib/rt/pure/__release
  local.get $3
 )
 (func $~lib/near-runtime-ts/util/util.stringToBytes (; 73 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  i32.const 1
  call $~lib/string/String.UTF8.byteLength
  i32.const 1
  i32.sub
  local.set $1
  i32.const 0
  local.get $1
  call $~lib/typedarray/Uint8Array#constructor
  local.set $2
  local.get $2
  i32.load offset=4
  local.get $0
  i32.const 0
  call $~lib/near-runtime-ts/util/util.toUTF8
  local.get $1
  call $~lib/memory/memory.copy
  local.get $2
  local.set $3
  local.get $0
  call $~lib/rt/pure/__release
  local.get $3
 )
 (func $~lib/arraybuffer/ArrayBufferView#get:byteLength (; 74 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  i32.load offset=8
 )
 (func $~lib/near-runtime-ts/logging/logging.log (; 75 ;) (type $FUNCSIG$vi) (param $0 i32)
  (local $1 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  call $~lib/near-runtime-ts/util/util.stringToBytes
  local.set $1
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView#get:byteLength
  i64.extend_i32_s
  local.get $1
  i32.load offset=4
  i64.extend_i32_u
  call $~lib/near-runtime-ts/runtime_api/runtime_api.log_utf8
  local.get $1
  call $~lib/rt/pure/__release
  local.get $0
  call $~lib/rt/pure/__release
 )
 (func $assembly/main/simple (; 76 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  call $~lib/rt/pure/__retain
  drop
  local.get $0
 )
 (func $~lib/string/String#concat (; 77 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $1
  i32.const 0
  i32.eq
  if
   i32.const 584
   local.tee $2
   local.get $1
   local.tee $3
   i32.ne
   if
    local.get $2
    call $~lib/rt/pure/__retain
    drop
    local.get $3
    call $~lib/rt/pure/__release
   end
   local.get $2
   local.set $1
  end
  local.get $0
  call $~lib/string/String#get:length
  i32.const 1
  i32.shl
  local.set $4
  local.get $1
  call $~lib/string/String#get:length
  i32.const 1
  i32.shl
  local.set $5
  local.get $4
  local.get $5
  i32.add
  local.set $6
  local.get $6
  i32.const 0
  i32.eq
  if
   i32.const 1024
   call $~lib/rt/pure/__retain
   local.set $2
   local.get $1
   call $~lib/rt/pure/__release
   local.get $2
   return
  end
  local.get $6
  i32.const 1
  call $~lib/rt/tlsf/__alloc
  call $~lib/rt/pure/__retain
  local.set $7
  local.get $7
  local.get $0
  local.get $4
  call $~lib/memory/memory.copy
  local.get $7
  local.get $4
  i32.add
  local.get $1
  local.get $5
  call $~lib/memory/memory.copy
  local.get $7
  local.set $2
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
 )
 (func $assembly/main/hello (; 78 ;) (type $FUNCSIG$i) (result i32)
  (local $0 i32)
  (local $1 i32)
  i32.const 800
  call $~lib/near-runtime-ts/logging/logging.log
  i32.const 680
  call $assembly/main/simple
  local.set $0
  i32.const 992
  local.get $0
  call $~lib/string/String#concat
  local.set $1
  local.get $0
  call $~lib/rt/pure/__release
  local.get $1
 )
 (func $~lib/array/Array<i32>#constructor (; 79 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  if (result i32)
   local.get $0
  else   
   i32.const 16
   i32.const 8
   call $~lib/rt/tlsf/__alloc
   call $~lib/rt/pure/__retain
  end
  local.get $1
  i32.const 2
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.set $0
  local.get $0
  i32.const 0
  i32.store offset=12
  local.get $0
  local.get $1
  i32.store offset=12
  local.get $0
 )
 (func $~lib/array/Array<~lib/string/String>#constructor (; 80 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  if (result i32)
   local.get $0
  else   
   i32.const 16
   i32.const 9
   call $~lib/rt/tlsf/__alloc
   call $~lib/rt/pure/__retain
  end
  local.get $1
  i32.const 2
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.set $0
  local.get $0
  i32.const 0
  i32.store offset=12
  local.get $1
  if
   i32.const 1040
   i32.const 1152
   i32.const 56
   i32.const 20
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $1
  i32.store offset=12
  local.get $0
 )
 (func $~lib/array/ensureSize (; 81 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  i32.load offset=8
  local.set $3
  local.get $1
  local.get $3
  local.get $2
  i32.shr_u
  i32.gt_u
  if
   local.get $1
   i32.const 1073741808
   local.get $2
   i32.shr_u
   i32.gt_u
   if
    i32.const 840
    i32.const 1152
    i32.const 14
    i32.const 47
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.load
   local.set $4
   local.get $1
   local.get $2
   i32.shl
   local.set $5
   local.get $4
   local.get $5
   call $~lib/rt/tlsf/__realloc
   local.set $6
   local.get $6
   local.get $3
   i32.add
   i32.const 0
   local.get $5
   local.get $3
   i32.sub
   call $~lib/memory/memory.fill
   local.get $6
   local.get $4
   i32.ne
   if
    local.get $0
    local.get $6
    call $~lib/rt/pure/__retain
    i32.store
    local.get $0
    local.get $6
    i32.store offset=4
   end
   local.get $0
   local.get $5
   i32.store offset=8
  end
 )
 (func $~lib/array/Array<i32>#push (; 82 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.load offset=12
  local.set $2
  local.get $2
  i32.const 1
  i32.add
  local.set $3
  local.get $0
  local.get $3
  i32.const 2
  call $~lib/array/ensureSize
  local.get $0
  i32.load offset=4
  local.get $2
  i32.const 2
  i32.shl
  i32.add
  local.get $1
  i32.store
  local.get $0
  local.get $3
  i32.store offset=12
  local.get $3
 )
 (func $~lib/assemblyscript-json/encoder/JSONEncoder#constructor (; 83 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  i32.eqz
  if
   i32.const 8
   i32.const 7
   call $~lib/rt/tlsf/__alloc
   call $~lib/rt/pure/__retain
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  local.tee $1
  i32.const 0
  i32.const 10
  call $~lib/array/Array<i32>#constructor
  local.set $2
  local.get $1
  i32.load
  call $~lib/rt/pure/__release
  local.get $2
  i32.store
  local.get $0
  local.tee $2
  i32.const 0
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#constructor
  local.set $1
  local.get $2
  i32.load offset=4
  call $~lib/rt/pure/__release
  local.get $1
  i32.store offset=4
  local.get $0
  i32.load
  i32.const 1
  call $~lib/array/Array<i32>#push
  drop
  local.get $0
 )
 (func $~lib/util/string/compareImpl (; 84 ;) (type $FUNCSIG$iiiiii) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  drop
  local.get $2
  call $~lib/rt/pure/__retain
  drop
  i32.const 0
  local.set $5
  local.get $0
  local.get $1
  i32.const 1
  i32.shl
  i32.add
  local.set $6
  local.get $2
  local.get $3
  i32.const 1
  i32.shl
  i32.add
  local.set $7
  block $break|0
   loop $continue|0
    local.get $4
    if (result i32)
     local.get $6
     i32.load16_u
     local.get $7
     i32.load16_u
     i32.sub
     local.tee $5
     i32.eqz
    else     
     i32.const 0
    end
    i32.eqz
    br_if $break|0
    local.get $4
    i32.const 1
    i32.sub
    local.set $4
    local.get $6
    i32.const 2
    i32.add
    local.set $6
    local.get $7
    i32.const 2
    i32.add
    local.set $7
    br $continue|0
   end
   unreachable
  end
  local.get $5
  local.set $8
  local.get $0
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  local.get $8
 )
 (func $~lib/string/String.__eq (; 85 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  drop
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  local.get $1
  i32.eq
  if
   i32.const 1
   local.set $2
   local.get $0
   call $~lib/rt/pure/__release
   local.get $1
   call $~lib/rt/pure/__release
   local.get $2
   return
  end
  local.get $0
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 1
  else   
   local.get $1
   i32.const 0
   i32.eq
  end
  if
   i32.const 0
   local.set $2
   local.get $0
   call $~lib/rt/pure/__release
   local.get $1
   call $~lib/rt/pure/__release
   local.get $2
   return
  end
  local.get $0
  call $~lib/string/String#get:length
  local.set $3
  local.get $3
  local.get $1
  call $~lib/string/String#get:length
  i32.ne
  if
   i32.const 0
   local.set $2
   local.get $0
   call $~lib/rt/pure/__release
   local.get $1
   call $~lib/rt/pure/__release
   local.get $2
   return
  end
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  local.get $3
  call $~lib/util/string/compareImpl
  i32.eqz
  local.set $2
  local.get $0
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
 )
 (func $~lib/array/Array<i32>#get:length (; 86 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  i32.load offset=12
 )
 (func $~lib/array/Array<i32>#__unchecked_get (; 87 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
 )
 (func $~lib/array/Array<i32>#__get (; 88 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  local.get $0
  i32.load offset=8
  i32.const 2
  i32.shr_u
  i32.ge_u
  if
   i32.const 704
   i32.const 1152
   i32.const 109
   i32.const 61
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $1
  call $~lib/array/Array<i32>#__unchecked_get
 )
 (func $~lib/assemblyscript-json/encoder/JSONEncoder#get:isFirstKey (; 89 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  i32.load
  local.get $0
  i32.load
  call $~lib/array/Array<i32>#get:length
  i32.const 1
  i32.sub
  call $~lib/array/Array<i32>#__get
 )
 (func $~lib/array/Array<~lib/string/String>#push (; 90 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  i32.load offset=12
  local.set $2
  local.get $2
  i32.const 1
  i32.add
  local.set $3
  local.get $0
  local.get $3
  i32.const 2
  call $~lib/array/ensureSize
  local.get $0
  i32.load offset=4
  local.get $2
  i32.const 2
  i32.shl
  i32.add
  local.get $1
  call $~lib/rt/pure/__retain
  i32.store
  local.get $0
  local.get $3
  i32.store offset=12
  local.get $3
  local.set $4
  local.get $1
  call $~lib/rt/pure/__release
  local.get $4
 )
 (func $~lib/assemblyscript-json/encoder/JSONEncoder#write (; 91 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/array/Array<~lib/string/String>#push
  drop
  local.get $1
  call $~lib/rt/pure/__release
 )
 (func $~lib/array/Array<i32>#__unchecked_set (; 92 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.get $2
  i32.store
 )
 (func $~lib/array/Array<i32>#__set (; 93 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  local.get $0
  i32.load offset=12
  local.set $3
  local.get $0
  local.get $1
  i32.const 1
  i32.add
  i32.const 2
  call $~lib/array/ensureSize
  local.get $0
  local.get $1
  local.get $2
  call $~lib/array/Array<i32>#__unchecked_set
  local.get $1
  local.get $3
  i32.ge_s
  if
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   i32.store offset=12
  end
 )
 (func $~lib/string/String.__ne (; 94 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  drop
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  local.get $1
  call $~lib/string/String.__eq
  i32.eqz
  local.set $2
  local.get $0
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
 )
 (func $~lib/string/String#substring (; 95 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  local.get $0
  call $~lib/string/String#get:length
  local.set $3
  local.get $1
  local.tee $4
  i32.const 0
  local.tee $5
  local.get $4
  local.get $5
  i32.gt_s
  select
  local.tee $4
  local.get $3
  local.tee $5
  local.get $4
  local.get $5
  i32.lt_s
  select
  local.set $6
  local.get $2
  local.tee $4
  i32.const 0
  local.tee $5
  local.get $4
  local.get $5
  i32.gt_s
  select
  local.tee $4
  local.get $3
  local.tee $5
  local.get $4
  local.get $5
  i32.lt_s
  select
  local.set $7
  local.get $6
  local.tee $4
  local.get $7
  local.tee $5
  local.get $4
  local.get $5
  i32.lt_s
  select
  i32.const 1
  i32.shl
  local.set $8
  local.get $6
  local.tee $4
  local.get $7
  local.tee $5
  local.get $4
  local.get $5
  i32.gt_s
  select
  i32.const 1
  i32.shl
  local.set $9
  local.get $9
  local.get $8
  i32.sub
  local.set $3
  local.get $3
  i32.eqz
  if
   i32.const 1024
   call $~lib/rt/pure/__retain
   return
  end
  local.get $8
  i32.eqz
  if (result i32)
   local.get $9
   local.get $0
   call $~lib/string/String#get:length
   i32.const 1
   i32.shl
   i32.eq
  else   
   i32.const 0
  end
  if
   local.get $0
   call $~lib/rt/pure/__retain
   return
  end
  local.get $3
  i32.const 1
  call $~lib/rt/tlsf/__alloc
  local.set $10
  local.get $10
  local.get $0
  local.get $8
  i32.add
  local.get $3
  call $~lib/memory/memory.copy
  local.get $10
  call $~lib/rt/pure/__retain
 )
 (func $~lib/util/number/decimalCount32 (; 96 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  i32.const 100000
  i32.lt_u
  if
   local.get $0
   i32.const 100
   i32.lt_u
   if
    i32.const 1
    i32.const 2
    local.get $0
    i32.const 10
    i32.lt_u
    select
    return
   else    
    i32.const 4
    i32.const 5
    local.get $0
    i32.const 10000
    i32.lt_u
    select
    local.set $1
    i32.const 3
    local.get $1
    local.get $0
    i32.const 1000
    i32.lt_u
    select
    return
   end
   unreachable
  else   
   local.get $0
   i32.const 10000000
   i32.lt_u
   if
    i32.const 6
    i32.const 7
    local.get $0
    i32.const 1000000
    i32.lt_u
    select
    return
   else    
    i32.const 9
    i32.const 10
    local.get $0
    i32.const 1000000000
    i32.lt_u
    select
    local.set $1
    i32.const 8
    local.get $1
    local.get $0
    i32.const 100000000
    i32.lt_u
    select
    return
   end
   unreachable
  end
  unreachable
 )
 (func $~lib/util/number/utoa32_lut (; 97 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i64)
  (local $9 i64)
  i32.const 2016
  i32.load offset=4
  local.set $3
  block $break|0
   loop $continue|0
    local.get $1
    i32.const 10000
    i32.ge_u
    i32.eqz
    br_if $break|0
    local.get $1
    i32.const 10000
    i32.div_u
    local.set $4
    local.get $1
    i32.const 10000
    i32.rem_u
    local.set $5
    local.get $4
    local.set $1
    local.get $5
    i32.const 100
    i32.div_u
    local.set $6
    local.get $5
    i32.const 100
    i32.rem_u
    local.set $7
    local.get $3
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u
    local.set $8
    local.get $3
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u
    local.set $9
    local.get $2
    i32.const 4
    i32.sub
    local.set $2
    local.get $0
    local.get $2
    i32.const 1
    i32.shl
    i32.add
    local.get $8
    local.get $9
    i64.const 32
    i64.shl
    i64.or
    i64.store
    br $continue|0
   end
   unreachable
  end
  local.get $1
  i32.const 100
  i32.ge_u
  if
   local.get $1
   i32.const 100
   i32.div_u
   local.set $7
   local.get $1
   i32.const 100
   i32.rem_u
   local.set $6
   local.get $7
   local.set $1
   local.get $2
   i32.const 2
   i32.sub
   local.set $2
   local.get $3
   local.get $6
   i32.const 2
   i32.shl
   i32.add
   i32.load
   local.set $5
   local.get $0
   local.get $2
   i32.const 1
   i32.shl
   i32.add
   local.get $5
   i32.store
  end
  local.get $1
  i32.const 10
  i32.ge_u
  if
   local.get $2
   i32.const 2
   i32.sub
   local.set $2
   local.get $3
   local.get $1
   i32.const 2
   i32.shl
   i32.add
   i32.load
   local.set $5
   local.get $0
   local.get $2
   i32.const 1
   i32.shl
   i32.add
   local.get $5
   i32.store
  else   
   local.get $2
   i32.const 1
   i32.sub
   local.set $2
   i32.const 48
   local.get $1
   i32.add
   local.set $5
   local.get $0
   local.get $2
   i32.const 1
   i32.shl
   i32.add
   local.get $5
   i32.store16
  end
 )
 (func $~lib/util/number/itoa32 (; 98 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  i32.eqz
  if
   i32.const 608
   call $~lib/rt/pure/__retain
   return
  end
  local.get $0
  i32.const 0
  i32.lt_s
  local.set $1
  local.get $1
  if
   i32.const 0
   local.get $0
   i32.sub
   local.set $0
  end
  local.get $0
  call $~lib/util/number/decimalCount32
  local.get $1
  i32.add
  local.set $2
  local.get $2
  i32.const 1
  i32.shl
  i32.const 1
  call $~lib/rt/tlsf/__alloc
  local.set $3
  local.get $3
  local.set $6
  local.get $0
  local.set $5
  local.get $2
  local.set $4
  local.get $6
  local.get $5
  local.get $4
  call $~lib/util/number/utoa32_lut
  local.get $1
  if
   local.get $3
   i32.const 45
   i32.store16
  end
  local.get $3
  call $~lib/rt/pure/__retain
 )
 (func $~lib/util/number/itoa<i32> (; 99 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  call $~lib/util/number/itoa32
  return
 )
 (func $~lib/number/I32#toString (; 100 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  call $~lib/util/number/itoa<i32>
  local.tee $1
  call $~lib/rt/pure/__retain
  local.set $2
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
 )
 (func $~lib/string/String.__concat (; 101 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  drop
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  i32.const 584
  local.get $0
  i32.const 0
  i32.ne
  select
  local.get $1
  call $~lib/string/String#concat
  local.set $2
  local.get $0
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
 )
 (func $~lib/assemblyscript-json/encoder/JSONEncoder#writeString (; 102 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  i32.const 1224
  call $~lib/assemblyscript-json/encoder/JSONEncoder#write
  i32.const 0
  local.set $2
  block $break|0
   i32.const 0
   local.set $3
   loop $loop|0
    local.get $3
    local.get $1
    call $~lib/string/String#get:length
    i32.lt_s
    i32.eqz
    br_if $break|0
    local.get $1
    local.get $3
    call $~lib/string/String#charCodeAt
    local.set $4
    local.get $4
    i32.const 32
    i32.lt_s
    local.tee $5
    if (result i32)
     local.get $5
    else     
     local.get $4
     i32.const 1224
     i32.const 0
     call $~lib/string/String#charCodeAt
     i32.eq
    end
    local.tee $5
    if (result i32)
     local.get $5
    else     
     local.get $4
     i32.const 1248
     i32.const 0
     call $~lib/string/String#charCodeAt
     i32.eq
    end
    local.set $5
    local.get $5
    if
     local.get $0
     local.get $1
     local.get $2
     local.get $3
     call $~lib/string/String#substring
     local.tee $6
     call $~lib/assemblyscript-json/encoder/JSONEncoder#write
     local.get $3
     i32.const 1
     i32.add
     local.set $2
     local.get $4
     i32.const 1224
     i32.const 0
     call $~lib/string/String#charCodeAt
     i32.eq
     if
      local.get $0
      i32.const 1272
      call $~lib/assemblyscript-json/encoder/JSONEncoder#write
     else      
      local.get $4
      i32.const 1248
      i32.const 0
      call $~lib/string/String#charCodeAt
      i32.eq
      if
       local.get $0
       i32.const 1296
       call $~lib/assemblyscript-json/encoder/JSONEncoder#write
      else       
       local.get $4
       i32.const 1320
       i32.const 0
       call $~lib/string/String#charCodeAt
       i32.eq
       if
        local.get $0
        i32.const 1344
        call $~lib/assemblyscript-json/encoder/JSONEncoder#write
       else        
        local.get $4
        i32.const 1368
        i32.const 0
        call $~lib/string/String#charCodeAt
        i32.eq
        if
         local.get $0
         i32.const 1392
         call $~lib/assemblyscript-json/encoder/JSONEncoder#write
        else         
         local.get $4
         i32.const 1416
         i32.const 0
         call $~lib/string/String#charCodeAt
         i32.eq
         if
          local.get $0
          i32.const 1440
          call $~lib/assemblyscript-json/encoder/JSONEncoder#write
         else          
          local.get $4
          i32.const 1464
          i32.const 0
          call $~lib/string/String#charCodeAt
          i32.eq
          if
           local.get $0
           i32.const 1488
           call $~lib/assemblyscript-json/encoder/JSONEncoder#write
          else           
           i32.const 0
           i32.eqz
           if
            i32.const 1512
            local.get $4
            call $~lib/number/I32#toString
            local.tee $7
            call $~lib/string/String.__concat
            local.tee $8
            i32.const 2048
            i32.const 108
            i32.const 20
            call $~lib/builtins/abort
            unreachable
           end
           local.get $7
           call $~lib/rt/pure/__release
           local.get $8
           call $~lib/rt/pure/__release
          end
         end
        end
       end
      end
     end
     local.get $6
     call $~lib/rt/pure/__release
    end
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $loop|0
   end
   unreachable
  end
  local.get $0
  local.get $1
  local.get $2
  local.get $1
  call $~lib/string/String#get:length
  call $~lib/string/String#substring
  local.tee $5
  call $~lib/assemblyscript-json/encoder/JSONEncoder#write
  local.get $0
  i32.const 1224
  call $~lib/assemblyscript-json/encoder/JSONEncoder#write
  local.get $5
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
 )
 (func $~lib/assemblyscript-json/encoder/JSONEncoder#writeKey (; 103 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  call $~lib/assemblyscript-json/encoder/JSONEncoder#get:isFirstKey
  i32.const 0
  i32.ne
  i32.eqz
  if
   local.get $0
   i32.const 1200
   call $~lib/assemblyscript-json/encoder/JSONEncoder#write
  else   
   local.get $0
   i32.load
   local.get $0
   i32.load
   call $~lib/array/Array<i32>#get:length
   i32.const 1
   i32.sub
   i32.const 0
   call $~lib/array/Array<i32>#__set
  end
  local.get $1
  i32.const 0
  call $~lib/string/String.__ne
  if (result i32)
   local.get $1
   call $~lib/string/String#get:length
   i32.const 0
   i32.gt_s
  else   
   i32.const 0
  end
  if
   local.get $0
   local.get $1
   local.tee $2
   if (result i32)
    local.get $2
   else    
    unreachable
   end
   call $~lib/assemblyscript-json/encoder/JSONEncoder#writeString
   local.get $0
   i32.const 2136
   call $~lib/assemblyscript-json/encoder/JSONEncoder#write
  end
  local.get $1
  call $~lib/rt/pure/__release
 )
 (func $~lib/assemblyscript-json/encoder/JSONEncoder#setNull (; 104 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  local.get $1
  call $~lib/assemblyscript-json/encoder/JSONEncoder#writeKey
  local.get $0
  i32.const 584
  call $~lib/assemblyscript-json/encoder/JSONEncoder#write
  local.get $1
  call $~lib/rt/pure/__release
 )
 (func $~lib/assemblyscript-json/decoder/JSONHandler#constructor (; 105 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  i32.eqz
  if
   i32.const 0
   i32.const 11
   call $~lib/rt/tlsf/__alloc
   call $~lib/rt/pure/__retain
   local.set $0
  end
  local.get $0
 )
 (func $~lib/assemblyscript-json/decoder/ThrowingJSONHandler#constructor (; 106 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  i32.eqz
  if
   i32.const 0
   i32.const 12
   call $~lib/rt/tlsf/__alloc
   call $~lib/rt/pure/__retain
   local.set $0
  end
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONHandler#constructor
  local.set $0
  local.get $0
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/nearEntry/PrimitiveHandler<~lib/string/String>>#constructor (; 107 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  i32.eqz
  if
   i32.const 8
   i32.const 14
   call $~lib/rt/tlsf/__alloc
   call $~lib/rt/pure/__retain
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  local.tee $2
  local.get $1
  local.tee $3
  local.get $2
  i32.load
  local.tee $2
  i32.ne
  if
   local.get $3
   call $~lib/rt/pure/__retain
   drop
   local.get $2
   call $~lib/rt/pure/__release
  end
  local.get $3
  i32.store
  local.get $1
  call $~lib/rt/pure/__release
  local.get $0
 )
 (func $~lib/nearEntry/PrimitiveHandler<~lib/string/String>#constructor (; 108 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  if (result i32)
   local.get $0
  else   
   i32.const 8
   i32.const 13
   call $~lib/rt/tlsf/__alloc
   call $~lib/rt/pure/__retain
  end
  call $~lib/assemblyscript-json/decoder/ThrowingJSONHandler#constructor
  local.set $0
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  local.tee $1
  i32.const 0
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/nearEntry/PrimitiveHandler<~lib/string/String>>#constructor
  local.set $2
  local.get $1
  i32.load offset=4
  call $~lib/rt/pure/__release
  local.get $2
  i32.store offset=4
  local.get $0
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/nearEntry/PrimitiveHandler<bool>>#constructor (; 109 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  i32.eqz
  if
   i32.const 8
   i32.const 17
   call $~lib/rt/tlsf/__alloc
   call $~lib/rt/pure/__retain
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  local.tee $2
  local.get $1
  local.tee $3
  local.get $2
  i32.load
  local.tee $2
  i32.ne
  if
   local.get $3
   call $~lib/rt/pure/__retain
   drop
   local.get $2
   call $~lib/rt/pure/__release
  end
  local.get $3
  i32.store
  local.get $1
  call $~lib/rt/pure/__release
  local.get $0
 )
 (func $~lib/nearEntry/PrimitiveHandler<bool>#constructor (; 110 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  if (result i32)
   local.get $0
  else   
   i32.const 8
   i32.const 16
   call $~lib/rt/tlsf/__alloc
   call $~lib/rt/pure/__retain
  end
  call $~lib/assemblyscript-json/decoder/ThrowingJSONHandler#constructor
  local.set $0
  local.get $0
  i32.const 0
  i32.store8
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  local.tee $1
  i32.const 0
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/nearEntry/PrimitiveHandler<bool>>#constructor
  local.set $2
  local.get $1
  i32.load offset=4
  call $~lib/rt/pure/__release
  local.get $2
  i32.store offset=4
  local.get $0
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/nearEntry/PrimitiveHandler<u64>>#constructor (; 111 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  i32.eqz
  if
   i32.const 8
   i32.const 19
   call $~lib/rt/tlsf/__alloc
   call $~lib/rt/pure/__retain
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  local.tee $2
  local.get $1
  local.tee $3
  local.get $2
  i32.load
  local.tee $2
  i32.ne
  if
   local.get $3
   call $~lib/rt/pure/__retain
   drop
   local.get $2
   call $~lib/rt/pure/__release
  end
  local.get $3
  i32.store
  local.get $1
  call $~lib/rt/pure/__release
  local.get $0
 )
 (func $~lib/nearEntry/PrimitiveHandler<u64>#constructor (; 112 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  if (result i32)
   local.get $0
  else   
   i32.const 12
   i32.const 18
   call $~lib/rt/tlsf/__alloc
   call $~lib/rt/pure/__retain
  end
  call $~lib/assemblyscript-json/decoder/ThrowingJSONHandler#constructor
  local.set $0
  local.get $0
  i64.const 0
  i64.store
  local.get $0
  i32.const 0
  i32.store offset=8
  local.get $0
  local.tee $1
  i32.const 0
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/nearEntry/PrimitiveHandler<u64>>#constructor
  local.set $2
  local.get $1
  i32.load offset=8
  call $~lib/rt/pure/__release
  local.get $2
  i32.store offset=8
  local.get $0
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/nearEntry/PrimitiveHandler<i64>>#constructor (; 113 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  i32.eqz
  if
   i32.const 8
   i32.const 21
   call $~lib/rt/tlsf/__alloc
   call $~lib/rt/pure/__retain
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  local.tee $2
  local.get $1
  local.tee $3
  local.get $2
  i32.load
  local.tee $2
  i32.ne
  if
   local.get $3
   call $~lib/rt/pure/__retain
   drop
   local.get $2
   call $~lib/rt/pure/__release
  end
  local.get $3
  i32.store
  local.get $1
  call $~lib/rt/pure/__release
  local.get $0
 )
 (func $~lib/nearEntry/PrimitiveHandler<i64>#constructor (; 114 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  if (result i32)
   local.get $0
  else   
   i32.const 12
   i32.const 20
   call $~lib/rt/tlsf/__alloc
   call $~lib/rt/pure/__retain
  end
  call $~lib/assemblyscript-json/decoder/ThrowingJSONHandler#constructor
  local.set $0
  local.get $0
  i64.const 0
  i64.store
  local.get $0
  i32.const 0
  i32.store offset=8
  local.get $0
  local.tee $1
  i32.const 0
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/nearEntry/PrimitiveHandler<i64>>#constructor
  local.set $2
  local.get $1
  i32.load offset=8
  call $~lib/rt/pure/__release
  local.get $2
  i32.store offset=8
  local.get $0
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/nearEntry/PrimitiveHandler<u32>>#constructor (; 115 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  i32.eqz
  if
   i32.const 8
   i32.const 23
   call $~lib/rt/tlsf/__alloc
   call $~lib/rt/pure/__retain
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  local.tee $2
  local.get $1
  local.tee $3
  local.get $2
  i32.load
  local.tee $2
  i32.ne
  if
   local.get $3
   call $~lib/rt/pure/__retain
   drop
   local.get $2
   call $~lib/rt/pure/__release
  end
  local.get $3
  i32.store
  local.get $1
  call $~lib/rt/pure/__release
  local.get $0
 )
 (func $~lib/nearEntry/PrimitiveHandler<u32>#constructor (; 116 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  if (result i32)
   local.get $0
  else   
   i32.const 8
   i32.const 22
   call $~lib/rt/tlsf/__alloc
   call $~lib/rt/pure/__retain
  end
  call $~lib/assemblyscript-json/decoder/ThrowingJSONHandler#constructor
  local.set $0
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  local.tee $1
  i32.const 0
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/nearEntry/PrimitiveHandler<u32>>#constructor
  local.set $2
  local.get $1
  i32.load offset=4
  call $~lib/rt/pure/__release
  local.get $2
  i32.store offset=4
  local.get $0
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/nearEntry/PrimitiveHandler<i32>>#constructor (; 117 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  i32.eqz
  if
   i32.const 8
   i32.const 25
   call $~lib/rt/tlsf/__alloc
   call $~lib/rt/pure/__retain
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  local.tee $2
  local.get $1
  local.tee $3
  local.get $2
  i32.load
  local.tee $2
  i32.ne
  if
   local.get $3
   call $~lib/rt/pure/__retain
   drop
   local.get $2
   call $~lib/rt/pure/__release
  end
  local.get $3
  i32.store
  local.get $1
  call $~lib/rt/pure/__release
  local.get $0
 )
 (func $~lib/nearEntry/PrimitiveHandler<i32>#constructor (; 118 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  if (result i32)
   local.get $0
  else   
   i32.const 8
   i32.const 24
   call $~lib/rt/tlsf/__alloc
   call $~lib/rt/pure/__retain
  end
  call $~lib/assemblyscript-json/decoder/ThrowingJSONHandler#constructor
  local.set $0
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  local.tee $1
  i32.const 0
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/nearEntry/PrimitiveHandler<i32>>#constructor
  local.set $2
  local.get $1
  i32.load offset=4
  call $~lib/rt/pure/__release
  local.get $2
  i32.store offset=4
  local.get $0
 )
 (func $start:~lib/nearEntry (; 119 ;) (type $FUNCSIG$v)
  i32.const 0
  call $~lib/nearEntry/PrimitiveHandler<~lib/string/String>#constructor
  global.set $~lib/nearEntry/PrimitiveHandler.String
  i32.const 0
  call $~lib/nearEntry/PrimitiveHandler<bool>#constructor
  global.set $~lib/nearEntry/PrimitiveHandler.Boolean
  i32.const 0
  call $~lib/nearEntry/PrimitiveHandler<u64>#constructor
  global.set $~lib/nearEntry/PrimitiveHandler.U64
  i32.const 0
  call $~lib/nearEntry/PrimitiveHandler<i64>#constructor
  global.set $~lib/nearEntry/PrimitiveHandler.I64
  i32.const 0
  call $~lib/nearEntry/PrimitiveHandler<u32>#constructor
  global.set $~lib/nearEntry/PrimitiveHandler.U32
  i32.const 0
  call $~lib/nearEntry/PrimitiveHandler<i32>#constructor
  global.set $~lib/nearEntry/PrimitiveHandler.I32
 )
 (func $~lib/assemblyscript-json/encoder/JSONEncoder#setString (; 120 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $2
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  local.get $1
  call $~lib/assemblyscript-json/encoder/JSONEncoder#writeKey
  local.get $0
  local.get $2
  call $~lib/assemblyscript-json/encoder/JSONEncoder#writeString
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
 )
 (func $~lib/nearEntry/encode<~lib/string/String> (; 121 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  drop
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $2
  call $~lib/rt/pure/__retain
  drop
  local.get $1
  i32.const 0
  call $~lib/string/String.__eq
  if
   local.get $0
   local.get $2
   call $~lib/assemblyscript-json/encoder/JSONEncoder#setNull
  else   
   local.get $0
   local.get $2
   local.get $1
   call $~lib/assemblyscript-json/encoder/JSONEncoder#setString
  end
  local.get $0
  local.set $3
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  local.get $3
 )
 (func $~lib/array/Array<~lib/string/String>#join_str (; 122 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  i32.load offset=12
  i32.const 1
  i32.sub
  local.set $2
  local.get $2
  i32.const 0
  i32.lt_s
  if
   i32.const 1024
   call $~lib/rt/pure/__retain
   local.set $3
   local.get $1
   call $~lib/rt/pure/__release
   local.get $3
   return
  end
  local.get $0
  i32.load offset=4
  local.set $4
  local.get $2
  i32.eqz
  if
   local.get $4
   i32.load
   call $~lib/rt/pure/__retain
   local.set $3
   local.get $1
   call $~lib/rt/pure/__release
   local.get $3
   return
  end
  local.get $1
  call $~lib/string/String#get:length
  local.set $5
  i32.const 0
  local.set $6
  i32.const 0
  local.set $7
  block $break|0
   i32.const 0
   local.set $3
   local.get $2
   i32.const 1
   i32.add
   local.set $8
   loop $loop|0
    local.get $3
    local.get $8
    i32.lt_s
    i32.eqz
    br_if $break|0
    local.get $4
    local.get $3
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $9
    local.get $7
    local.tee $10
    i32.ne
    if
     local.get $9
     call $~lib/rt/pure/__retain
     drop
     local.get $10
     call $~lib/rt/pure/__release
    end
    local.get $9
    local.set $7
    local.get $7
    i32.const 0
    i32.ne
    if
     local.get $6
     local.get $7
     call $~lib/string/String#get:length
     i32.add
     local.set $6
    end
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $loop|0
   end
   unreachable
  end
  i32.const 0
  local.set $11
  local.get $6
  local.get $5
  local.get $2
  i32.mul
  i32.add
  i32.const 1
  i32.shl
  i32.const 1
  call $~lib/rt/tlsf/__alloc
  call $~lib/rt/pure/__retain
  local.set $12
  block $break|1
   i32.const 0
   local.set $8
   loop $loop|1
    local.get $8
    local.get $2
    i32.lt_s
    i32.eqz
    br_if $break|1
    local.get $4
    local.get $8
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $10
    local.get $7
    local.tee $3
    i32.ne
    if
     local.get $10
     call $~lib/rt/pure/__retain
     drop
     local.get $3
     call $~lib/rt/pure/__release
    end
    local.get $10
    local.set $7
    local.get $7
    i32.const 0
    i32.ne
    if
     local.get $7
     call $~lib/string/String#get:length
     local.set $10
     local.get $12
     local.get $11
     i32.const 1
     i32.shl
     i32.add
     local.get $7
     local.get $10
     i32.const 1
     i32.shl
     call $~lib/memory/memory.copy
     local.get $11
     local.get $10
     i32.add
     local.set $11
    end
    local.get $5
    if
     local.get $12
     local.get $11
     i32.const 1
     i32.shl
     i32.add
     local.get $1
     local.get $5
     i32.const 1
     i32.shl
     call $~lib/memory/memory.copy
     local.get $11
     local.get $5
     i32.add
     local.set $11
    end
    local.get $8
    i32.const 1
    i32.add
    local.set $8
    br $loop|1
   end
   unreachable
  end
  local.get $4
  local.get $2
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.tee $9
  local.get $7
  local.tee $8
  i32.ne
  if
   local.get $9
   call $~lib/rt/pure/__retain
   drop
   local.get $8
   call $~lib/rt/pure/__release
  end
  local.get $9
  local.set $7
  local.get $7
  i32.const 0
  i32.ne
  if
   local.get $12
   local.get $11
   i32.const 1
   i32.shl
   i32.add
   local.get $7
   local.get $7
   call $~lib/string/String#get:length
   i32.const 1
   i32.shl
   call $~lib/memory/memory.copy
  end
  local.get $12
  local.set $9
  local.get $1
  call $~lib/rt/pure/__release
  local.get $7
  call $~lib/rt/pure/__release
  local.get $9
 )
 (func $~lib/array/Array<~lib/string/String>#join (; 123 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/string/String>#join_str
  local.set $2
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  return
 )
 (func $~lib/assemblyscript-json/encoder/JSONEncoder#toString (; 124 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  i32.load offset=4
  i32.const 1024
  call $~lib/array/Array<~lib/string/String>#join
 )
 (func $~lib/assemblyscript-json/util/index/Buffer.getPtr (; 125 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  i32.load offset=4
  local.set $1
  local.get $0
  call $~lib/rt/pure/__release
  local.get $1
 )
 (func $~lib/assemblyscript-json/util/index/Buffer.fromString (; 126 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  drop
  i32.const 0
  local.get $0
  i32.const 0
  call $~lib/string/String.UTF8.byteLength
  call $~lib/typedarray/Uint8Array#constructor
  local.set $1
  local.get $0
  i32.const 0
  call $~lib/string/String.UTF8.encode
  local.tee $2
  local.set $3
  local.get $1
  call $~lib/assemblyscript-json/util/index/Buffer.getPtr
  local.get $3
  local.get $0
  i32.const 0
  call $~lib/string/String.UTF8.byteLength
  call $~lib/memory/memory.copy
  local.get $1
  local.set $4
  local.get $2
  call $~lib/rt/pure/__release
  local.get $0
  call $~lib/rt/pure/__release
  local.get $4
 )
 (func $~lib/assemblyscript-json/encoder/JSONEncoder#serialize (; 127 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  call $~lib/assemblyscript-json/encoder/JSONEncoder#toString
  local.tee $1
  call $~lib/assemblyscript-json/util/index/Buffer.fromString
  local.set $2
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
 )
 (func $~lib/typedarray/Uint8Array#get:buffer (; 128 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  i32.load
  call $~lib/rt/pure/__retain
 )
 (func $assembly/main/__wrapper_hello (; 129 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  call $assembly/main/hello
  local.set $0
  i32.const 0
  call $~lib/assemblyscript-json/encoder/JSONEncoder#constructor
  local.set $1
  local.get $0
  i32.const 0
  call $~lib/string/String.__eq
  if
   local.get $1
   i32.const 0
   call $~lib/assemblyscript-json/encoder/JSONEncoder#setNull
  else   
   local.get $1
   local.get $0
   i32.const 0
   call $~lib/nearEntry/encode<~lib/string/String>
   call $~lib/rt/pure/__release
  end
  local.get $1
  call $~lib/assemblyscript-json/encoder/JSONEncoder#serialize
  local.set $2
  local.get $2
  call $~lib/arraybuffer/ArrayBufferView#get:byteLength
  i64.extend_i32_s
  local.get $2
  call $~lib/typedarray/Uint8Array#get:buffer
  local.tee $3
  i64.extend_i32_u
  call $~lib/nearEntry/value_return
  local.get $0
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  local.get $3
  call $~lib/rt/pure/__release
 )
 (func $~lib/arraybuffer/ArrayBufferView#get:byteOffset (; 130 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  i32.load offset=4
  local.get $0
  i32.load
  i32.sub
 )
 (func $~lib/arraybuffer/ArrayBuffer#get:byteLength (; 131 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  i32.const 16
  i32.sub
  i32.load offset=12
 )
 (func $~lib/arraybuffer/ArrayBuffer#slice (; 132 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  local.set $3
  local.get $1
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $3
   local.get $1
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
  else   
   local.get $1
   local.tee $4
   local.get $3
   local.tee $5
   local.get $4
   local.get $5
   i32.lt_s
   select
  end
  local.set $1
  local.get $2
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $3
   local.get $2
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
  else   
   local.get $2
   local.tee $4
   local.get $3
   local.tee $5
   local.get $4
   local.get $5
   i32.lt_s
   select
  end
  local.set $2
  local.get $2
  local.get $1
  i32.sub
  local.tee $4
  i32.const 0
  local.tee $5
  local.get $4
  local.get $5
  i32.gt_s
  select
  local.set $6
  local.get $6
  i32.const 0
  call $~lib/rt/tlsf/__alloc
  local.set $7
  local.get $7
  local.get $0
  local.get $1
  i32.add
  local.get $6
  call $~lib/memory/memory.copy
  local.get $7
  call $~lib/rt/pure/__retain
 )
 (func $~lib/near-runtime-ts/util/util.uint8ArrayToBuffer (; 133 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  call $~lib/typedarray/Uint8Array#get:buffer
  local.tee $1
  local.get $0
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $0
  call $~lib/arraybuffer/ArrayBufferView#get:byteLength
  local.get $0
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.add
  call $~lib/arraybuffer/ArrayBuffer#slice
  local.set $2
  local.get $1
  call $~lib/rt/pure/__release
  local.get $0
  call $~lib/rt/pure/__release
  local.get $2
 )
 (func $~lib/string/String.UTF8.decodeUnsafe (; 134 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $0
  local.set $3
  local.get $0
  local.get $1
  i32.add
  local.set $4
  local.get $4
  local.get $3
  i32.ge_u
  i32.eqz
  if
   i32.const 0
   i32.const 944
   i32.const 585
   i32.const 6
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 1
  i32.shl
  i32.const 1
  call $~lib/rt/tlsf/__alloc
  local.set $5
  local.get $5
  local.set $6
  block $break|0
   loop $continue|0
    local.get $3
    local.get $4
    i32.lt_u
    i32.eqz
    br_if $break|0
    local.get $3
    local.tee $7
    i32.const 1
    i32.add
    local.set $3
    local.get $7
    i32.load8_u
    local.set $7
    local.get $7
    i32.const 128
    i32.lt_u
    if
     local.get $2
     if (result i32)
      local.get $7
      i32.eqz
     else      
      i32.const 0
     end
     if
      br $break|0
     end
     local.get $6
     local.get $7
     i32.store16
     local.get $6
     i32.const 2
     i32.add
     local.set $6
    else     
     local.get $7
     i32.const 191
     i32.gt_u
     if (result i32)
      local.get $7
      i32.const 224
      i32.lt_u
     else      
      i32.const 0
     end
     if
      local.get $4
      local.get $3
      i32.sub
      i32.const 1
      i32.lt_u
      if
       br $break|0
      end
      local.get $6
      local.get $7
      i32.const 31
      i32.and
      i32.const 6
      i32.shl
      local.get $3
      local.tee $8
      i32.const 1
      i32.add
      local.set $3
      local.get $8
      i32.load8_u
      i32.const 63
      i32.and
      i32.or
      i32.store16
      local.get $6
      i32.const 2
      i32.add
      local.set $6
     else      
      local.get $7
      i32.const 239
      i32.gt_u
      if (result i32)
       local.get $7
       i32.const 365
       i32.lt_u
      else       
       i32.const 0
      end
      if
       local.get $4
       local.get $3
       i32.sub
       i32.const 3
       i32.lt_u
       if
        br $break|0
       end
       local.get $7
       i32.const 7
       i32.and
       i32.const 18
       i32.shl
       local.get $3
       i32.load8_u
       i32.const 63
       i32.and
       i32.const 12
       i32.shl
       i32.or
       local.get $3
       i32.load8_u offset=1
       i32.const 63
       i32.and
       i32.const 6
       i32.shl
       i32.or
       local.get $3
       i32.load8_u offset=2
       i32.const 63
       i32.and
       i32.or
       i32.const 65536
       i32.sub
       local.set $7
       local.get $3
       i32.const 3
       i32.add
       local.set $3
       local.get $6
       i32.const 55296
       local.get $7
       i32.const 10
       i32.shr_u
       i32.add
       i32.store16
       local.get $6
       i32.const 56320
       local.get $7
       i32.const 1023
       i32.and
       i32.add
       i32.store16 offset=2
       local.get $6
       i32.const 4
       i32.add
       local.set $6
      else       
       local.get $4
       local.get $3
       i32.sub
       i32.const 2
       i32.lt_u
       if
        br $break|0
       end
       local.get $6
       local.get $7
       i32.const 15
       i32.and
       i32.const 12
       i32.shl
       local.get $3
       i32.load8_u
       i32.const 63
       i32.and
       i32.const 6
       i32.shl
       i32.or
       local.get $3
       i32.load8_u offset=1
       i32.const 63
       i32.and
       i32.or
       i32.store16
       local.get $3
       i32.const 2
       i32.add
       local.set $3
       local.get $6
       i32.const 2
       i32.add
       local.set $6
      end
     end
    end
    br $continue|0
   end
   unreachable
  end
  local.get $5
  local.get $6
  local.get $5
  i32.sub
  call $~lib/rt/tlsf/__realloc
  call $~lib/rt/pure/__retain
 )
 (func $~lib/string/String.UTF8.decode (; 135 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  local.get $0
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  local.get $1
  call $~lib/string/String.UTF8.decodeUnsafe
  local.set $2
  local.get $0
  call $~lib/rt/pure/__release
  local.get $2
 )
 (func $~lib/near-runtime-ts/util/util.bytesToString (; 136 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  i32.const 0
  i32.eq
  if
   i32.const 0
   call $~lib/rt/pure/__retain
   local.set $1
   local.get $0
   call $~lib/rt/pure/__release
   local.get $1
   return
  end
  local.get $0
  call $~lib/near-runtime-ts/util/util.uint8ArrayToBuffer
  local.tee $1
  i32.const 1
  call $~lib/string/String.UTF8.decode
  local.set $2
  local.get $1
  call $~lib/rt/pure/__release
  local.get $0
  call $~lib/rt/pure/__release
  local.get $2
 )
 (func $~lib/near-runtime-ts/storage/Storage#_fetchIter (; 137 ;) (type $FUNCSIG$iiji) (param $0 i32) (param $1 i64) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i64)
  (local $6 i32)
  i32.const 0
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#constructor
  local.set $3
  block $break|0
   loop $continue|0
    local.get $2
    local.tee $4
    i32.const 1
    i32.sub
    local.set $2
    local.get $4
    i32.const 0
    i32.ne
    if (result i32)
     local.get $1
     i64.const 0
     i64.const 1
     call $~lib/near-runtime-ts/runtime_api/runtime_api.storage_iter_next
     i64.const 1
     i64.eq
    else     
     i32.const 0
    end
    i32.eqz
    br_if $break|0
    i64.const 0
    call $~lib/near-runtime-ts/runtime_api/runtime_api.register_len
    local.set $5
    i32.const 0
    local.get $5
    i32.wrap_i64
    call $~lib/typedarray/Uint8Array#constructor
    local.set $4
    i64.const 0
    local.get $4
    i32.load offset=4
    i64.extend_i32_u
    call $~lib/near-runtime-ts/runtime_api/runtime_api.read_register
    local.get $4
    i32.const 0
    i32.ne
    if
     local.get $3
     local.get $4
     call $~lib/near-runtime-ts/util/util.bytesToString
     local.tee $6
     call $~lib/array/Array<~lib/string/String>#push
     drop
     local.get $6
     call $~lib/rt/pure/__release
    end
    local.get $4
    call $~lib/rt/pure/__release
    br $continue|0
   end
   unreachable
  end
  local.get $3
 )
 (func $~lib/near-runtime-ts/storage/Storage#keys (; 138 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i64)
  (local $5 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $1
  call $~lib/near-runtime-ts/util/util.stringToBytes
  local.set $3
  local.get $3
  call $~lib/arraybuffer/ArrayBufferView#get:byteLength
  i64.extend_i32_s
  local.get $3
  i32.load offset=4
  i64.extend_i32_u
  call $~lib/near-runtime-ts/runtime_api/runtime_api.storage_iter_prefix
  local.set $4
  local.get $0
  local.get $4
  local.get $2
  call $~lib/near-runtime-ts/storage/Storage#_fetchIter
  local.set $5
  local.get $3
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $5
 )
 (func $~lib/near-runtime-ts/storage/Storage#keys|trampoline (; 139 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~lib/argc
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   i32.const -1
   local.set $2
  end
  local.get $0
  local.get $1
  local.get $2
  call $~lib/near-runtime-ts/storage/Storage#keys
 )
 (func $~lib/array/Array<~lib/string/String>#get:length (; 140 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  i32.load offset=12
 )
 (func $~lib/near-runtime-ts/storage/Storage#setString (; 141 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i64)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $2
  call $~lib/rt/pure/__retain
  drop
  local.get $1
  call $~lib/near-runtime-ts/util/util.stringToBytes
  local.set $3
  local.get $2
  call $~lib/near-runtime-ts/util/util.stringToBytes
  local.set $4
  local.get $3
  call $~lib/arraybuffer/ArrayBufferView#get:byteLength
  i64.extend_i32_s
  local.get $3
  i32.load offset=4
  i64.extend_i32_u
  local.get $4
  call $~lib/arraybuffer/ArrayBufferView#get:byteLength
  i64.extend_i32_s
  local.get $4
  i32.load offset=4
  i64.extend_i32_u
  i64.const 0
  call $~lib/near-runtime-ts/runtime_api/runtime_api.storage_write
  local.set $5
  local.get $3
  call $~lib/rt/pure/__release
  local.get $4
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
 )
 (func $~lib/near-runtime-ts/storage/Storage#keyRange (; 142 ;) (type $FUNCSIG$iiiii) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i64)
  (local $7 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $2
  call $~lib/rt/pure/__retain
  drop
  local.get $1
  call $~lib/near-runtime-ts/util/util.stringToBytes
  local.set $4
  local.get $2
  call $~lib/near-runtime-ts/util/util.stringToBytes
  local.set $5
  local.get $4
  call $~lib/arraybuffer/ArrayBufferView#get:byteLength
  i64.extend_i32_s
  local.get $4
  i32.load offset=4
  i64.extend_i32_u
  local.get $5
  call $~lib/arraybuffer/ArrayBufferView#get:byteLength
  i64.extend_i32_s
  local.get $5
  i32.load offset=4
  i64.extend_i32_u
  call $~lib/near-runtime-ts/runtime_api/runtime_api.storage_iter_range
  local.set $6
  local.get $0
  local.get $6
  local.get $3
  call $~lib/near-runtime-ts/storage/Storage#_fetchIter
  local.set $7
  local.get $4
  call $~lib/rt/pure/__release
  local.get $5
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  local.get $7
 )
 (func $~lib/near-runtime-ts/storage/Storage#keyRange|trampoline (; 143 ;) (type $FUNCSIG$iiiii) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~lib/argc
     i32.const 2
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   i32.const -1
   local.set $3
  end
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $~lib/near-runtime-ts/storage/Storage#keyRange
 )
 (func $~lib/array/Array<~lib/string/String>#__unchecked_get (; 144 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  call $~lib/rt/pure/__retain
 )
 (func $~lib/array/Array<~lib/string/String>#__get (; 145 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 1040
   i32.const 1152
   i32.const 106
   i32.const 45
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  local.get $0
  i32.load offset=8
  i32.const 2
  i32.shr_u
  i32.ge_u
  if
   i32.const 704
   i32.const 1152
   i32.const 109
   i32.const 61
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/string/String>#__unchecked_get
 )
 (func $~lib/near-runtime-ts/storage/Storage#contains (; 146 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $1
  call $~lib/near-runtime-ts/util/util.stringToBytes
  local.set $2
  local.get $2
  call $~lib/arraybuffer/ArrayBufferView#get:byteLength
  i64.extend_i32_s
  local.get $2
  i32.load offset=4
  i64.extend_i32_u
  call $~lib/near-runtime-ts/runtime_api/runtime_api.storage_has_key
  i64.const 0
  i64.ne
  local.set $3
  local.get $2
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $3
 )
 (func $~lib/near-runtime-ts/storage/Storage#delete (; 147 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $1
  call $~lib/near-runtime-ts/util/util.stringToBytes
  local.set $2
  local.get $2
  call $~lib/arraybuffer/ArrayBufferView#get:byteLength
  i64.extend_i32_s
  local.get $2
  i32.load offset=4
  i64.extend_i32_u
  i64.const 0
  call $~lib/near-runtime-ts/runtime_api/runtime_api.storage_remove
  drop
  local.get $2
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
 )
 (func $assembly/main/storageKeysTest (; 148 ;) (type $FUNCSIG$i) (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  i32.const 2160
  call $~lib/near-runtime-ts/logging/logging.log
  i32.const 1
  global.set $~lib/argc
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 2208
  i32.const 0
  call $~lib/near-runtime-ts/storage/Storage#keys|trampoline
  local.set $0
  local.get $0
  call $~lib/array/Array<~lib/string/String>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 2240
   i32.const 2344
   i32.const 208
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 2392
  i32.const 2432
  call $~lib/near-runtime-ts/storage/Storage#setString
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 2208
  i32.const 2464
  call $~lib/near-runtime-ts/storage/Storage#setString
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 2496
  i32.const 2464
  call $~lib/near-runtime-ts/storage/Storage#setString
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 2528
  i32.const 2560
  call $~lib/near-runtime-ts/storage/Storage#setString
  i32.const 2
  global.set $~lib/argc
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 2208
  i32.const 2592
  i32.const 0
  call $~lib/near-runtime-ts/storage/Storage#keyRange|trampoline
  local.set $1
  local.get $1
  call $~lib/array/Array<~lib/string/String>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 2624
   i32.const 2344
   i32.const 214
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#__get
  local.tee $2
  i32.const 2208
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 2688
   i32.const 2344
   i32.const 215
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 1
  call $~lib/array/Array<~lib/string/String>#__get
  local.tee $3
  i32.const 2496
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 2688
   i32.const 2344
   i32.const 216
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 2208
  i32.const 2592
  i32.const 1
  call $~lib/near-runtime-ts/storage/Storage#keyRange
  local.set $4
  local.get $4
  call $~lib/array/Array<~lib/string/String>#get:length
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 2624
   i32.const 2344
   i32.const 218
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#__get
  local.tee $5
  i32.const 2208
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 2688
   i32.const 2344
   i32.const 219
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 1
  global.set $~lib/argc
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 2208
  i32.const 0
  call $~lib/near-runtime-ts/storage/Storage#keys|trampoline
  local.set $6
  local.get $6
  call $~lib/array/Array<~lib/string/String>#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 2624
   i32.const 2344
   i32.const 221
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $6
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#__get
  local.tee $7
  i32.const 2208
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 2688
   i32.const 2344
   i32.const 222
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $6
  i32.const 1
  call $~lib/array/Array<~lib/string/String>#__get
  local.tee $8
  i32.const 2496
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 2688
   i32.const 2344
   i32.const 223
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $6
  i32.const 2
  call $~lib/array/Array<~lib/string/String>#__get
  local.tee $9
  i32.const 2528
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 2688
   i32.const 2344
   i32.const 224
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 2208
  i32.const 1
  call $~lib/near-runtime-ts/storage/Storage#keys
  local.set $10
  local.get $10
  call $~lib/array/Array<~lib/string/String>#get:length
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 2624
   i32.const 2344
   i32.const 226
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $6
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#__get
  local.tee $11
  i32.const 2208
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 2688
   i32.const 2344
   i32.const 227
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 2392
  call $~lib/near-runtime-ts/storage/Storage#contains
  i32.eqz
  if
   i32.const 2752
   i32.const 2344
   i32.const 228
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 2208
  call $~lib/near-runtime-ts/storage/Storage#contains
  i32.eqz
  if
   i32.const 2752
   i32.const 2344
   i32.const 229
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 2496
  call $~lib/near-runtime-ts/storage/Storage#contains
  i32.eqz
  if
   i32.const 2752
   i32.const 2344
   i32.const 230
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 2528
  call $~lib/near-runtime-ts/storage/Storage#contains
  i32.eqz
  if
   i32.const 2752
   i32.const 2344
   i32.const 231
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 2824
  call $~lib/near-runtime-ts/storage/Storage#contains
  i32.eqz
  i32.eqz
  if
   i32.const 2864
   i32.const 2344
   i32.const 232
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/near-runtime-ts/storage/storage
  local.set $13
  i32.const 2528
  call $~lib/rt/pure/__retain
  local.set $12
  local.get $13
  local.get $12
  call $~lib/near-runtime-ts/storage/Storage#contains
  local.set $14
  local.get $12
  call $~lib/rt/pure/__release
  local.get $14
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 2752
   i32.const 2344
   i32.const 233
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/near-runtime-ts/storage/storage
  local.set $12
  i32.const 2824
  call $~lib/rt/pure/__retain
  local.set $14
  local.get $12
  local.get $14
  call $~lib/near-runtime-ts/storage/Storage#contains
  local.set $13
  local.get $14
  call $~lib/rt/pure/__release
  local.get $13
  i32.const 0
  i32.ne
  i32.eqz
  i32.eqz
  if
   i32.const 2864
   i32.const 2344
   i32.const 234
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 2208
  call $~lib/near-runtime-ts/storage/Storage#delete
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 2208
  call $~lib/near-runtime-ts/storage/Storage#contains
  i32.eqz
  i32.eqz
  if
   i32.const 2936
   i32.const 2344
   i32.const 236
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 2496
  call $~lib/near-runtime-ts/storage/Storage#contains
  i32.eqz
  if
   i32.const 3032
   i32.const 2344
   i32.const 237
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 1
  global.set $~lib/argc
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 2208
  i32.const 0
  call $~lib/near-runtime-ts/storage/Storage#keys|trampoline
  local.set $12
  local.get $12
  call $~lib/array/Array<~lib/string/String>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 3104
   i32.const 2344
   i32.const 239
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $12
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#__get
  local.tee $14
  i32.const 2496
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 3208
   i32.const 2344
   i32.const 240
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $12
  i32.const 1
  call $~lib/array/Array<~lib/string/String>#__get
  local.tee $13
  i32.const 2528
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 3208
   i32.const 2344
   i32.const 241
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $12
  local.set $15
  local.get $0
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  local.get $3
  call $~lib/rt/pure/__release
  local.get $4
  call $~lib/rt/pure/__release
  local.get $5
  call $~lib/rt/pure/__release
  local.get $6
  call $~lib/rt/pure/__release
  local.get $7
  call $~lib/rt/pure/__release
  local.get $8
  call $~lib/rt/pure/__release
  local.get $9
  call $~lib/rt/pure/__release
  local.get $10
  call $~lib/rt/pure/__release
  local.get $11
  call $~lib/rt/pure/__release
  local.get $14
  call $~lib/rt/pure/__release
  local.get $13
  call $~lib/rt/pure/__release
  local.get $15
 )
 (func $~lib/assemblyscript-json/encoder/JSONEncoder#pushArray (; 149 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  local.get $1
  call $~lib/assemblyscript-json/encoder/JSONEncoder#writeKey
  local.get $0
  i32.const 3296
  call $~lib/assemblyscript-json/encoder/JSONEncoder#write
  local.get $0
  i32.load
  i32.const 1
  call $~lib/array/Array<i32>#push
  drop
  i32.const 1
  local.set $2
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
 )
 (func $~lib/array/Array<i32>#pop (; 150 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  i32.load offset=12
  local.set $1
  local.get $1
  i32.const 1
  i32.lt_s
  if
   i32.const 3344
   i32.const 1152
   i32.const 287
   i32.const 20
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $2
  local.get $0
  local.get $1
  i32.store offset=12
  local.get $2
 )
 (func $~lib/assemblyscript-json/encoder/JSONEncoder#popArray (; 151 ;) (type $FUNCSIG$vi) (param $0 i32)
  local.get $0
  i32.const 3320
  call $~lib/assemblyscript-json/encoder/JSONEncoder#write
  local.get $0
  i32.load
  call $~lib/array/Array<i32>#pop
  drop
 )
 (func $~lib/nearEntry/encode<~lib/array/Array<~lib/string/String>> (; 152 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  drop
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $2
  call $~lib/rt/pure/__retain
  drop
  local.get $1
  i32.const 0
  i32.eq
  if
   local.get $0
   local.get $2
   call $~lib/assemblyscript-json/encoder/JSONEncoder#setNull
  else   
   local.get $0
   local.get $2
   call $~lib/assemblyscript-json/encoder/JSONEncoder#pushArray
   drop
   block $break|0
    i32.const 0
    local.set $3
    loop $loop|0
     local.get $3
     local.get $1
     call $~lib/array/Array<~lib/string/String>#get:length
     i32.lt_s
     i32.eqz
     br_if $break|0
     local.get $0
     local.get $1
     local.get $3
     call $~lib/array/Array<~lib/string/String>#__get
     local.tee $4
     i32.const 0
     call $~lib/nearEntry/encode<~lib/string/String>
     call $~lib/rt/pure/__release
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     local.get $4
     call $~lib/rt/pure/__release
     br $loop|0
    end
    unreachable
   end
   local.get $0
   call $~lib/assemblyscript-json/encoder/JSONEncoder#popArray
  end
  local.get $0
  local.set $4
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  local.get $4
 )
 (func $assembly/main/__wrapper_storageKeysTest (; 153 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  call $assembly/main/storageKeysTest
  local.set $0
  i32.const 0
  call $~lib/assemblyscript-json/encoder/JSONEncoder#constructor
  local.set $1
  local.get $1
  local.get $0
  i32.const 0
  call $~lib/nearEntry/encode<~lib/array/Array<~lib/string/String>>
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/assemblyscript-json/encoder/JSONEncoder#serialize
  local.set $2
  local.get $2
  call $~lib/arraybuffer/ArrayBufferView#get:byteLength
  i64.extend_i32_s
  local.get $2
  call $~lib/typedarray/Uint8Array#get:buffer
  local.tee $3
  i64.extend_i32_u
  call $~lib/nearEntry/value_return
  local.get $0
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  local.get $3
  call $~lib/rt/pure/__release
 )
 (func $~lib/assemblyscript-json/decoder/ThrowingJSONHandler#setString (; 154 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $2
  call $~lib/rt/pure/__retain
  drop
  i32.const 0
  i32.eqz
  if
   i32.const 3416
   local.get $1
   call $~lib/string/String.__concat
   local.tee $3
   i32.const 3480
   call $~lib/string/String.__concat
   local.tee $4
   local.get $2
   call $~lib/string/String.__concat
   local.tee $5
   i32.const 1224
   call $~lib/string/String.__concat
   local.tee $6
   i32.const 3504
   i32.const 36
   i32.const 7
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  call $~lib/rt/pure/__release
  local.get $4
  call $~lib/rt/pure/__release
  local.get $5
  call $~lib/rt/pure/__release
  local.get $6
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
 )
 (func $assembly/main/__near_ArgsParser_simple#setString (; 155 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $2
  call $~lib/rt/pure/__retain
  drop
  local.get $1
  i32.const 3392
  call $~lib/string/String.__eq
  if
   local.get $0
   local.tee $3
   local.get $2
   local.tee $4
   local.get $3
   i32.load offset=12
   local.tee $3
   i32.ne
   if
    local.get $4
    call $~lib/rt/pure/__retain
    drop
    local.get $3
    call $~lib/rt/pure/__release
   end
   local.get $4
   i32.store offset=12
   local.get $1
   call $~lib/rt/pure/__release
   local.get $2
   call $~lib/rt/pure/__release
   return
  end
  local.get $0
  local.get $1
  local.get $2
  call $~lib/assemblyscript-json/decoder/ThrowingJSONHandler#setString
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
 )
 (func $~lib/assemblyscript-json/decoder/ThrowingJSONHandler#setBoolean (; 156 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  i32.const 0
  i32.eqz
  if
   i32.const 3592
   local.get $1
   call $~lib/string/String.__concat
   local.tee $3
   i32.const 3656
   call $~lib/string/String.__concat
   local.tee $4
   local.get $2
   if (result i32)
    i32.const 528
    call $~lib/rt/pure/__retain
    local.tee $5
   else    
    i32.const 552
    call $~lib/rt/pure/__retain
    local.tee $6
   end
   call $~lib/string/String.__concat
   local.tee $7
   i32.const 3504
   i32.const 40
   i32.const 7
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  call $~lib/rt/pure/__release
  local.get $4
  call $~lib/rt/pure/__release
  local.get $7
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
 )
 (func $~lib/assemblyscript-json/decoder/ThrowingJSONHandler#setNull (; 157 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  i32.const 0
  i32.eqz
  if
   i32.const 3680
   local.get $1
   call $~lib/string/String.__concat
   local.tee $2
   i32.const 3504
   i32.const 44
   i32.const 7
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
 )
 (func $assembly/main/__near_ArgsParser_simple#setNull (; 158 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $1
  i32.const 3392
  call $~lib/string/String.__eq
  if
   local.get $0
   local.tee $2
   i32.const 0
   local.tee $3
   local.get $2
   i32.load offset=12
   local.tee $2
   i32.ne
   if
    local.get $3
    call $~lib/rt/pure/__retain
    drop
    local.get $2
    call $~lib/rt/pure/__release
   end
   local.get $3
   i32.store offset=12
   local.get $1
   call $~lib/rt/pure/__release
   return
  end
  local.get $0
  local.get $1
  call $~lib/assemblyscript-json/decoder/ThrowingJSONHandler#setNull
  local.get $1
  call $~lib/rt/pure/__release
 )
 (func $~lib/util/number/decimalCount64 (; 159 ;) (type $FUNCSIG$ij) (param $0 i64) (result i32)
  (local $1 i32)
  local.get $0
  i64.const 1000000000000000
  i64.lt_u
  if
   local.get $0
   i64.const 1000000000000
   i64.lt_u
   if
    i32.const 11
    i32.const 12
    local.get $0
    i64.const 100000000000
    i64.lt_u
    select
    local.set $1
    i32.const 10
    local.get $1
    local.get $0
    i64.const 10000000000
    i64.lt_u
    select
    return
   else    
    i32.const 14
    i32.const 15
    local.get $0
    i64.const 100000000000000
    i64.lt_u
    select
    local.set $1
    i32.const 13
    local.get $1
    local.get $0
    i64.const 10000000000000
    i64.lt_u
    select
    return
   end
   unreachable
  else   
   local.get $0
   i64.const 100000000000000000
   i64.lt_u
   if
    i32.const 16
    i32.const 17
    local.get $0
    i64.const 10000000000000000
    i64.lt_u
    select
    return
   else    
    i32.const 19
    i32.const 20
    local.get $0
    i64.const -8446744073709551616
    i64.lt_u
    select
    local.set $1
    i32.const 18
    local.get $1
    local.get $0
    i64.const 1000000000000000000
    i64.lt_u
    select
    return
   end
   unreachable
  end
  unreachable
 )
 (func $~lib/util/number/utoa64_lut (; 160 ;) (type $FUNCSIG$viji) (param $0 i32) (param $1 i64) (param $2 i32)
  (local $3 i32)
  (local $4 i64)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i64)
  (local $13 i64)
  i32.const 2016
  i32.load offset=4
  local.set $3
  block $break|0
   loop $continue|0
    local.get $1
    i64.const 100000000
    i64.ge_u
    i32.eqz
    br_if $break|0
    local.get $1
    i64.const 100000000
    i64.div_u
    local.set $4
    local.get $1
    local.get $4
    i64.const 100000000
    i64.mul
    i64.sub
    i32.wrap_i64
    local.set $5
    local.get $4
    local.set $1
    local.get $5
    i32.const 10000
    i32.div_u
    local.set $6
    local.get $5
    i32.const 10000
    i32.rem_u
    local.set $7
    local.get $6
    i32.const 100
    i32.div_u
    local.set $8
    local.get $6
    i32.const 100
    i32.rem_u
    local.set $9
    local.get $7
    i32.const 100
    i32.div_u
    local.set $10
    local.get $7
    i32.const 100
    i32.rem_u
    local.set $11
    local.get $3
    local.get $10
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u
    local.set $12
    local.get $3
    local.get $11
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u
    local.set $13
    local.get $2
    i32.const 4
    i32.sub
    local.set $2
    local.get $0
    local.get $2
    i32.const 1
    i32.shl
    i32.add
    local.get $12
    local.get $13
    i64.const 32
    i64.shl
    i64.or
    i64.store
    local.get $3
    local.get $8
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u
    local.set $12
    local.get $3
    local.get $9
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u
    local.set $13
    local.get $2
    i32.const 4
    i32.sub
    local.set $2
    local.get $0
    local.get $2
    i32.const 1
    i32.shl
    i32.add
    local.get $12
    local.get $13
    i64.const 32
    i64.shl
    i64.or
    i64.store
    br $continue|0
   end
   unreachable
  end
  local.get $0
  local.get $1
  i32.wrap_i64
  local.get $2
  call $~lib/util/number/utoa32_lut
 )
 (func $~lib/util/number/itoa64 (; 161 ;) (type $FUNCSIG$ij) (param $0 i64) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i64)
  local.get $0
  i64.eqz
  if
   i32.const 608
   call $~lib/rt/pure/__retain
   return
  end
  local.get $0
  i64.const 0
  i64.lt_s
  local.set $1
  local.get $1
  if
   i64.const 0
   local.get $0
   i64.sub
   local.set $0
  end
  local.get $0
  i64.const 4294967295
  i64.le_u
  if
   local.get $0
   i32.wrap_i64
   local.set $3
   local.get $3
   call $~lib/util/number/decimalCount32
   local.get $1
   i32.add
   local.set $4
   local.get $4
   i32.const 1
   i32.shl
   i32.const 1
   call $~lib/rt/tlsf/__alloc
   local.set $2
   local.get $2
   local.set $7
   local.get $3
   local.set $6
   local.get $4
   local.set $5
   local.get $7
   local.get $6
   local.get $5
   call $~lib/util/number/utoa32_lut
  else   
   local.get $0
   call $~lib/util/number/decimalCount64
   local.get $1
   i32.add
   local.set $4
   local.get $4
   i32.const 1
   i32.shl
   i32.const 1
   call $~lib/rt/tlsf/__alloc
   local.set $2
   local.get $2
   local.set $6
   local.get $0
   local.set $8
   local.get $4
   local.set $5
   local.get $6
   local.get $8
   local.get $5
   call $~lib/util/number/utoa64_lut
  end
  local.get $1
  if
   local.get $2
   i32.const 45
   i32.store16
  end
  local.get $2
  call $~lib/rt/pure/__retain
 )
 (func $~lib/util/number/itoa<i64> (; 162 ;) (type $FUNCSIG$ij) (param $0 i64) (result i32)
  local.get $0
  call $~lib/util/number/itoa64
  return
 )
 (func $~lib/number/I64#toString (; 163 ;) (type $FUNCSIG$ij) (param $0 i64) (result i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  call $~lib/util/number/itoa<i64>
  local.tee $1
  call $~lib/rt/pure/__retain
  local.set $2
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
 )
 (func $~lib/assemblyscript-json/decoder/ThrowingJSONHandler#setInteger (; 164 ;) (type $FUNCSIG$viij) (param $0 i32) (param $1 i32) (param $2 i64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  i32.const 0
  i32.eqz
  if
   i32.const 3744
   local.get $1
   call $~lib/string/String.__concat
   local.tee $3
   i32.const 3656
   call $~lib/string/String.__concat
   local.tee $4
   local.get $2
   call $~lib/number/I64#toString
   local.tee $5
   call $~lib/string/String.__concat
   local.tee $6
   i32.const 3504
   i32.const 49
   i32.const 7
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  call $~lib/rt/pure/__release
  local.get $4
  call $~lib/rt/pure/__release
  local.get $5
  call $~lib/rt/pure/__release
  local.get $6
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
 )
 (func $~lib/assemblyscript-json/decoder/ThrowingJSONHandler#pushArray (; 165 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  i32.const 0
  i32.eqz
  if
   i32.const 3816
   local.get $1
   call $~lib/string/String.__concat
   local.tee $2
   i32.const 3504
   i32.const 53
   i32.const 8
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 1
  local.set $3
  local.get $2
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $3
 )
 (func $assembly/main/__near_ArgsParser_simple#pushArray (; 166 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  local.get $1
  call $~lib/assemblyscript-json/decoder/ThrowingJSONHandler#pushArray
  local.set $2
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
 )
 (func $~lib/assemblyscript-json/decoder/JSONHandler#popArray (; 167 ;) (type $FUNCSIG$vi) (param $0 i32)
  nop
 )
 (func $~lib/assemblyscript-json/decoder/ThrowingJSONHandler#pushObject (; 168 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  i32.const 0
  i32.eqz
  if
   i32.const 3880
   local.get $1
   call $~lib/string/String.__concat
   local.tee $2
   i32.const 3504
   i32.const 58
   i32.const 8
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 1
  local.set $3
  local.get $2
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $3
 )
 (func $assembly/main/__near_ArgsParser_simple#pushObject (; 169 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  i32.load8_u offset=8
  i32.const 0
  i32.ne
  i32.eqz
  if
   local.get $1
   i32.const 0
   call $~lib/string/String.__eq
   if (result i32)
    i32.const 1
   else    
    local.get $1
    call $~lib/string/String#get:length
    i32.const 0
    i32.eq
   end
   i32.eqz
   if
    i32.const 0
    i32.const 2344
    i32.const 63
    i32.const 6
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.const 1
   i32.store8 offset=8
   i32.const 1
   local.set $2
   local.get $1
   call $~lib/rt/pure/__release
   local.get $2
   return
  else   
   local.get $1
   i32.const 0
   call $~lib/string/String.__ne
   if (result i32)
    i32.const 1
   else    
    local.get $1
    call $~lib/string/String#get:length
    i32.const 0
    i32.ne
   end
   i32.eqz
   if
    i32.const 0
    i32.const 2344
    i32.const 67
    i32.const 6
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $0
  local.get $1
  call $~lib/assemblyscript-json/decoder/ThrowingJSONHandler#pushObject
  local.set $2
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
 )
 (func $~lib/assemblyscript-json/decoder/JSONHandler#popObject (; 170 ;) (type $FUNCSIG$vi) (param $0 i32)
  nop
 )
 (func $assembly/main/__near_ArgsParser_simple#constructor (; 171 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  i32.eqz
  if
   i32.const 16
   i32.const 26
   call $~lib/rt/tlsf/__alloc
   call $~lib/rt/pure/__retain
   local.set $0
  end
  local.get $0
  call $~lib/assemblyscript-json/decoder/ThrowingJSONHandler#constructor
  local.set $0
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store8 offset=8
  local.get $0
  i32.const 0
  i32.store offset=12
  local.get $0
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#constructor (; 172 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  i32.eqz
  if
   i32.const 8
   i32.const 27
   call $~lib/rt/tlsf/__alloc
   call $~lib/rt/pure/__retain
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  local.tee $2
  local.get $1
  local.tee $3
  local.get $2
  i32.load
  local.tee $2
  i32.ne
  if
   local.get $3
   call $~lib/rt/pure/__retain
   drop
   local.get $2
   call $~lib/rt/pure/__release
  end
  local.get $3
  i32.store
  local.get $1
  call $~lib/rt/pure/__release
  local.get $0
 )
 (func $~lib/assemblyscript-json/decoder/DecoderState#constructor (; 173 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  i32.eqz
  if
   i32.const 12
   i32.const 15
   call $~lib/rt/tlsf/__alloc
   call $~lib/rt/pure/__retain
   local.set $0
  end
  local.get $0
  i32.const 1024
  call $~lib/rt/pure/__retain
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  local.get $1
  call $~lib/rt/pure/__retain
  i32.store offset=8
  local.get $1
  call $~lib/rt/pure/__release
  local.get $0
 )
 (func $~lib/typedarray/Uint8Array#get:length (; 174 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  call $~lib/arraybuffer/ArrayBufferView#get:byteLength
 )
 (func $~lib/typedarray/Uint8Array#__get (; 175 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  local.get $0
  i32.load offset=8
  i32.ge_u
  if
   i32.const 704
   i32.const 3944
   i32.const 135
   i32.const 44
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.add
  i32.load8_u
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#peekChar (; 176 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  i32.load offset=4
  i32.load offset=4
  local.get $0
  i32.load offset=4
  i32.load offset=8
  call $~lib/typedarray/Uint8Array#get:length
  i32.ge_s
  if
   i32.const -1
   return
  end
  local.get $0
  i32.load offset=4
  i32.load offset=8
  local.get $0
  i32.load offset=4
  i32.load offset=4
  call $~lib/typedarray/Uint8Array#__get
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#isWhitespace (; 177 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  i32.const 9
  i32.eq
  if (result i32)
   i32.const 1
  else   
   local.get $1
   i32.const 10
   i32.eq
  end
  if (result i32)
   i32.const 1
  else   
   local.get $1
   i32.const 13
   i32.eq
  end
  if (result i32)
   i32.const 1
  else   
   local.get $1
   i32.const 32
   i32.eq
  end
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#readChar (; 178 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  i32.load offset=4
  i32.load offset=4
  local.get $0
  i32.load offset=4
  i32.load offset=8
  call $~lib/typedarray/Uint8Array#get:length
  i32.lt_s
  i32.eqz
  if
   i32.const 4000
   i32.const 3504
   i32.const 112
   i32.const 8
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  i32.load offset=8
  local.get $0
  i32.load offset=4
  local.get $0
  i32.load offset=4
  i32.load offset=4
  local.tee $1
  i32.const 1
  i32.add
  i32.store offset=4
  local.get $1
  call $~lib/typedarray/Uint8Array#__get
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#skipWhitespace (; 179 ;) (type $FUNCSIG$vi) (param $0 i32)
  block $break|0
   loop $continue|0
    local.get $0
    local.get $0
    call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#peekChar
    call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#isWhitespace
    i32.eqz
    br_if $break|0
    local.get $0
    call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#readChar
    drop
    br $continue|0
   end
   unreachable
  end
 )
 (func $~lib/assemblyscript-json/util/index/Buffer.readString (; 180 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  call $~lib/assemblyscript-json/util/index/Buffer.getPtr
  local.get $1
  i32.add
  local.get $2
  local.get $1
  i32.sub
  i32.const 0
  call $~lib/string/String.UTF8.decodeUnsafe
  local.set $3
  local.get $0
  call $~lib/rt/pure/__release
  local.get $3
 )
 (func $~lib/assemblyscript-json/decoder/DecoderState#readString (; 181 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.load offset=8
  local.get $1
  local.get $2
  i32.const 1
  i32.sub
  call $~lib/assemblyscript-json/util/index/Buffer.readString
 )
 (func $~lib/assemblyscript-json/decoder/DecoderState#readString|trampoline (; 182 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~lib/argc
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   local.get $0
   i32.load offset=4
   local.set $2
  end
  local.get $0
  local.get $1
  local.get $2
  call $~lib/assemblyscript-json/decoder/DecoderState#readString
 )
 (func $~lib/rt/__allocArray (; 183 ;) (type $FUNCSIG$iiiii) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  i32.const 16
  local.get $2
  call $~lib/rt/tlsf/__alloc
  local.set $4
  local.get $0
  local.get $1
  i32.shl
  local.set $5
  local.get $5
  i32.const 0
  call $~lib/rt/tlsf/__alloc
  local.set $6
  local.get $4
  local.get $6
  call $~lib/rt/pure/__retain
  i32.store
  local.get $4
  local.get $6
  i32.store offset=4
  local.get $4
  local.get $5
  i32.store offset=8
  local.get $4
  local.get $0
  i32.store offset=12
  local.get $3
  if
   local.get $6
   local.get $3
   local.get $5
   call $~lib/memory/memory.copy
  end
  local.get $4
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#readHexDigit (; 184 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#readChar
  local.set $1
  local.get $1
  global.get $~lib/assemblyscript-json/decoder/CHAR_0
  i32.sub
  local.set $2
  local.get $2
  i32.const 9
  i32.gt_s
  if
   local.get $1
   global.get $~lib/assemblyscript-json/decoder/CHAR_A
   i32.sub
   i32.const 10
   i32.add
   local.set $2
   local.get $2
   i32.const 10
   i32.lt_s
   if (result i32)
    i32.const 1
   else    
    local.get $2
    i32.const 15
    i32.gt_s
   end
   if
    local.get $1
    global.get $~lib/assemblyscript-json/decoder/CHAR_A_LOWER
    i32.sub
    i32.const 10
    i32.add
    local.set $2
   end
  end
  i32.const 2
  i32.const 2
  i32.const 8
  i32.const 0
  call $~lib/rt/__allocArray
  local.set $3
  local.get $3
  i32.load offset=4
  local.set $4
  local.get $4
  local.get $1
  i32.store
  local.get $4
  local.get $2
  i32.store offset=4
  local.get $3
  call $~lib/rt/pure/__retain
  local.set $4
  local.get $2
  i32.const 0
  i32.ge_s
  if (result i32)
   local.get $2
   i32.const 16
   i32.lt_s
  else   
   i32.const 0
  end
  i32.eqz
  if
   i32.const 4440
   i32.const 3504
   i32.const 269
   i32.const 4
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  local.set $3
  local.get $4
  call $~lib/rt/pure/__release
  local.get $3
 )
 (func $~lib/string/String.fromCodePoint (; 185 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  i32.const 1114111
  i32.le_u
  i32.eqz
  if
   i32.const 0
   i32.const 944
   i32.const 22
   i32.const 4
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 65535
  i32.gt_s
  local.set $1
  i32.const 2
  local.get $1
  i32.shl
  i32.const 1
  call $~lib/rt/tlsf/__alloc
  local.set $2
  local.get $1
  i32.eqz
  if
   local.get $2
   local.get $0
   i32.store16
  else   
   local.get $0
   i32.const 65536
   i32.sub
   local.set $0
   local.get $0
   i32.const 10
   i32.shr_u
   i32.const 55296
   i32.add
   local.set $3
   local.get $0
   i32.const 1023
   i32.and
   i32.const 56320
   i32.add
   local.set $4
   local.get $2
   local.get $3
   i32.const 16
   i32.shl
   local.get $4
   i32.or
   i32.store
  end
  local.get $2
  call $~lib/rt/pure/__retain
 )
 (func $~lib/string/String.fromCharCode (; 186 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  i32.const 0
  i32.gt_s
  local.set $2
  i32.const 2
  local.get $2
  i32.shl
  i32.const 1
  call $~lib/rt/tlsf/__alloc
  local.set $3
  local.get $3
  local.get $0
  i32.store16
  local.get $2
  if
   local.get $3
   local.get $1
   i32.store16 offset=2
  end
  local.get $3
  call $~lib/rt/pure/__retain
 )
 (func $~lib/string/String.fromCharCode|trampoline (; 187 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~lib/argc
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   i32.const -1
   local.set $1
  end
  local.get $0
  local.get $1
  call $~lib/string/String.fromCharCode
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#readEscapedChar (; 188 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#readChar
  local.set $1
  local.get $1
  i32.const 1224
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 1224
   call $~lib/rt/pure/__retain
   return
  end
  local.get $1
  i32.const 1248
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 1248
   call $~lib/rt/pure/__retain
   return
  end
  local.get $1
  i32.const 4296
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 4296
   call $~lib/rt/pure/__retain
   return
  end
  local.get $1
  i32.const 4320
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 1320
   call $~lib/rt/pure/__retain
   return
  end
  local.get $1
  i32.const 4344
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 1368
   call $~lib/rt/pure/__retain
   return
  end
  local.get $1
  i32.const 4368
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 1416
   call $~lib/rt/pure/__retain
   return
  end
  local.get $1
  i32.const 4392
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 1464
   call $~lib/rt/pure/__retain
   return
  end
  local.get $1
  i32.const 4416
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#readHexDigit
   local.set $2
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#readHexDigit
   local.set $3
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#readHexDigit
   local.set $4
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#readHexDigit
   local.set $5
   local.get $2
   i32.const 4096
   i32.mul
   local.get $3
   i32.const 256
   i32.mul
   i32.add
   local.get $4
   i32.const 16
   i32.mul
   i32.add
   local.get $5
   i32.add
   local.set $6
   local.get $6
   call $~lib/string/String.fromCodePoint
   return
  end
  i32.const 0
  i32.eqz
  if
   i32.const 4496
   i32.const 1
   global.set $~lib/argc
   local.get $1
   i32.const 0
   call $~lib/string/String.fromCharCode|trampoline
   local.tee $6
   call $~lib/string/String.__concat
   local.tee $5
   i32.const 3504
   i32.const 255
   i32.const 4
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 1024
  call $~lib/rt/pure/__retain
  local.set $4
  local.get $6
  call $~lib/rt/pure/__release
  local.get $5
  call $~lib/rt/pure/__release
  local.get $4
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#readString (; 189 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#readChar
  i32.const 1224
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  i32.eqz
  if
   i32.const 4144
   i32.const 3504
   i32.const 197
   i32.const 4
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  i32.load offset=4
  local.set $1
  i32.const 0
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#constructor
  local.set $2
  loop $loop|0
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#readChar
   local.set $3
   local.get $3
   i32.const 32
   i32.ge_s
   i32.eqz
   if
    i32.const 4224
    i32.const 3504
    i32.const 203
    i32.const 6
    call $~lib/builtins/abort
    unreachable
   end
   local.get $3
   i32.const 1224
   i32.const 0
   call $~lib/string/String#charCodeAt
   i32.eq
   if
    i32.const 1
    global.set $~lib/argc
    local.get $0
    i32.load offset=4
    local.get $1
    i32.const 0
    call $~lib/assemblyscript-json/decoder/DecoderState#readString|trampoline
    local.set $4
    local.get $2
    call $~lib/array/Array<~lib/string/String>#get:length
    i32.const 0
    i32.eq
    if
     local.get $4
     local.set $5
     local.get $2
     call $~lib/rt/pure/__release
     local.get $5
     return
    end
    local.get $2
    local.get $4
    call $~lib/array/Array<~lib/string/String>#push
    drop
    local.get $2
    i32.const 1024
    call $~lib/array/Array<~lib/string/String>#join
    local.set $5
    local.get $4
    call $~lib/rt/pure/__release
    local.get $2
    call $~lib/rt/pure/__release
    local.get $5
    return
   else    
    local.get $3
    i32.const 1248
    i32.const 0
    call $~lib/string/String#charCodeAt
    i32.eq
    if
     local.get $0
     i32.load offset=4
     i32.load offset=4
     local.get $1
     i32.const 1
     i32.add
     i32.gt_s
     if
      local.get $2
      i32.const 1
      global.set $~lib/argc
      local.get $0
      i32.load offset=4
      local.get $1
      i32.const 0
      call $~lib/assemblyscript-json/decoder/DecoderState#readString|trampoline
      local.tee $4
      call $~lib/array/Array<~lib/string/String>#push
      drop
      local.get $4
      call $~lib/rt/pure/__release
     end
     local.get $2
     local.get $0
     call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#readEscapedChar
     local.tee $4
     call $~lib/array/Array<~lib/string/String>#push
     drop
     local.get $0
     i32.load offset=4
     i32.load offset=4
     local.set $1
     local.get $4
     call $~lib/rt/pure/__release
    end
   end
   br $loop|0
  end
  unreachable
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#parseKey (; 190 ;) (type $FUNCSIG$vi) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#skipWhitespace
  local.get $0
  i32.load offset=4
  local.tee $1
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#readString
  local.set $2
  local.get $1
  i32.load
  call $~lib/rt/pure/__release
  local.get $2
  i32.store
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#skipWhitespace
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#readChar
  i32.const 2136
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  i32.eqz
  if
   i32.const 4576
   i32.const 3504
   i32.const 159
   i32.const 4
   call $~lib/builtins/abort
   unreachable
  end
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#parseObject (; 191 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#peekChar
  i32.const 4056
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.ne
  if
   i32.const 0
   return
  end
  local.get $0
  i32.load offset=4
  i32.load
  call $~lib/rt/pure/__retain
  local.set $1
  local.get $0
  i32.load offset=4
  local.tee $2
  i32.const 1024
  local.tee $3
  local.get $2
  i32.load
  local.tee $2
  i32.ne
  if
   local.get $3
   call $~lib/rt/pure/__retain
   drop
   local.get $2
   call $~lib/rt/pure/__release
  end
  local.get $3
  i32.store
  local.get $0
  i32.load
  local.get $1
  call $assembly/main/__near_ArgsParser_simple#pushObject
  if
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#readChar
   drop
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#skipWhitespace
   i32.const 1
   local.set $3
   block $break|0
    loop $continue|0
     local.get $0
     call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#peekChar
     i32.const 4080
     i32.const 0
     call $~lib/string/String#charCodeAt
     i32.ne
     i32.eqz
     br_if $break|0
     local.get $3
     i32.eqz
     if
      local.get $0
      call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#readChar
      i32.const 1200
      i32.const 0
      call $~lib/string/String#charCodeAt
      i32.eq
      i32.eqz
      if
       i32.const 4104
       i32.const 3504
       i32.const 142
       i32.const 10
       call $~lib/builtins/abort
       unreachable
      end
     else      
      i32.const 0
      local.set $3
     end
     local.get $0
     call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#parseKey
     local.get $0
     call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#parseValue
     drop
     br $continue|0
    end
    unreachable
   end
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#readChar
   i32.const 4080
   i32.const 0
   call $~lib/string/String#charCodeAt
   i32.eq
   i32.eqz
   if
    i32.const 4616
    i32.const 3504
    i32.const 149
    i32.const 6
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $0
  i32.load
  call $~lib/assemblyscript-json/decoder/JSONHandler#popObject
  i32.const 1
  local.set $3
  local.get $1
  call $~lib/rt/pure/__release
  local.get $3
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#parseArray (; 192 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#peekChar
  i32.const 3296
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.ne
  if
   i32.const 0
   return
  end
  local.get $0
  i32.load offset=4
  i32.load
  call $~lib/rt/pure/__retain
  local.set $1
  local.get $0
  i32.load offset=4
  local.tee $2
  i32.const 1024
  local.tee $3
  local.get $2
  i32.load
  local.tee $2
  i32.ne
  if
   local.get $3
   call $~lib/rt/pure/__retain
   drop
   local.get $2
   call $~lib/rt/pure/__release
  end
  local.get $3
  i32.store
  local.get $0
  i32.load
  local.get $1
  call $assembly/main/__near_ArgsParser_simple#pushArray
  if
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#readChar
   drop
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#skipWhitespace
   i32.const 1
   local.set $3
   block $break|0
    loop $continue|0
     local.get $0
     call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#peekChar
     i32.const 3320
     i32.const 0
     call $~lib/string/String#charCodeAt
     i32.ne
     i32.eqz
     br_if $break|0
     local.get $3
     i32.eqz
     if
      local.get $0
      call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#readChar
      i32.const 1200
      i32.const 0
      call $~lib/string/String#charCodeAt
      i32.eq
      i32.eqz
      if
       i32.const 4104
       i32.const 3504
       i32.const 176
       i32.const 10
       call $~lib/builtins/abort
       unreachable
      end
     else      
      i32.const 0
      local.set $3
     end
     local.get $0
     call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#parseValue
     drop
     br $continue|0
    end
    unreachable
   end
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#readChar
   i32.const 3320
   i32.const 0
   call $~lib/string/String#charCodeAt
   i32.eq
   i32.eqz
   if
    i32.const 4680
    i32.const 3504
    i32.const 182
    i32.const 6
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $0
  i32.load
  call $~lib/assemblyscript-json/decoder/JSONHandler#popArray
  i32.const 1
  local.set $3
  local.get $1
  call $~lib/rt/pure/__release
  local.get $3
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#parseString (; 193 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#peekChar
  i32.const 1224
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.ne
  if
   i32.const 0
   return
  end
  local.get $0
  i32.load
  local.get $0
  i32.load offset=4
  i32.load
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#readString
  local.tee $1
  call $assembly/main/__near_ArgsParser_simple#setString
  i32.const 1
  local.set $2
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#readAndAssert (; 194 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  block $break|0
   i32.const 0
   local.set $2
   loop $loop|0
    local.get $2
    local.get $1
    call $~lib/string/String#get:length
    i32.lt_s
    i32.eqz
    br_if $break|0
    local.get $1
    local.get $2
    call $~lib/string/String#charCodeAt
    local.get $0
    call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#readChar
    i32.eq
    i32.eqz
    if
     i32.const 4744
     local.get $1
     call $~lib/string/String.__concat
     local.tee $3
     i32.const 4784
     call $~lib/string/String.__concat
     local.tee $4
     i32.const 3504
     i32.const 321
     i32.const 6
     call $~lib/builtins/abort
     unreachable
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    local.get $3
    call $~lib/rt/pure/__release
    local.get $4
    call $~lib/rt/pure/__release
    br $loop|0
   end
   unreachable
  end
  local.get $1
  call $~lib/rt/pure/__release
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#parseBoolean (; 195 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#peekChar
  i32.const 552
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   local.get $0
   global.get $~lib/assemblyscript-json/decoder/FALSE_STR
   call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#readAndAssert
   local.get $0
   i32.load
   local.get $0
   i32.load offset=4
   i32.load
   i32.const 0
   call $~lib/assemblyscript-json/decoder/ThrowingJSONHandler#setBoolean
   i32.const 1
   return
  end
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#peekChar
  i32.const 528
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   local.get $0
   global.get $~lib/assemblyscript-json/decoder/TRUE_STR
   call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#readAndAssert
   local.get $0
   i32.load
   local.get $0
   i32.load offset=4
   i32.load
   i32.const 1
   call $~lib/assemblyscript-json/decoder/ThrowingJSONHandler#setBoolean
   i32.const 1
   return
  end
  i32.const 0
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#parseNumber (; 196 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i64)
  (local $2 i64)
  (local $3 i32)
  (local $4 i32)
  i64.const 0
  local.set $1
  i64.const 1
  local.set $2
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#peekChar
  i32.const 4808
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i64.const -1
   local.set $2
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#readChar
   drop
  end
  i32.const 0
  local.set $3
  block $break|0
   loop $continue|0
    global.get $~lib/assemblyscript-json/decoder/CHAR_0
    local.get $0
    call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#peekChar
    i32.le_s
    if (result i32)
     local.get $0
     call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#peekChar
     global.get $~lib/assemblyscript-json/decoder/CHAR_9
     i32.le_s
    else     
     i32.const 0
    end
    i32.eqz
    br_if $break|0
    local.get $0
    call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#readChar
    local.set $4
    local.get $1
    i64.const 10
    i64.mul
    local.set $1
    local.get $1
    local.get $4
    global.get $~lib/assemblyscript-json/decoder/CHAR_0
    i32.sub
    i64.extend_i32_s
    i64.add
    local.set $1
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $continue|0
   end
   unreachable
  end
  local.get $3
  i32.const 0
  i32.gt_s
  if
   local.get $0
   i32.load
   local.get $0
   i32.load offset=4
   i32.load
   local.get $1
   local.get $2
   i64.mul
   call $~lib/assemblyscript-json/decoder/ThrowingJSONHandler#setInteger
   i32.const 1
   return
  end
  i32.const 0
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#parseNull (; 197 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#peekChar
  i32.const 584
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   local.get $0
   global.get $~lib/assemblyscript-json/decoder/NULL_STR
   call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#readAndAssert
   local.get $0
   i32.load
   local.get $0
   i32.load offset=4
   i32.load
   call $assembly/main/__near_ArgsParser_simple#setNull
   i32.const 1
   return
  end
  i32.const 0
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#parseValue (; 198 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#skipWhitespace
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#parseObject
  local.tee $1
  if (result i32)
   local.get $1
  else   
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#parseArray
  end
  local.tee $1
  if (result i32)
   local.get $1
  else   
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#parseString
  end
  local.tee $1
  if (result i32)
   local.get $1
  else   
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#parseBoolean
  end
  local.tee $1
  if (result i32)
   local.get $1
  else   
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#parseNumber
  end
  local.tee $1
  if (result i32)
   local.get $1
  else   
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#parseNull
  end
  local.set $1
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#skipWhitespace
  local.get $1
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#deserialize (; 199 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $2
  call $~lib/rt/pure/__retain
  drop
  local.get $2
  i32.const 0
  i32.ne
  if
   local.get $0
   local.tee $3
   local.get $2
   local.tee $4
   local.get $3
   i32.load offset=4
   local.tee $3
   i32.ne
   if
    local.get $4
    call $~lib/rt/pure/__retain
    drop
    local.get $3
    call $~lib/rt/pure/__release
   end
   local.get $4
   i32.store offset=4
  else   
   local.get $0
   local.tee $4
   i32.const 0
   local.get $1
   call $~lib/assemblyscript-json/decoder/DecoderState#constructor
   local.set $3
   local.get $4
   i32.load offset=4
   call $~lib/rt/pure/__release
   local.get $3
   i32.store offset=4
  end
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#parseValue
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 4832
   i32.const 3504
   i32.const 100
   i32.const 4
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
 )
 (func $assembly/main/__wrapper_simple (; 200 ;) (type $FUNCSIG$v)
  (local $0 i64)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  i64.const 0
  call $~lib/nearEntry/input
  i64.const 0
  call $~lib/nearEntry/register_len
  local.set $0
  local.get $0
  i64.const 4294967295
  i64.eq
  if
   call $~lib/nearEntry/panic
  end
  i32.const 0
  local.get $0
  i32.wrap_i64
  call $~lib/typedarray/Uint8Array#constructor
  local.set $1
  i64.const 0
  local.get $1
  call $~lib/typedarray/Uint8Array#get:buffer
  local.tee $2
  i64.extend_i32_u
  call $~lib/nearEntry/read_register
  i32.const 0
  call $assembly/main/__near_ArgsParser_simple#constructor
  local.set $3
  local.get $3
  local.tee $4
  local.get $1
  local.tee $5
  local.get $4
  i32.load
  local.tee $4
  i32.ne
  if
   local.get $5
   call $~lib/rt/pure/__retain
   drop
   local.get $4
   call $~lib/rt/pure/__release
  end
  local.get $5
  i32.store
  local.get $3
  local.tee $5
  i32.const 0
  local.get $3
  call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#constructor
  local.set $4
  local.get $5
  i32.load offset=4
  call $~lib/rt/pure/__release
  local.get $4
  i32.store offset=4
  local.get $3
  i32.load offset=4
  local.get $1
  i32.const 0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/main/__near_ArgsParser_simple>#deserialize
  local.get $3
  i32.load offset=12
  call $assembly/main/simple
  local.set $4
  i32.const 0
  call $~lib/assemblyscript-json/encoder/JSONEncoder#constructor
  local.set $5
  local.get $4
  i32.const 0
  call $~lib/string/String.__eq
  if
   local.get $5
   i32.const 0
   call $~lib/assemblyscript-json/encoder/JSONEncoder#setNull
  else   
   local.get $5
   local.get $4
   i32.const 0
   call $~lib/nearEntry/encode<~lib/string/String>
   call $~lib/rt/pure/__release
  end
  local.get $5
  call $~lib/assemblyscript-json/encoder/JSONEncoder#serialize
  local.set $6
  local.get $6
  call $~lib/arraybuffer/ArrayBufferView#get:byteLength
  i64.extend_i32_s
  local.get $6
  call $~lib/typedarray/Uint8Array#get:buffer
  local.tee $7
  i64.extend_i32_u
  call $~lib/nearEntry/value_return
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  local.get $3
  call $~lib/rt/pure/__release
  local.get $4
  call $~lib/rt/pure/__release
  local.get $5
  call $~lib/rt/pure/__release
  local.get $6
  call $~lib/rt/pure/__release
  local.get $7
  call $~lib/rt/pure/__release
 )
 (func $~lib/typedarray/Uint8Array#__set (; 201 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $1
  local.get $0
  i32.load offset=8
  i32.ge_u
  if
   i32.const 704
   i32.const 3944
   i32.const 146
   i32.const 44
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.add
  local.get $2
  i32.store8
 )
 (func $assembly/util/_testBytes (; 202 ;) (type $FUNCSIG$i) (result i32)
  (local $0 i32)
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Uint8Array#constructor
  local.set $0
  local.get $0
  i32.const 0
  i32.const 0
  call $~lib/typedarray/Uint8Array#__set
  local.get $0
  i32.const 1
  i32.const 1
  call $~lib/typedarray/Uint8Array#__set
  local.get $0
  i32.const 2
  i32.const 90
  call $~lib/typedarray/Uint8Array#__set
  local.get $0
  i32.const 3
  i32.const 100
  call $~lib/typedarray/Uint8Array#__set
  local.get $0
 )
 (func $~lib/string/String#charAt (; 203 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $1
  local.get $0
  call $~lib/string/String#get:length
  i32.ge_u
  if
   i32.const 1024
   call $~lib/rt/pure/__retain
   return
  end
  i32.const 2
  i32.const 1
  call $~lib/rt/tlsf/__alloc
  local.set $2
  local.get $2
  local.get $0
  local.get $1
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u
  i32.store16
  local.get $2
  call $~lib/rt/pure/__retain
 )
 (func $~lib/memory/memory.repeat (; 204 ;) (type $FUNCSIG$viiii) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  i32.const 0
  local.set $4
  local.get $2
  local.get $3
  i32.mul
  local.set $5
  block $break|0
   loop $continue|0
    local.get $4
    local.get $5
    i32.lt_u
    i32.eqz
    br_if $break|0
    local.get $0
    local.get $4
    i32.add
    local.get $1
    local.get $2
    call $~lib/memory/memory.copy
    local.get $4
    local.get $2
    i32.add
    local.set $4
    br $continue|0
   end
   unreachable
  end
 )
 (func $~lib/string/String#repeat (; 205 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  call $~lib/string/String#get:length
  local.set $2
  local.get $1
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else   
   local.get $2
   i64.extend_i32_s
   local.get $1
   i64.extend_i32_s
   i64.mul
   i64.const 268435456
   i64.gt_u
  end
  if
   i32.const 840
   i32.const 944
   i32.const 299
   i32.const 6
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 1
  else   
   local.get $2
   i32.eqz
  end
  if
   i32.const 1024
   call $~lib/rt/pure/__retain
   return
  end
  local.get $1
  i32.const 1
  i32.eq
  if
   local.get $0
   call $~lib/rt/pure/__retain
   return
  end
  local.get $2
  local.get $1
  i32.mul
  i32.const 1
  i32.shl
  i32.const 1
  call $~lib/rt/tlsf/__alloc
  local.set $3
  local.get $3
  local.get $0
  local.get $2
  i32.const 1
  i32.shl
  local.get $1
  call $~lib/memory/memory.repeat
  local.get $3
  call $~lib/rt/pure/__retain
 )
 (func $~lib/near-runtime-ts/base58/base58.encode (; 206 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  drop
  i32.const 4928
  call $~lib/string/String#get:length
  local.set $1
  i32.const 4928
  i32.const 0
  call $~lib/string/String#charAt
  local.set $2
  i32.const 0
  local.set $3
  i32.const 0
  local.set $4
  i32.const 0
  local.set $5
  local.get $0
  call $~lib/typedarray/Uint8Array#get:length
  local.set $6
  block $break|0
   loop $continue|0
    local.get $5
    local.get $6
    i32.ne
    if (result i32)
     local.get $0
     local.get $5
     call $~lib/typedarray/Uint8Array#__get
     i32.const 0
     i32.eq
    else     
     i32.const 0
    end
    i32.eqz
    br_if $break|0
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $continue|0
   end
   unreachable
  end
  local.get $6
  local.get $5
  i32.sub
  i32.const 2
  i32.mul
  i32.const 1
  i32.add
  i32.const 0
  i32.shr_u
  local.set $7
  i32.const 0
  local.get $7
  call $~lib/typedarray/Uint8Array#constructor
  local.set $8
  block $break|1
   loop $continue|1
    local.get $5
    local.get $6
    i32.ne
    i32.eqz
    br_if $break|1
    local.get $0
    local.get $5
    call $~lib/typedarray/Uint8Array#__get
    local.set $9
    i32.const 0
    local.set $10
    block $break|2
     local.get $7
     i32.const 1
     i32.sub
     local.set $11
     loop $loop|2
      local.get $9
      i32.const 0
      i32.ne
      if (result i32)
       i32.const 1
      else       
       local.get $10
       local.get $4
       i32.lt_s
      end
      if (result i32)
       local.get $11
       i32.const -1
       i32.ne
      else       
       i32.const 0
      end
      i32.eqz
      br_if $break|2
      local.get $9
      i32.const 256
      local.get $8
      local.get $11
      call $~lib/typedarray/Uint8Array#__get
      i32.mul
      i32.const 0
      i32.shr_u
      i32.add
      local.set $9
      local.get $8
      local.get $11
      local.get $9
      local.get $1
      i32.rem_s
      i32.const 0
      i32.shr_u
      call $~lib/typedarray/Uint8Array#__set
      local.get $9
      local.get $1
      i32.div_s
      i32.const 0
      i32.shr_u
      local.set $9
      local.get $11
      i32.const 1
      i32.sub
      local.set $11
      local.get $10
      i32.const 1
      i32.add
      local.set $10
      br $loop|2
     end
     unreachable
    end
    local.get $9
    i32.const 0
    i32.eq
    i32.eqz
    if
     i32.const 5064
     i32.const 5112
     i32.const 42
     i32.const 6
     call $~lib/builtins/abort
     unreachable
    end
    local.get $10
    local.set $4
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    br $continue|1
   end
   unreachable
  end
  local.get $7
  local.get $4
  i32.sub
  local.set $10
  block $break|3
   loop $continue|3
    local.get $10
    local.get $7
    i32.ne
    if (result i32)
     local.get $8
     local.get $10
     call $~lib/typedarray/Uint8Array#__get
     i32.const 0
     i32.eq
    else     
     i32.const 0
    end
    i32.eqz
    br_if $break|3
    local.get $10
    i32.const 1
    i32.add
    local.set $10
    br $continue|3
   end
   unreachable
  end
  local.get $2
  local.get $3
  call $~lib/string/String#repeat
  local.set $9
  block $break|4
   loop $loop|4
    local.get $10
    local.get $7
    i32.lt_s
    i32.eqz
    br_if $break|4
    local.get $9
    i32.const 4928
    local.get $8
    local.get $10
    call $~lib/typedarray/Uint8Array#__get
    call $~lib/string/String#charAt
    local.tee $11
    call $~lib/string/String.__concat
    local.tee $12
    local.tee $13
    local.get $9
    local.tee $14
    i32.ne
    if
     local.get $13
     call $~lib/rt/pure/__retain
     drop
     local.get $14
     call $~lib/rt/pure/__release
    end
    local.get $13
    local.set $9
    local.get $10
    i32.const 1
    i32.add
    local.set $10
    local.get $11
    call $~lib/rt/pure/__release
    local.get $12
    call $~lib/rt/pure/__release
    br $loop|4
   end
   unreachable
  end
  local.get $9
  local.set $12
  local.get $2
  call $~lib/rt/pure/__release
  local.get $8
  call $~lib/rt/pure/__release
  local.get $0
  call $~lib/rt/pure/__release
  local.get $12
 )
 (func $assembly/main/base58Test (; 207 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  i32.const 4888
  call $~lib/near-runtime-ts/logging/logging.log
  call $assembly/util/_testBytes
  local.set $0
  local.get $0
  call $~lib/near-runtime-ts/base58/base58.encode
  local.set $1
  i32.const 5192
  local.get $1
  call $~lib/string/String.__concat
  local.tee $2
  call $~lib/near-runtime-ts/logging/logging.log
  local.get $1
  i32.const 5256
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 5280
   i32.const 2344
   i32.const 143
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
 )
 (func $~lib/near-runtime-ts/base64/base64.encode (; 208 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  drop
  i32.const 0
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#constructor
  local.set $3
  local.get $0
  call $~lib/typedarray/Uint8Array#get:length
  local.get $0
  call $~lib/typedarray/Uint8Array#get:length
  i32.const 3
  i32.rem_s
  i32.sub
  local.set $4
  local.get $0
  call $~lib/typedarray/Uint8Array#get:length
  i32.const 0
  i32.eq
  if
   i32.const 1024
   call $~lib/rt/pure/__retain
   local.set $5
   local.get $0
   call $~lib/rt/pure/__release
   local.get $3
   call $~lib/rt/pure/__release
   local.get $5
   return
  end
  block $break|0
   i32.const 0
   local.set $1
   loop $loop|0
    local.get $1
    local.get $4
    i32.lt_s
    i32.eqz
    br_if $break|0
    local.get $0
    local.get $1
    call $~lib/typedarray/Uint8Array#__get
    i32.const 16
    i32.shl
    local.get $0
    local.get $1
    i32.const 1
    i32.add
    call $~lib/typedarray/Uint8Array#__get
    i32.const 8
    i32.shl
    i32.or
    local.get $0
    local.get $1
    i32.const 2
    i32.add
    call $~lib/typedarray/Uint8Array#__get
    i32.or
    local.set $2
    local.get $3
    global.get $~lib/near-runtime-ts/base64/base64.ALPHA
    local.get $2
    i32.const 18
    i32.shr_u
    call $~lib/string/String#charAt
    local.tee $5
    call $~lib/array/Array<~lib/string/String>#push
    drop
    local.get $3
    global.get $~lib/near-runtime-ts/base64/base64.ALPHA
    local.get $2
    i32.const 12
    i32.shr_u
    i32.const 63
    i32.and
    call $~lib/string/String#charAt
    local.tee $6
    call $~lib/array/Array<~lib/string/String>#push
    drop
    local.get $3
    global.get $~lib/near-runtime-ts/base64/base64.ALPHA
    local.get $2
    i32.const 6
    i32.shr_u
    i32.const 63
    i32.and
    call $~lib/string/String#charAt
    local.tee $7
    call $~lib/array/Array<~lib/string/String>#push
    drop
    local.get $3
    global.get $~lib/near-runtime-ts/base64/base64.ALPHA
    local.get $2
    i32.const 63
    i32.and
    call $~lib/string/String#charAt
    local.tee $8
    call $~lib/array/Array<~lib/string/String>#push
    drop
    local.get $1
    i32.const 3
    i32.add
    local.set $1
    local.get $5
    call $~lib/rt/pure/__release
    local.get $6
    call $~lib/rt/pure/__release
    local.get $7
    call $~lib/rt/pure/__release
    local.get $8
    call $~lib/rt/pure/__release
    br $loop|0
   end
   unreachable
  end
  block $break|1
   block $case1|1
    block $case0|1
     local.get $0
     call $~lib/typedarray/Uint8Array#get:length
     local.get $4
     i32.sub
     local.set $8
     local.get $8
     i32.const 1
     i32.eq
     br_if $case0|1
     local.get $8
     i32.const 2
     i32.eq
     br_if $case1|1
     br $break|1
    end
    local.get $0
    local.get $1
    call $~lib/typedarray/Uint8Array#__get
    i32.const 16
    i32.shl
    local.set $2
    local.get $3
    global.get $~lib/near-runtime-ts/base64/base64.ALPHA
    local.get $2
    i32.const 18
    i32.shr_u
    call $~lib/string/String#charAt
    local.tee $8
    call $~lib/array/Array<~lib/string/String>#push
    drop
    local.get $3
    global.get $~lib/near-runtime-ts/base64/base64.ALPHA
    local.get $2
    i32.const 12
    i32.shr_u
    i32.const 63
    i32.and
    call $~lib/string/String#charAt
    local.tee $7
    call $~lib/array/Array<~lib/string/String>#push
    drop
    local.get $3
    global.get $~lib/near-runtime-ts/base64/base64.PADCHAR
    call $~lib/array/Array<~lib/string/String>#push
    drop
    local.get $3
    global.get $~lib/near-runtime-ts/base64/base64.PADCHAR
    call $~lib/array/Array<~lib/string/String>#push
    drop
    local.get $8
    call $~lib/rt/pure/__release
    local.get $7
    call $~lib/rt/pure/__release
    br $break|1
   end
   local.get $0
   local.get $1
   call $~lib/typedarray/Uint8Array#__get
   i32.const 16
   i32.shl
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   call $~lib/typedarray/Uint8Array#__get
   i32.const 8
   i32.shl
   i32.or
   local.set $2
   local.get $3
   global.get $~lib/near-runtime-ts/base64/base64.ALPHA
   local.get $2
   i32.const 18
   i32.shr_u
   call $~lib/string/String#charAt
   local.tee $7
   call $~lib/array/Array<~lib/string/String>#push
   drop
   local.get $3
   global.get $~lib/near-runtime-ts/base64/base64.ALPHA
   local.get $2
   i32.const 12
   i32.shr_u
   i32.const 63
   i32.and
   call $~lib/string/String#charAt
   local.tee $8
   call $~lib/array/Array<~lib/string/String>#push
   drop
   local.get $3
   global.get $~lib/near-runtime-ts/base64/base64.ALPHA
   local.get $2
   i32.const 6
   i32.shr_u
   i32.const 63
   i32.and
   call $~lib/string/String#charAt
   local.tee $6
   call $~lib/array/Array<~lib/string/String>#push
   drop
   local.get $3
   global.get $~lib/near-runtime-ts/base64/base64.PADCHAR
   call $~lib/array/Array<~lib/string/String>#push
   drop
   local.get $7
   call $~lib/rt/pure/__release
   local.get $8
   call $~lib/rt/pure/__release
   local.get $6
   call $~lib/rt/pure/__release
   br $break|1
  end
  local.get $3
  i32.const 1024
  call $~lib/array/Array<~lib/string/String>#join
  local.set $6
  local.get $3
  call $~lib/rt/pure/__release
  local.get $0
  call $~lib/rt/pure/__release
  local.get $6
 )
 (func $~lib/string/String#indexOf (; 209 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $1
  call $~lib/string/String#get:length
  local.set $3
  local.get $3
  i32.eqz
  if
   i32.const 0
   local.set $4
   local.get $1
   call $~lib/rt/pure/__release
   local.get $4
   return
  end
  local.get $0
  call $~lib/string/String#get:length
  local.set $5
  local.get $5
  i32.eqz
  if
   i32.const -1
   local.set $4
   local.get $1
   call $~lib/rt/pure/__release
   local.get $4
   return
  end
  local.get $2
  local.tee $4
  i32.const 0
  local.tee $6
  local.get $4
  local.get $6
  i32.gt_s
  select
  local.tee $4
  local.get $5
  local.tee $6
  local.get $4
  local.get $6
  i32.lt_s
  select
  local.set $7
  block $break|0
   local.get $5
   local.get $3
   i32.sub
   local.set $5
   loop $loop|0
    local.get $7
    local.get $5
    i32.le_s
    i32.eqz
    br_if $break|0
    local.get $0
    local.get $7
    local.get $1
    i32.const 0
    local.get $3
    call $~lib/util/string/compareImpl
    i32.eqz
    if
     local.get $7
     local.set $4
     local.get $1
     call $~lib/rt/pure/__release
     local.get $4
     return
    end
    local.get $7
    i32.const 1
    i32.add
    local.set $7
    br $loop|0
   end
   unreachable
  end
  i32.const -1
  local.set $4
  local.get $1
  call $~lib/rt/pure/__release
  local.get $4
 )
 (func $~lib/near-runtime-ts/base64/base64.getByte64 (; 210 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  drop
  global.get $~lib/near-runtime-ts/base64/base64.ALPHA
  local.get $0
  local.get $1
  call $~lib/string/String#charAt
  local.tee $2
  i32.const 0
  call $~lib/string/String#indexOf
  local.set $3
  local.get $2
  call $~lib/rt/pure/__release
  local.get $0
  call $~lib/rt/pure/__release
  local.get $3
 )
 (func $~lib/near-runtime-ts/base64/base64.decode (; 211 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  drop
  i32.const 0
  local.set $3
  local.get $0
  call $~lib/string/String#get:length
  local.set $4
  local.get $4
  i32.const 0
  i32.eq
  if
   i32.const 0
   i32.const 0
   call $~lib/typedarray/Uint8Array#constructor
   local.set $5
   local.get $0
   call $~lib/rt/pure/__release
   local.get $5
   return
  end
  local.get $0
  local.get $4
  i32.const 1
  i32.sub
  call $~lib/string/String#charAt
  local.tee $5
  i32.const 360
  call $~lib/string/String.__eq
  if
   i32.const 1
   local.set $3
   local.get $0
   local.get $4
   i32.const 2
   i32.sub
   call $~lib/string/String#charAt
   local.tee $6
   i32.const 360
   call $~lib/string/String.__eq
   if
    i32.const 2
    local.set $3
   end
   local.get $4
   i32.const 4
   i32.sub
   local.set $4
   local.get $6
   call $~lib/rt/pure/__release
  end
  local.get $4
  i32.const 4
  i32.rem_u
  i32.const 0
  i32.eq
  if (result i32)
   local.get $4
   i32.const 4
   i32.div_u
   i32.const 3
   i32.mul
  else   
   local.get $4
   i32.const 4
   i32.div_u
   i32.const 1
   i32.add
   i32.const 3
   i32.mul
  end
  local.set $6
  local.get $3
  i32.const 0
  i32.gt_s
  if (result i32)
   i32.const 3
   local.get $3
   i32.sub
  else   
   i32.const 0
  end
  local.set $7
  local.get $6
  local.get $7
  i32.add
  local.set $8
  i32.const 0
  local.get $8
  call $~lib/typedarray/Uint8Array#constructor
  local.set $9
  i32.const 0
  local.set $10
  block $break|0
   i32.const 0
   local.set $1
   loop $loop|0
    local.get $1
    local.get $4
    i32.lt_u
    i32.eqz
    br_if $break|0
    local.get $0
    local.get $1
    call $~lib/near-runtime-ts/base64/base64.getByte64
    i32.const 18
    i32.shl
    local.get $0
    local.get $1
    i32.const 1
    i32.add
    call $~lib/near-runtime-ts/base64/base64.getByte64
    i32.const 12
    i32.shl
    i32.or
    local.get $0
    local.get $1
    i32.const 2
    i32.add
    call $~lib/near-runtime-ts/base64/base64.getByte64
    i32.const 6
    i32.shl
    i32.or
    local.get $0
    local.get $1
    i32.const 3
    i32.add
    call $~lib/near-runtime-ts/base64/base64.getByte64
    i32.or
    local.set $2
    local.get $9
    local.get $10
    local.tee $11
    i32.const 1
    i32.add
    local.set $10
    local.get $11
    local.get $2
    i32.const 16
    i32.shr_u
    call $~lib/typedarray/Uint8Array#__set
    local.get $9
    local.get $10
    local.tee $11
    i32.const 1
    i32.add
    local.set $10
    local.get $11
    local.get $2
    i32.const 8
    i32.shr_u
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8Array#__set
    local.get $9
    local.get $10
    local.tee $11
    i32.const 1
    i32.add
    local.set $10
    local.get $11
    local.get $2
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8Array#__set
    local.get $1
    i32.const 4
    i32.add
    local.set $1
    br $loop|0
   end
   unreachable
  end
  block $break|1
   block $case1|1
    block $case0|1
     local.get $3
     local.set $11
     local.get $11
     i32.const 1
     i32.eq
     br_if $case0|1
     local.get $11
     i32.const 2
     i32.eq
     br_if $case1|1
     br $break|1
    end
    local.get $0
    local.get $1
    call $~lib/near-runtime-ts/base64/base64.getByte64
    i32.const 18
    i32.shl
    local.get $0
    local.get $1
    i32.const 1
    i32.add
    call $~lib/near-runtime-ts/base64/base64.getByte64
    i32.const 12
    i32.shl
    i32.or
    local.get $0
    local.get $1
    i32.const 2
    i32.add
    call $~lib/near-runtime-ts/base64/base64.getByte64
    i32.const 6
    i32.shl
    i32.or
    local.set $2
    local.get $9
    local.get $10
    local.tee $11
    i32.const 1
    i32.add
    local.set $10
    local.get $11
    local.get $2
    i32.const 16
    i32.shr_u
    call $~lib/typedarray/Uint8Array#__set
    local.get $9
    local.get $10
    local.tee $11
    i32.const 1
    i32.add
    local.set $10
    local.get $11
    local.get $2
    i32.const 8
    i32.shr_u
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8Array#__set
    br $break|1
   end
   local.get $0
   local.get $1
   call $~lib/near-runtime-ts/base64/base64.getByte64
   i32.const 18
   i32.shl
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   call $~lib/near-runtime-ts/base64/base64.getByte64
   i32.const 12
   i32.shl
   i32.or
   local.set $2
   local.get $9
   local.get $10
   local.tee $11
   i32.const 1
   i32.add
   local.set $10
   local.get $11
   local.get $2
   i32.const 16
   i32.shr_u
   call $~lib/typedarray/Uint8Array#__set
   br $break|1
  end
  local.get $9
  local.set $11
  local.get $5
  call $~lib/rt/pure/__release
  local.get $0
  call $~lib/rt/pure/__release
  local.get $11
 )
 (func $assembly/main/_arrayEqual (; 212 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  drop
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 1
  else   
   local.get $1
   i32.const 0
   i32.eq
  end
  if
   local.get $0
   local.get $1
   i32.ne
   local.set $2
   local.get $0
   call $~lib/rt/pure/__release
   local.get $1
   call $~lib/rt/pure/__release
   local.get $2
   return
  end
  local.get $0
  call $~lib/typedarray/Uint8Array#get:length
  local.get $1
  call $~lib/typedarray/Uint8Array#get:length
  i32.ne
  if
   i32.const 0
   local.set $2
   local.get $0
   call $~lib/rt/pure/__release
   local.get $1
   call $~lib/rt/pure/__release
   local.get $2
   return
  end
  block $break|0
   i32.const 0
   local.set $2
   loop $loop|0
    local.get $2
    local.get $0
    call $~lib/typedarray/Uint8Array#get:length
    i32.lt_s
    i32.eqz
    br_if $break|0
    local.get $0
    local.get $2
    call $~lib/typedarray/Uint8Array#__get
    local.get $1
    local.get $2
    call $~lib/typedarray/Uint8Array#__get
    i32.ne
    if
     i32.const 0
     local.set $3
     local.get $0
     call $~lib/rt/pure/__release
     local.get $1
     call $~lib/rt/pure/__release
     local.get $3
     return
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $loop|0
   end
   unreachable
  end
  i32.const 1
  local.set $2
  local.get $0
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
 )
 (func $assembly/main/base64Test (; 213 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  i32.const 5376
  call $~lib/near-runtime-ts/logging/logging.log
  call $assembly/util/_testBytes
  local.set $0
  local.get $0
  call $~lib/near-runtime-ts/base64/base64.encode
  local.set $1
  local.get $1
  i32.const 5416
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 2688
   i32.const 2344
   i32.const 149
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 5416
  call $~lib/near-runtime-ts/base64/base64.decode
  local.set $2
  local.get $2
  local.get $0
  call $assembly/main/_arrayEqual
  i32.eqz
  if
   i32.const 5448
   i32.const 2344
   i32.const 151
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
 )
 (func $assembly/main/logTest (; 214 ;) (type $FUNCSIG$v)
  i32.const 5560
  call $~lib/near-runtime-ts/logging/logging.log
 )
 (func $~lib/near-runtime-ts/storage/Storage#_internalReadBytes (; 215 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i64)
  (local $4 i64)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $1
  call $~lib/near-runtime-ts/util/util.stringToBytes
  local.set $2
  local.get $2
  call $~lib/arraybuffer/ArrayBufferView#get:byteLength
  i64.extend_i32_s
  local.get $2
  i32.load offset=4
  i64.extend_i32_u
  i64.const 0
  call $~lib/near-runtime-ts/runtime_api/runtime_api.storage_read
  local.set $3
  local.get $3
  i64.const 1
  i64.eq
  if
   i64.const 0
   call $~lib/near-runtime-ts/runtime_api/runtime_api.register_len
   local.set $4
   i32.const 0
   local.get $4
   i32.wrap_i64
   call $~lib/typedarray/Uint8Array#constructor
   local.set $5
   i64.const 0
   local.get $5
   i32.load offset=4
   i64.extend_i32_u
   call $~lib/near-runtime-ts/runtime_api/runtime_api.read_register
   local.get $5
   local.set $6
   local.get $1
   call $~lib/rt/pure/__release
   local.get $2
   call $~lib/rt/pure/__release
   local.get $6
   return
  else   
   i32.const 0
   call $~lib/rt/pure/__retain
   local.set $5
   local.get $1
   call $~lib/rt/pure/__release
   local.get $2
   call $~lib/rt/pure/__release
   local.get $5
   return
  end
  unreachable
 )
 (func $~lib/near-runtime-ts/storage/Storage#getString (; 216 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/storage/Storage#_internalReadBytes
  local.tee $2
  call $~lib/near-runtime-ts/util/util.bytesToString
  local.set $3
  local.get $2
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $3
 )
 (func $assembly/main/storageStringRoundtripTest (; 217 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  i32.const 5592
  call $~lib/near-runtime-ts/logging/logging.log
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 2208
  i32.const 2464
  call $~lib/near-runtime-ts/storage/Storage#setString
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 5664
  i32.const 5704
  call $~lib/near-runtime-ts/storage/Storage#setString
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 2208
  call $~lib/near-runtime-ts/storage/Storage#getString
  local.set $0
  local.get $0
  i32.const 2464
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 5744
   i32.const 2344
   i32.const 161
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 5664
  call $~lib/near-runtime-ts/storage/Storage#getString
  local.set $1
  local.get $1
  i32.const 5704
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 5816
   i32.const 2344
   i32.const 163
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 5896
  call $~lib/near-runtime-ts/storage/Storage#getString
  local.tee $2
  i32.const 0
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 5944
   i32.const 2344
   i32.const 164
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
 )
 (func $assembly/util/_testBytesTwo (; 218 ;) (type $FUNCSIG$i) (result i32)
  (local $0 i32)
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8Array#constructor
  local.set $0
  local.get $0
  i32.const 0
  i32.const 8
  call $~lib/typedarray/Uint8Array#__set
  local.get $0
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8Array#__set
  local.get $0
  i32.const 2
  i32.const 101
  call $~lib/typedarray/Uint8Array#__set
  local.get $0
 )
 (func $~lib/near-runtime-ts/storage/Storage#setBytes (; 219 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i64)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $2
  call $~lib/rt/pure/__retain
  drop
  local.get $1
  call $~lib/near-runtime-ts/util/util.stringToBytes
  local.set $3
  local.get $3
  call $~lib/arraybuffer/ArrayBufferView#get:byteLength
  i64.extend_i32_s
  local.get $3
  i32.load offset=4
  i64.extend_i32_u
  local.get $2
  call $~lib/arraybuffer/ArrayBufferView#get:byteLength
  i64.extend_i32_s
  local.get $2
  i32.load offset=4
  i64.extend_i32_u
  i64.const 0
  call $~lib/near-runtime-ts/runtime_api/runtime_api.storage_write
  local.set $4
  local.get $3
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
 )
 (func $~lib/near-runtime-ts/storage/Storage#getBytes (; 220 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/storage/Storage#_internalReadBytes
  local.set $2
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
 )
 (func $assembly/main/storageBytesRoundtripTest (; 221 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  i32.const 6072
  call $~lib/near-runtime-ts/logging/logging.log
  call $assembly/util/_testBytes
  local.set $0
  call $assembly/util/_testBytesTwo
  local.set $1
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 2208
  local.get $0
  call $~lib/near-runtime-ts/storage/Storage#setBytes
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 5664
  local.get $1
  call $~lib/near-runtime-ts/storage/Storage#setBytes
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 2208
  call $~lib/near-runtime-ts/storage/Storage#getBytes
  local.set $2
  local.get $2
  local.get $0
  call $assembly/main/_arrayEqual
  i32.eqz
  if
   i32.const 6144
   i32.const 2344
   i32.const 173
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 5664
  call $~lib/near-runtime-ts/storage/Storage#getBytes
  local.set $3
  local.get $3
  local.get $1
  call $assembly/main/_arrayEqual
  i32.eqz
  if
   i32.const 6144
   i32.const 2344
   i32.const 175
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 5896
  call $~lib/near-runtime-ts/storage/Storage#getBytes
  local.tee $4
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 6232
   i32.const 2344
   i32.const 176
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  local.get $3
  call $~lib/rt/pure/__release
  local.get $4
  call $~lib/rt/pure/__release
 )
 (func $assembly/model/TextMessage#constructor (; 222 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  i32.eqz
  if
   i32.const 16
   i32.const 28
   call $~lib/rt/tlsf/__alloc
   call $~lib/rt/pure/__retain
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  i64.const 0
  i64.store offset=8
  local.get $0
 )
 (func $assembly/util/_testTextMessage (; 223 ;) (type $FUNCSIG$i) (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  i32.const 0
  call $assembly/model/TextMessage#constructor
  local.set $0
  local.get $0
  local.tee $1
  i32.const 6448
  local.tee $2
  local.get $1
  i32.load
  local.tee $1
  i32.ne
  if
   local.get $2
   call $~lib/rt/pure/__retain
   drop
   local.get $1
   call $~lib/rt/pure/__release
  end
  local.get $2
  i32.store
  local.get $0
  local.tee $2
  i32.const 6504
  local.tee $1
  local.get $2
  i32.load offset=4
  local.tee $2
  i32.ne
  if
   local.get $1
   call $~lib/rt/pure/__retain
   drop
   local.get $2
   call $~lib/rt/pure/__release
  end
  local.get $1
  i32.store offset=4
  local.get $0
  i64.const 415
  i64.store offset=8
  local.get $0
 )
 (func $~lib/assemblyscript-json/encoder/JSONEncoder#pushObject (; 224 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  local.get $1
  call $~lib/assemblyscript-json/encoder/JSONEncoder#writeKey
  local.get $0
  i32.const 4056
  call $~lib/assemblyscript-json/encoder/JSONEncoder#write
  local.get $0
  i32.load
  i32.const 1
  call $~lib/array/Array<i32>#push
  drop
  i32.const 1
  local.set $2
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
 )
 (func $~lib/util/number/utoa64 (; 225 ;) (type $FUNCSIG$ij) (param $0 i64) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i64)
  local.get $0
  i64.eqz
  if
   i32.const 608
   call $~lib/rt/pure/__retain
   return
  end
  local.get $0
  i64.const 4294967295
  i64.le_u
  if
   local.get $0
   i32.wrap_i64
   local.set $2
   local.get $2
   call $~lib/util/number/decimalCount32
   local.set $3
   local.get $3
   i32.const 1
   i32.shl
   i32.const 1
   call $~lib/rt/tlsf/__alloc
   local.set $1
   local.get $1
   local.set $6
   local.get $2
   local.set $5
   local.get $3
   local.set $4
   local.get $6
   local.get $5
   local.get $4
   call $~lib/util/number/utoa32_lut
  else   
   local.get $0
   call $~lib/util/number/decimalCount64
   local.set $3
   local.get $3
   i32.const 1
   i32.shl
   i32.const 1
   call $~lib/rt/tlsf/__alloc
   local.set $1
   local.get $1
   local.set $5
   local.get $0
   local.set $7
   local.get $3
   local.set $4
   local.get $5
   local.get $7
   local.get $4
   call $~lib/util/number/utoa64_lut
  end
  local.get $1
  call $~lib/rt/pure/__retain
 )
 (func $~lib/util/number/itoa<u64> (; 226 ;) (type $FUNCSIG$ij) (param $0 i64) (result i32)
  local.get $0
  call $~lib/util/number/utoa64
  return
 )
 (func $~lib/number/U64#toString (; 227 ;) (type $FUNCSIG$ij) (param $0 i64) (result i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  call $~lib/util/number/itoa<u64>
  local.tee $1
  call $~lib/rt/pure/__retain
  local.set $2
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
 )
 (func $~lib/nearEntry/encode<u64> (; 228 ;) (type $FUNCSIG$iiji) (param $0 i32) (param $1 i64) (param $2 i32) (result i32)
  (local $3 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  drop
  local.get $2
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  local.get $2
  local.get $1
  call $~lib/number/U64#toString
  local.tee $3
  call $~lib/assemblyscript-json/encoder/JSONEncoder#setString
  local.get $3
  call $~lib/rt/pure/__release
  local.get $0
  local.set $3
  local.get $2
  call $~lib/rt/pure/__release
  local.get $3
 )
 (func $~lib/assemblyscript-json/encoder/JSONEncoder#popObject (; 229 ;) (type $FUNCSIG$vi) (param $0 i32)
  local.get $0
  i32.const 4080
  call $~lib/assemblyscript-json/encoder/JSONEncoder#write
  local.get $0
  i32.load
  call $~lib/array/Array<i32>#pop
  drop
 )
 (func $assembly/model/TextMessage#encode (; 230 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $2
  call $~lib/rt/pure/__retain
  drop
  local.get $1
  i32.const 0
  i32.ne
  if (result i32)
   local.get $1
   call $~lib/rt/pure/__retain
  else   
   i32.const 0
   call $~lib/assemblyscript-json/encoder/JSONEncoder#constructor
  end
  local.tee $3
  if (result i32)
   local.get $3
  else   
   unreachable
  end
  call $~lib/rt/pure/__retain
  local.set $3
  local.get $3
  local.get $2
  call $~lib/assemblyscript-json/encoder/JSONEncoder#pushObject
  drop
  local.get $3
  local.get $0
  i32.load
  i32.const 6576
  call $~lib/nearEntry/encode<~lib/string/String>
  call $~lib/rt/pure/__release
  local.get $3
  local.get $0
  i32.load offset=4
  i32.const 6608
  call $~lib/nearEntry/encode<~lib/string/String>
  call $~lib/rt/pure/__release
  local.get $3
  local.get $0
  i64.load offset=8
  i32.const 6632
  call $~lib/nearEntry/encode<u64>
  call $~lib/rt/pure/__release
  local.get $3
  call $~lib/assemblyscript-json/encoder/JSONEncoder#popObject
  local.get $3
  local.set $4
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  local.get $4
 )
 (func $assembly/model/TextMessage#serialize (; 231 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  i32.const 0
  i32.const 1024
  call $assembly/model/TextMessage#encode
  local.tee $1
  call $~lib/assemblyscript-json/encoder/JSONEncoder#serialize
  local.set $2
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
 )
 (func $~lib/near-runtime-ts/storage/Storage#set<assembly/model/TextMessage> (; 232 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $2
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  local.get $1
  local.get $2
  call $assembly/model/TextMessage#serialize
  local.tee $3
  call $~lib/near-runtime-ts/storage/Storage#setBytes
  local.get $3
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
 )
 (func $assembly/model/__near_JSONHandler_TextMessage#constructor (; 233 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  if (result i32)
   local.get $0
  else   
   i32.const 16
   i32.const 29
   call $~lib/rt/tlsf/__alloc
   call $~lib/rt/pure/__retain
  end
  call $~lib/assemblyscript-json/decoder/ThrowingJSONHandler#constructor
  local.set $0
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store8 offset=8
  local.get $0
  i32.const 0
  i32.store offset=12
  local.get $0
  local.tee $2
  local.get $1
  local.tee $3
  local.get $2
  i32.load offset=12
  local.tee $2
  i32.ne
  if
   local.get $3
   call $~lib/rt/pure/__retain
   drop
   local.get $2
   call $~lib/rt/pure/__release
  end
  local.get $3
  i32.store offset=12
  local.get $1
  call $~lib/rt/pure/__release
  local.get $0
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#constructor (; 234 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  i32.eqz
  if
   i32.const 8
   i32.const 30
   call $~lib/rt/tlsf/__alloc
   call $~lib/rt/pure/__retain
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  local.tee $2
  local.get $1
  local.tee $3
  local.get $2
  i32.load
  local.tee $2
  i32.ne
  if
   local.get $3
   call $~lib/rt/pure/__retain
   drop
   local.get $2
   call $~lib/rt/pure/__release
  end
  local.get $3
  i32.store
  local.get $1
  call $~lib/rt/pure/__release
  local.get $0
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#peekChar (; 235 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  i32.load offset=4
  i32.load offset=4
  local.get $0
  i32.load offset=4
  i32.load offset=8
  call $~lib/typedarray/Uint8Array#get:length
  i32.ge_s
  if
   i32.const -1
   return
  end
  local.get $0
  i32.load offset=4
  i32.load offset=8
  local.get $0
  i32.load offset=4
  i32.load offset=4
  call $~lib/typedarray/Uint8Array#__get
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#isWhitespace (; 236 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  i32.const 9
  i32.eq
  if (result i32)
   i32.const 1
  else   
   local.get $1
   i32.const 10
   i32.eq
  end
  if (result i32)
   i32.const 1
  else   
   local.get $1
   i32.const 13
   i32.eq
  end
  if (result i32)
   i32.const 1
  else   
   local.get $1
   i32.const 32
   i32.eq
  end
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#readChar (; 237 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  i32.load offset=4
  i32.load offset=4
  local.get $0
  i32.load offset=4
  i32.load offset=8
  call $~lib/typedarray/Uint8Array#get:length
  i32.lt_s
  i32.eqz
  if
   i32.const 4000
   i32.const 3504
   i32.const 112
   i32.const 8
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  i32.load offset=8
  local.get $0
  i32.load offset=4
  local.get $0
  i32.load offset=4
  i32.load offset=4
  local.tee $1
  i32.const 1
  i32.add
  i32.store offset=4
  local.get $1
  call $~lib/typedarray/Uint8Array#__get
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#skipWhitespace (; 238 ;) (type $FUNCSIG$vi) (param $0 i32)
  block $break|0
   loop $continue|0
    local.get $0
    local.get $0
    call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#peekChar
    call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#isWhitespace
    i32.eqz
    br_if $break|0
    local.get $0
    call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#readChar
    drop
    br $continue|0
   end
   unreachable
  end
 )
 (func $assembly/model/__near_JSONHandler_TextMessage#pushObject (; 239 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  i32.load8_u offset=8
  i32.const 0
  i32.ne
  i32.eqz
  if
   local.get $1
   i32.const 0
   call $~lib/string/String.__eq
   if (result i32)
    i32.const 1
   else    
    local.get $1
    call $~lib/string/String#get:length
    i32.const 0
    i32.eq
   end
   i32.eqz
   if
    i32.const 0
    i32.const 6664
    i32.const 46
    i32.const 6
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.const 1
   i32.store8 offset=8
   i32.const 1
   local.set $2
   local.get $1
   call $~lib/rt/pure/__release
   local.get $2
   return
  else   
   local.get $1
   i32.const 0
   call $~lib/string/String.__ne
   if (result i32)
    i32.const 1
   else    
    local.get $1
    call $~lib/string/String#get:length
    i32.const 0
    i32.ne
   end
   i32.eqz
   if
    i32.const 0
    i32.const 6664
    i32.const 50
    i32.const 6
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $0
  local.get $1
  call $~lib/assemblyscript-json/decoder/ThrowingJSONHandler#pushObject
  local.set $2
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#readHexDigit (; 240 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#readChar
  local.set $1
  local.get $1
  global.get $~lib/assemblyscript-json/decoder/CHAR_0
  i32.sub
  local.set $2
  local.get $2
  i32.const 9
  i32.gt_s
  if
   local.get $1
   global.get $~lib/assemblyscript-json/decoder/CHAR_A
   i32.sub
   i32.const 10
   i32.add
   local.set $2
   local.get $2
   i32.const 10
   i32.lt_s
   if (result i32)
    i32.const 1
   else    
    local.get $2
    i32.const 15
    i32.gt_s
   end
   if
    local.get $1
    global.get $~lib/assemblyscript-json/decoder/CHAR_A_LOWER
    i32.sub
    i32.const 10
    i32.add
    local.set $2
   end
  end
  i32.const 2
  i32.const 2
  i32.const 8
  i32.const 0
  call $~lib/rt/__allocArray
  local.set $3
  local.get $3
  i32.load offset=4
  local.set $4
  local.get $4
  local.get $1
  i32.store
  local.get $4
  local.get $2
  i32.store offset=4
  local.get $3
  call $~lib/rt/pure/__retain
  local.set $4
  local.get $2
  i32.const 0
  i32.ge_s
  if (result i32)
   local.get $2
   i32.const 16
   i32.lt_s
  else   
   i32.const 0
  end
  i32.eqz
  if
   i32.const 4440
   i32.const 3504
   i32.const 269
   i32.const 4
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  local.set $3
  local.get $4
  call $~lib/rt/pure/__release
  local.get $3
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#readEscapedChar (; 241 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#readChar
  local.set $1
  local.get $1
  i32.const 1224
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 1224
   call $~lib/rt/pure/__retain
   return
  end
  local.get $1
  i32.const 1248
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 1248
   call $~lib/rt/pure/__retain
   return
  end
  local.get $1
  i32.const 4296
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 4296
   call $~lib/rt/pure/__retain
   return
  end
  local.get $1
  i32.const 4320
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 1320
   call $~lib/rt/pure/__retain
   return
  end
  local.get $1
  i32.const 4344
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 1368
   call $~lib/rt/pure/__retain
   return
  end
  local.get $1
  i32.const 4368
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 1416
   call $~lib/rt/pure/__retain
   return
  end
  local.get $1
  i32.const 4392
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 1464
   call $~lib/rt/pure/__retain
   return
  end
  local.get $1
  i32.const 4416
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#readHexDigit
   local.set $2
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#readHexDigit
   local.set $3
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#readHexDigit
   local.set $4
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#readHexDigit
   local.set $5
   local.get $2
   i32.const 4096
   i32.mul
   local.get $3
   i32.const 256
   i32.mul
   i32.add
   local.get $4
   i32.const 16
   i32.mul
   i32.add
   local.get $5
   i32.add
   local.set $6
   local.get $6
   call $~lib/string/String.fromCodePoint
   return
  end
  i32.const 0
  i32.eqz
  if
   i32.const 4496
   i32.const 1
   global.set $~lib/argc
   local.get $1
   i32.const 0
   call $~lib/string/String.fromCharCode|trampoline
   local.tee $6
   call $~lib/string/String.__concat
   local.tee $5
   i32.const 3504
   i32.const 255
   i32.const 4
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 1024
  call $~lib/rt/pure/__retain
  local.set $4
  local.get $6
  call $~lib/rt/pure/__release
  local.get $5
  call $~lib/rt/pure/__release
  local.get $4
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#readString (; 242 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#readChar
  i32.const 1224
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  i32.eqz
  if
   i32.const 4144
   i32.const 3504
   i32.const 197
   i32.const 4
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  i32.load offset=4
  local.set $1
  i32.const 0
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#constructor
  local.set $2
  loop $loop|0
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#readChar
   local.set $3
   local.get $3
   i32.const 32
   i32.ge_s
   i32.eqz
   if
    i32.const 4224
    i32.const 3504
    i32.const 203
    i32.const 6
    call $~lib/builtins/abort
    unreachable
   end
   local.get $3
   i32.const 1224
   i32.const 0
   call $~lib/string/String#charCodeAt
   i32.eq
   if
    i32.const 1
    global.set $~lib/argc
    local.get $0
    i32.load offset=4
    local.get $1
    i32.const 0
    call $~lib/assemblyscript-json/decoder/DecoderState#readString|trampoline
    local.set $4
    local.get $2
    call $~lib/array/Array<~lib/string/String>#get:length
    i32.const 0
    i32.eq
    if
     local.get $4
     local.set $5
     local.get $2
     call $~lib/rt/pure/__release
     local.get $5
     return
    end
    local.get $2
    local.get $4
    call $~lib/array/Array<~lib/string/String>#push
    drop
    local.get $2
    i32.const 1024
    call $~lib/array/Array<~lib/string/String>#join
    local.set $5
    local.get $4
    call $~lib/rt/pure/__release
    local.get $2
    call $~lib/rt/pure/__release
    local.get $5
    return
   else    
    local.get $3
    i32.const 1248
    i32.const 0
    call $~lib/string/String#charCodeAt
    i32.eq
    if
     local.get $0
     i32.load offset=4
     i32.load offset=4
     local.get $1
     i32.const 1
     i32.add
     i32.gt_s
     if
      local.get $2
      i32.const 1
      global.set $~lib/argc
      local.get $0
      i32.load offset=4
      local.get $1
      i32.const 0
      call $~lib/assemblyscript-json/decoder/DecoderState#readString|trampoline
      local.tee $4
      call $~lib/array/Array<~lib/string/String>#push
      drop
      local.get $4
      call $~lib/rt/pure/__release
     end
     local.get $2
     local.get $0
     call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#readEscapedChar
     local.tee $4
     call $~lib/array/Array<~lib/string/String>#push
     drop
     local.get $0
     i32.load offset=4
     i32.load offset=4
     local.set $1
     local.get $4
     call $~lib/rt/pure/__release
    end
   end
   br $loop|0
  end
  unreachable
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#parseKey (; 243 ;) (type $FUNCSIG$vi) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#skipWhitespace
  local.get $0
  i32.load offset=4
  local.tee $1
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#readString
  local.set $2
  local.get $1
  i32.load
  call $~lib/rt/pure/__release
  local.get $2
  i32.store
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#skipWhitespace
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#readChar
  i32.const 2136
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  i32.eqz
  if
   i32.const 4576
   i32.const 3504
   i32.const 159
   i32.const 4
   call $~lib/builtins/abort
   unreachable
  end
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#parseObject (; 244 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#peekChar
  i32.const 4056
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.ne
  if
   i32.const 0
   return
  end
  local.get $0
  i32.load offset=4
  i32.load
  call $~lib/rt/pure/__retain
  local.set $1
  local.get $0
  i32.load offset=4
  local.tee $2
  i32.const 1024
  local.tee $3
  local.get $2
  i32.load
  local.tee $2
  i32.ne
  if
   local.get $3
   call $~lib/rt/pure/__retain
   drop
   local.get $2
   call $~lib/rt/pure/__release
  end
  local.get $3
  i32.store
  local.get $0
  i32.load
  local.get $1
  call $assembly/model/__near_JSONHandler_TextMessage#pushObject
  if
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#readChar
   drop
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#skipWhitespace
   i32.const 1
   local.set $3
   block $break|0
    loop $continue|0
     local.get $0
     call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#peekChar
     i32.const 4080
     i32.const 0
     call $~lib/string/String#charCodeAt
     i32.ne
     i32.eqz
     br_if $break|0
     local.get $3
     i32.eqz
     if
      local.get $0
      call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#readChar
      i32.const 1200
      i32.const 0
      call $~lib/string/String#charCodeAt
      i32.eq
      i32.eqz
      if
       i32.const 4104
       i32.const 3504
       i32.const 142
       i32.const 10
       call $~lib/builtins/abort
       unreachable
      end
     else      
      i32.const 0
      local.set $3
     end
     local.get $0
     call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#parseKey
     local.get $0
     call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#parseValue
     drop
     br $continue|0
    end
    unreachable
   end
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#readChar
   i32.const 4080
   i32.const 0
   call $~lib/string/String#charCodeAt
   i32.eq
   i32.eqz
   if
    i32.const 4616
    i32.const 3504
    i32.const 149
    i32.const 6
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $0
  i32.load
  call $~lib/assemblyscript-json/decoder/JSONHandler#popObject
  i32.const 1
  local.set $3
  local.get $1
  call $~lib/rt/pure/__release
  local.get $3
 )
 (func $assembly/model/__near_JSONHandler_TextMessage#pushArray (; 245 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  local.get $1
  call $~lib/assemblyscript-json/decoder/ThrowingJSONHandler#pushArray
  local.set $2
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#parseArray (; 246 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#peekChar
  i32.const 3296
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.ne
  if
   i32.const 0
   return
  end
  local.get $0
  i32.load offset=4
  i32.load
  call $~lib/rt/pure/__retain
  local.set $1
  local.get $0
  i32.load offset=4
  local.tee $2
  i32.const 1024
  local.tee $3
  local.get $2
  i32.load
  local.tee $2
  i32.ne
  if
   local.get $3
   call $~lib/rt/pure/__retain
   drop
   local.get $2
   call $~lib/rt/pure/__release
  end
  local.get $3
  i32.store
  local.get $0
  i32.load
  local.get $1
  call $assembly/model/__near_JSONHandler_TextMessage#pushArray
  if
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#readChar
   drop
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#skipWhitespace
   i32.const 1
   local.set $3
   block $break|0
    loop $continue|0
     local.get $0
     call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#peekChar
     i32.const 3320
     i32.const 0
     call $~lib/string/String#charCodeAt
     i32.ne
     i32.eqz
     br_if $break|0
     local.get $3
     i32.eqz
     if
      local.get $0
      call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#readChar
      i32.const 1200
      i32.const 0
      call $~lib/string/String#charCodeAt
      i32.eq
      i32.eqz
      if
       i32.const 4104
       i32.const 3504
       i32.const 176
       i32.const 10
       call $~lib/builtins/abort
       unreachable
      end
     else      
      i32.const 0
      local.set $3
     end
     local.get $0
     call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#parseValue
     drop
     br $continue|0
    end
    unreachable
   end
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#readChar
   i32.const 3320
   i32.const 0
   call $~lib/string/String#charCodeAt
   i32.eq
   i32.eqz
   if
    i32.const 4680
    i32.const 3504
    i32.const 182
    i32.const 6
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $0
  i32.load
  call $~lib/assemblyscript-json/decoder/JSONHandler#popArray
  i32.const 1
  local.set $3
  local.get $1
  call $~lib/rt/pure/__release
  local.get $3
 )
 (func $~lib/util/string/isSpace (; 247 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  i32.const 255
  i32.le_s
  if
   block $break|0
    block $case6|0
     block $case5|0
      block $case4|0
       block $case3|0
        block $case2|0
         block $case1|0
          block $case0|0
           local.get $0
           local.set $1
           local.get $1
           i32.const 9
           i32.eq
           br_if $case0|0
           local.get $1
           i32.const 10
           i32.eq
           br_if $case1|0
           local.get $1
           i32.const 11
           i32.eq
           br_if $case2|0
           local.get $1
           i32.const 12
           i32.eq
           br_if $case3|0
           local.get $1
           i32.const 13
           i32.eq
           br_if $case4|0
           local.get $1
           i32.const 32
           i32.eq
           br_if $case5|0
           local.get $1
           i32.const 160
           i32.eq
           br_if $case6|0
           br $break|0
          end
         end
        end
       end
      end
     end
    end
    i32.const 1
    return
   end
   i32.const 0
   return
  end
  local.get $0
  i32.const 8192
  i32.ge_s
  if (result i32)
   local.get $0
   i32.const 8202
   i32.le_s
  else   
   i32.const 0
  end
  if
   i32.const 1
   return
  end
  block $break|1
   block $case6|1
    block $case5|1
     block $case4|1
      block $case3|1
       block $case2|1
        block $case1|1
         block $case0|1
          local.get $0
          local.set $1
          local.get $1
          i32.const 5760
          i32.eq
          br_if $case0|1
          local.get $1
          i32.const 8232
          i32.eq
          br_if $case1|1
          local.get $1
          i32.const 8233
          i32.eq
          br_if $case2|1
          local.get $1
          i32.const 8239
          i32.eq
          br_if $case3|1
          local.get $1
          i32.const 8287
          i32.eq
          br_if $case4|1
          local.get $1
          i32.const 12288
          i32.eq
          br_if $case5|1
          local.get $1
          i32.const 65279
          i32.eq
          br_if $case6|1
          br $break|1
         end
        end
       end
      end
     end
    end
   end
   i32.const 1
   return
  end
  i32.const 0
 )
 (func $~lib/util/string/strtol<i64> (; 248 ;) (type $FUNCSIG$jii) (param $0 i32) (param $1 i32) (result i64)
  (local $2 i32)
  (local $3 i64)
  (local $4 i32)
  (local $5 i32)
  (local $6 i64)
  (local $7 i32)
  (local $8 i64)
  local.get $0
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  call $~lib/string/String#get:length
  local.set $2
  local.get $2
  i32.eqz
  if
   i64.const 0
   local.set $3
   local.get $0
   call $~lib/rt/pure/__release
   local.get $3
   return
  end
  local.get $0
  local.set $4
  local.get $4
  i32.load16_u
  local.set $5
  i64.const 1
  local.set $6
  block $break|0
   loop $continue|0
    local.get $5
    call $~lib/util/string/isSpace
    i32.eqz
    br_if $break|0
    local.get $4
    i32.const 2
    i32.add
    local.tee $4
    i32.load16_u
    local.set $5
    local.get $2
    i32.const 1
    i32.sub
    local.set $2
    br $continue|0
   end
   unreachable
  end
  local.get $5
  i32.const 45
  i32.eq
  if
   local.get $2
   i32.const 1
   i32.sub
   local.tee $2
   i32.eqz
   if
    i64.const 0
    local.set $3
    local.get $0
    call $~lib/rt/pure/__release
    local.get $3
    return
   end
   local.get $4
   i32.const 2
   i32.add
   local.tee $4
   i32.load16_u
   local.set $5
   i64.const -1
   local.set $6
  else   
   local.get $5
   i32.const 43
   i32.eq
   if
    local.get $2
    i32.const 1
    i32.sub
    local.tee $2
    i32.eqz
    if
     i64.const 0
     local.set $3
     local.get $0
     call $~lib/rt/pure/__release
     local.get $3
     return
    end
    local.get $4
    i32.const 2
    i32.add
    local.tee $4
    i32.load16_u
    local.set $5
   end
  end
  local.get $1
  i32.eqz
  if
   local.get $5
   i32.const 48
   i32.eq
   if (result i32)
    local.get $2
    i32.const 2
    i32.gt_s
   else    
    i32.const 0
   end
   if
    block $break|1
     block $case6|1
      block $case5|1
       block $case4|1
        block $case3|1
         block $case2|1
          block $case1|1
           block $case0|1
            local.get $4
            i32.const 2
            i32.add
            i32.load16_u
            local.set $7
            local.get $7
            i32.const 66
            i32.eq
            br_if $case0|1
            local.get $7
            i32.const 98
            i32.eq
            br_if $case1|1
            local.get $7
            i32.const 79
            i32.eq
            br_if $case2|1
            local.get $7
            i32.const 111
            i32.eq
            br_if $case3|1
            local.get $7
            i32.const 88
            i32.eq
            br_if $case4|1
            local.get $7
            i32.const 120
            i32.eq
            br_if $case5|1
            br $case6|1
           end
          end
          local.get $4
          i32.const 4
          i32.add
          local.set $4
          local.get $2
          i32.const 2
          i32.sub
          local.set $2
          i32.const 2
          local.set $1
          br $break|1
         end
        end
        local.get $4
        i32.const 4
        i32.add
        local.set $4
        local.get $2
        i32.const 2
        i32.sub
        local.set $2
        i32.const 8
        local.set $1
        br $break|1
       end
      end
      local.get $4
      i32.const 4
      i32.add
      local.set $4
      local.get $2
      i32.const 2
      i32.sub
      local.set $2
      i32.const 16
      local.set $1
      br $break|1
     end
     i32.const 10
     local.set $1
    end
   else    
    i32.const 10
    local.set $1
   end
  else   
   local.get $1
   i32.const 2
   i32.lt_s
   if (result i32)
    i32.const 1
   else    
    local.get $1
    i32.const 36
    i32.gt_s
   end
   if
    i64.const 0
    local.set $3
    local.get $0
    call $~lib/rt/pure/__release
    local.get $3
    return
   end
  end
  i64.const 0
  local.set $8
  block $break|2
   loop $continue|2
    local.get $2
    local.tee $7
    i32.const 1
    i32.sub
    local.set $2
    local.get $7
    i32.eqz
    br_if $break|2
    local.get $4
    i32.load16_u
    local.set $5
    local.get $5
    i32.const 48
    i32.ge_s
    if (result i32)
     local.get $5
     i32.const 57
     i32.le_s
    else     
     i32.const 0
    end
    if
     local.get $5
     i32.const 48
     i32.sub
     local.set $5
    else     
     local.get $5
     i32.const 65
     i32.ge_s
     if (result i32)
      local.get $5
      i32.const 90
      i32.le_s
     else      
      i32.const 0
     end
     if
      local.get $5
      i32.const 65
      i32.const 10
      i32.sub
      i32.sub
      local.set $5
     else      
      local.get $5
      i32.const 97
      i32.ge_s
      if (result i32)
       local.get $5
       i32.const 122
       i32.le_s
      else       
       i32.const 0
      end
      if
       local.get $5
       i32.const 97
       i32.const 10
       i32.sub
       i32.sub
       local.set $5
      else       
       br $break|2
      end
     end
    end
    local.get $5
    local.get $1
    i32.ge_s
    if
     br $break|2
    end
    local.get $8
    local.get $1
    i64.extend_i32_s
    i64.mul
    local.get $5
    i64.extend_i32_s
    i64.add
    local.set $8
    local.get $4
    i32.const 2
    i32.add
    local.set $4
    br $continue|2
   end
   unreachable
  end
  local.get $6
  local.get $8
  i64.mul
  local.set $3
  local.get $0
  call $~lib/rt/pure/__release
  local.get $3
 )
 (func $~lib/number/U64.parseInt (; 249 ;) (type $FUNCSIG$jii) (param $0 i32) (param $1 i32) (result i64)
  (local $2 i64)
  local.get $0
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  local.get $1
  call $~lib/util/string/strtol<i64>
  local.set $2
  local.get $0
  call $~lib/rt/pure/__release
  local.get $2
 )
 (func $assembly/model/__near_JSONHandler_TextMessage#setString (; 250 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $2
  call $~lib/rt/pure/__retain
  drop
  local.get $1
  i32.const 6576
  call $~lib/string/String.__eq
  if
   local.get $0
   i32.load offset=12
   local.tee $3
   local.get $2
   local.tee $4
   local.get $3
   i32.load
   local.tee $3
   i32.ne
   if
    local.get $4
    call $~lib/rt/pure/__retain
    drop
    local.get $3
    call $~lib/rt/pure/__release
   end
   local.get $4
   i32.store
   local.get $1
   call $~lib/rt/pure/__release
   local.get $2
   call $~lib/rt/pure/__release
   return
  end
  local.get $1
  i32.const 6608
  call $~lib/string/String.__eq
  if
   local.get $0
   i32.load offset=12
   local.tee $4
   local.get $2
   local.tee $3
   local.get $4
   i32.load offset=4
   local.tee $4
   i32.ne
   if
    local.get $3
    call $~lib/rt/pure/__retain
    drop
    local.get $4
    call $~lib/rt/pure/__release
   end
   local.get $3
   i32.store offset=4
   local.get $1
   call $~lib/rt/pure/__release
   local.get $2
   call $~lib/rt/pure/__release
   return
  end
  local.get $1
  i32.const 6632
  call $~lib/string/String.__eq
  if
   local.get $0
   i32.load offset=12
   local.get $2
   i32.const 0
   call $~lib/number/U64.parseInt
   i64.store offset=8
   local.get $1
   call $~lib/rt/pure/__release
   local.get $2
   call $~lib/rt/pure/__release
   return
  end
  local.get $0
  local.get $1
  local.get $2
  call $~lib/assemblyscript-json/decoder/ThrowingJSONHandler#setString
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#parseString (; 251 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#peekChar
  i32.const 1224
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.ne
  if
   i32.const 0
   return
  end
  local.get $0
  i32.load
  local.get $0
  i32.load offset=4
  i32.load
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#readString
  local.tee $1
  call $assembly/model/__near_JSONHandler_TextMessage#setString
  i32.const 1
  local.set $2
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#readAndAssert (; 252 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  block $break|0
   i32.const 0
   local.set $2
   loop $loop|0
    local.get $2
    local.get $1
    call $~lib/string/String#get:length
    i32.lt_s
    i32.eqz
    br_if $break|0
    local.get $1
    local.get $2
    call $~lib/string/String#charCodeAt
    local.get $0
    call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#readChar
    i32.eq
    i32.eqz
    if
     i32.const 4744
     local.get $1
     call $~lib/string/String.__concat
     local.tee $3
     i32.const 4784
     call $~lib/string/String.__concat
     local.tee $4
     i32.const 3504
     i32.const 321
     i32.const 6
     call $~lib/builtins/abort
     unreachable
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    local.get $3
    call $~lib/rt/pure/__release
    local.get $4
    call $~lib/rt/pure/__release
    br $loop|0
   end
   unreachable
  end
  local.get $1
  call $~lib/rt/pure/__release
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#parseBoolean (; 253 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#peekChar
  i32.const 552
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   local.get $0
   global.get $~lib/assemblyscript-json/decoder/FALSE_STR
   call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#readAndAssert
   local.get $0
   i32.load
   local.get $0
   i32.load offset=4
   i32.load
   i32.const 0
   call $~lib/assemblyscript-json/decoder/ThrowingJSONHandler#setBoolean
   i32.const 1
   return
  end
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#peekChar
  i32.const 528
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   local.get $0
   global.get $~lib/assemblyscript-json/decoder/TRUE_STR
   call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#readAndAssert
   local.get $0
   i32.load
   local.get $0
   i32.load offset=4
   i32.load
   i32.const 1
   call $~lib/assemblyscript-json/decoder/ThrowingJSONHandler#setBoolean
   i32.const 1
   return
  end
  i32.const 0
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#parseNumber (; 254 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i64)
  (local $2 i64)
  (local $3 i32)
  (local $4 i32)
  i64.const 0
  local.set $1
  i64.const 1
  local.set $2
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#peekChar
  i32.const 4808
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i64.const -1
   local.set $2
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#readChar
   drop
  end
  i32.const 0
  local.set $3
  block $break|0
   loop $continue|0
    global.get $~lib/assemblyscript-json/decoder/CHAR_0
    local.get $0
    call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#peekChar
    i32.le_s
    if (result i32)
     local.get $0
     call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#peekChar
     global.get $~lib/assemblyscript-json/decoder/CHAR_9
     i32.le_s
    else     
     i32.const 0
    end
    i32.eqz
    br_if $break|0
    local.get $0
    call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#readChar
    local.set $4
    local.get $1
    i64.const 10
    i64.mul
    local.set $1
    local.get $1
    local.get $4
    global.get $~lib/assemblyscript-json/decoder/CHAR_0
    i32.sub
    i64.extend_i32_s
    i64.add
    local.set $1
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $continue|0
   end
   unreachable
  end
  local.get $3
  i32.const 0
  i32.gt_s
  if
   local.get $0
   i32.load
   local.get $0
   i32.load offset=4
   i32.load
   local.get $1
   local.get $2
   i64.mul
   call $~lib/assemblyscript-json/decoder/ThrowingJSONHandler#setInteger
   i32.const 1
   return
  end
  i32.const 0
 )
 (func $assembly/model/__near_JSONHandler_TextMessage#setNull (; 255 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $1
  i32.const 6576
  call $~lib/string/String.__eq
  if
   local.get $0
   i32.load offset=12
   local.tee $2
   i32.const 0
   local.tee $3
   local.get $2
   i32.load
   local.tee $2
   i32.ne
   if
    local.get $3
    call $~lib/rt/pure/__retain
    drop
    local.get $2
    call $~lib/rt/pure/__release
   end
   local.get $3
   i32.store
   local.get $1
   call $~lib/rt/pure/__release
   return
  end
  local.get $1
  i32.const 6608
  call $~lib/string/String.__eq
  if
   local.get $0
   i32.load offset=12
   local.tee $3
   i32.const 0
   local.tee $2
   local.get $3
   i32.load offset=4
   local.tee $3
   i32.ne
   if
    local.get $2
    call $~lib/rt/pure/__retain
    drop
    local.get $3
    call $~lib/rt/pure/__release
   end
   local.get $2
   i32.store offset=4
   local.get $1
   call $~lib/rt/pure/__release
   return
  end
  local.get $0
  local.get $1
  call $~lib/assemblyscript-json/decoder/ThrowingJSONHandler#setNull
  local.get $1
  call $~lib/rt/pure/__release
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#parseNull (; 256 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#peekChar
  i32.const 584
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   local.get $0
   global.get $~lib/assemblyscript-json/decoder/NULL_STR
   call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#readAndAssert
   local.get $0
   i32.load
   local.get $0
   i32.load offset=4
   i32.load
   call $assembly/model/__near_JSONHandler_TextMessage#setNull
   i32.const 1
   return
  end
  i32.const 0
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#parseValue (; 257 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#skipWhitespace
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#parseObject
  local.tee $1
  if (result i32)
   local.get $1
  else   
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#parseArray
  end
  local.tee $1
  if (result i32)
   local.get $1
  else   
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#parseString
  end
  local.tee $1
  if (result i32)
   local.get $1
  else   
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#parseBoolean
  end
  local.tee $1
  if (result i32)
   local.get $1
  else   
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#parseNumber
  end
  local.tee $1
  if (result i32)
   local.get $1
  else   
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#parseNull
  end
  local.set $1
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#skipWhitespace
  local.get $1
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#deserialize (; 258 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $2
  call $~lib/rt/pure/__retain
  drop
  local.get $2
  i32.const 0
  i32.ne
  if
   local.get $0
   local.tee $3
   local.get $2
   local.tee $4
   local.get $3
   i32.load offset=4
   local.tee $3
   i32.ne
   if
    local.get $4
    call $~lib/rt/pure/__retain
    drop
    local.get $3
    call $~lib/rt/pure/__release
   end
   local.get $4
   i32.store offset=4
  else   
   local.get $0
   local.tee $4
   i32.const 0
   local.get $1
   call $~lib/assemblyscript-json/decoder/DecoderState#constructor
   local.set $3
   local.get $4
   i32.load offset=4
   call $~lib/rt/pure/__release
   local.get $3
   i32.store offset=4
  end
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#parseValue
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 4832
   i32.const 3504
   i32.const 100
   i32.const 4
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
 )
 (func $assembly/model/TextMessage#decode (; 259 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $2
  call $~lib/rt/pure/__retain
  drop
  i32.const 0
  local.get $0
  call $assembly/model/__near_JSONHandler_TextMessage#constructor
  local.set $3
  local.get $3
  local.tee $4
  local.get $1
  local.tee $5
  local.get $4
  i32.load
  local.tee $4
  i32.ne
  if
   local.get $5
   call $~lib/rt/pure/__retain
   drop
   local.get $4
   call $~lib/rt/pure/__release
  end
  local.get $5
  i32.store
  i32.const 0
  local.get $3
  call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#constructor
  local.set $5
  local.get $3
  local.tee $4
  local.get $5
  local.tee $6
  local.get $4
  i32.load offset=4
  local.tee $4
  i32.ne
  if
   local.get $6
   call $~lib/rt/pure/__retain
   drop
   local.get $4
   call $~lib/rt/pure/__release
  end
  local.get $6
  i32.store offset=4
  local.get $5
  local.get $1
  local.get $2
  call $~lib/assemblyscript-json/decoder/JSONDecoder<assembly/model/__near_JSONHandler_TextMessage>#deserialize
  local.get $0
  call $~lib/rt/pure/__retain
  local.set $6
  local.get $3
  call $~lib/rt/pure/__release
  local.get $5
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  local.get $6
 )
 (func $~lib/near-runtime-ts/util/util.parseFromBytes<assembly/model/TextMessage> (; 260 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  drop
  i32.const 0
  call $assembly/model/TextMessage#constructor
  local.tee $1
  call $~lib/rt/pure/__retain
  local.set $2
  local.get $2
  local.get $0
  i32.const 0
  call $assembly/model/TextMessage#decode
  local.set $3
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  local.get $0
  call $~lib/rt/pure/__release
  local.get $3
  return
 )
 (func $~lib/near-runtime-ts/storage/Storage#get<assembly/model/TextMessage> (; 261 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $2
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/storage/Storage#getBytes
  local.set $3
  local.get $3
  i32.const 0
  i32.eq
  if (result i32)
   local.get $2
   call $~lib/rt/pure/__retain
  else   
   local.get $3
   local.tee $4
   if (result i32)
    local.get $4
   else    
    unreachable
   end
   call $~lib/near-runtime-ts/util/util.parseFromBytes<assembly/model/TextMessage>
  end
  local.set $4
  local.get $3
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  local.get $4
  return
 )
 (func $~lib/near-runtime-ts/storage/Storage#set<u64> (; 262 ;) (type $FUNCSIG$viij) (param $0 i32) (param $1 i32) (param $2 i64)
  (local $3 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  local.get $1
  local.get $2
  call $~lib/number/U64#toString
  local.tee $3
  call $~lib/near-runtime-ts/storage/Storage#setString
  local.get $3
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
 )
 (func $~lib/near-runtime-ts/util/util.parseFromString<u64> (; 263 ;) (type $FUNCSIG$ji) (param $0 i32) (result i64)
  (local $1 i64)
  local.get $0
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  i32.const 0
  call $~lib/number/U64.parseInt
  local.set $1
  local.get $0
  call $~lib/rt/pure/__release
  local.get $1
  return
 )
 (func $~lib/near-runtime-ts/storage/Storage#getPrimitive<u64> (; 264 ;) (type $FUNCSIG$jiij) (param $0 i32) (param $1 i32) (param $2 i64) (result i64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i64)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/storage/Storage#getString
  local.set $3
  local.get $3
  i32.const 0
  call $~lib/string/String.__eq
  if (result i64)
   local.get $2
  else   
   local.get $0
   local.get $1
   call $~lib/near-runtime-ts/storage/Storage#getString
   local.tee $4
   call $~lib/near-runtime-ts/util/util.parseFromString<u64>
   local.set $5
   local.get $4
   call $~lib/rt/pure/__release
   local.get $5
  end
  local.set $5
  local.get $3
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $5
  return
 )
 (func $~lib/util/number/utoa32 (; 265 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  i32.eqz
  if
   i32.const 608
   call $~lib/rt/pure/__retain
   return
  end
  local.get $0
  call $~lib/util/number/decimalCount32
  local.set $1
  local.get $1
  i32.const 1
  i32.shl
  i32.const 1
  call $~lib/rt/tlsf/__alloc
  local.set $2
  local.get $2
  local.set $5
  local.get $0
  local.set $4
  local.get $1
  local.set $3
  local.get $5
  local.get $4
  local.get $3
  call $~lib/util/number/utoa32_lut
  local.get $2
  call $~lib/rt/pure/__retain
 )
 (func $~lib/util/number/itoa<u32> (; 266 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  call $~lib/util/number/utoa32
  return
 )
 (func $~lib/number/U32#toString (; 267 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  call $~lib/util/number/itoa<u32>
  local.tee $1
  call $~lib/rt/pure/__retain
  local.set $2
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
 )
 (func $~lib/near-runtime-ts/storage/Storage#set<u32> (; 268 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  local.get $1
  local.get $2
  call $~lib/number/U32#toString
  local.tee $3
  call $~lib/near-runtime-ts/storage/Storage#setString
  local.get $3
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
 )
 (func $~lib/near-runtime-ts/util/util.parseFromString<u32> (; 269 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  i32.const 0
  call $~lib/number/U64.parseInt
  i32.wrap_i64
  local.set $1
  local.get $0
  call $~lib/rt/pure/__release
  local.get $1
  return
 )
 (func $~lib/near-runtime-ts/storage/Storage#getPrimitive<u32> (; 270 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/storage/Storage#getString
  local.set $3
  local.get $3
  i32.const 0
  call $~lib/string/String.__eq
  if (result i32)
   local.get $2
  else   
   local.get $0
   local.get $1
   call $~lib/near-runtime-ts/storage/Storage#getString
   local.tee $4
   call $~lib/near-runtime-ts/util/util.parseFromString<u32>
   local.set $5
   local.get $4
   call $~lib/rt/pure/__release
   local.get $5
  end
  local.set $4
  local.get $3
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $4
  return
 )
 (func $~lib/near-runtime-ts/storage/Storage#set<i32> (; 271 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  local.get $1
  local.get $2
  call $~lib/number/I32#toString
  local.tee $3
  call $~lib/near-runtime-ts/storage/Storage#setString
  local.get $3
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
 )
 (func $~lib/number/I64.parseInt (; 272 ;) (type $FUNCSIG$jii) (param $0 i32) (param $1 i32) (result i64)
  (local $2 i64)
  local.get $0
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  local.get $1
  call $~lib/util/string/strtol<i64>
  local.set $2
  local.get $0
  call $~lib/rt/pure/__release
  local.get $2
 )
 (func $~lib/near-runtime-ts/util/util.parseFromString<i32> (; 273 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  i32.const 0
  call $~lib/number/I64.parseInt
  i32.wrap_i64
  local.set $1
  local.get $0
  call $~lib/rt/pure/__release
  local.get $1
  return
 )
 (func $~lib/near-runtime-ts/storage/Storage#getPrimitive<i32> (; 274 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/storage/Storage#getString
  local.set $3
  local.get $3
  i32.const 0
  call $~lib/string/String.__eq
  if (result i32)
   local.get $2
  else   
   local.get $0
   local.get $1
   call $~lib/near-runtime-ts/storage/Storage#getString
   local.tee $4
   call $~lib/near-runtime-ts/util/util.parseFromString<i32>
   local.set $5
   local.get $4
   call $~lib/rt/pure/__release
   local.get $5
  end
  local.set $4
  local.get $3
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $4
  return
 )
 (func $~lib/number/Bool#toString (; 275 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  if (result i32)
   i32.const 528
   call $~lib/rt/pure/__retain
   local.tee $1
  else   
   i32.const 552
   call $~lib/rt/pure/__retain
   local.tee $2
  end
  call $~lib/rt/pure/__retain
 )
 (func $~lib/near-runtime-ts/storage/Storage#set<bool> (; 276 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  local.get $1
  local.get $2
  call $~lib/number/Bool#toString
  local.tee $3
  call $~lib/near-runtime-ts/storage/Storage#setString
  local.get $3
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
 )
 (func $~lib/near-runtime-ts/util/util.parseFromString<bool> (; 277 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  i32.const 528
  call $~lib/string/String.__eq
  local.set $1
  local.get $0
  call $~lib/rt/pure/__release
  local.get $1
  return
 )
 (func $~lib/near-runtime-ts/storage/Storage#getPrimitive<bool> (; 278 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/storage/Storage#getString
  local.set $3
  local.get $3
  i32.const 0
  call $~lib/string/String.__eq
  if (result i32)
   local.get $2
  else   
   local.get $0
   local.get $1
   call $~lib/near-runtime-ts/storage/Storage#getString
   local.tee $4
   call $~lib/near-runtime-ts/util/util.parseFromString<bool>
   local.set $5
   local.get $4
   call $~lib/rt/pure/__release
   local.get $5
  end
  local.set $4
  local.get $3
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $4
  return
 )
 (func $~lib/near-runtime-ts/storage/Storage#set<~lib/string/String> (; 279 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $2
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  local.get $1
  local.get $2
  call $~lib/near-runtime-ts/storage/Storage#setString
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
 )
 (func $~lib/near-runtime-ts/util/util.parseFromString<~lib/string/String> (; 280 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  return
 )
 (func $~lib/near-runtime-ts/storage/Storage#get<~lib/string/String> (; 281 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $2
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/storage/Storage#getString
  local.set $3
  local.get $3
  i32.const 0
  call $~lib/string/String.__eq
  if (result i32)
   local.get $2
   call $~lib/rt/pure/__retain
  else   
   local.get $0
   local.get $1
   call $~lib/near-runtime-ts/storage/Storage#getString
   local.tee $4
   call $~lib/near-runtime-ts/util/util.parseFromString<~lib/string/String>
   local.set $5
   local.get $4
   call $~lib/rt/pure/__release
   local.get $5
  end
  local.set $4
  local.get $3
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  local.get $4
  return
 )
 (func $assembly/main/storageGenericGetSetRoundtripTest (; 282 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  i32.const 6360
  call $~lib/near-runtime-ts/logging/logging.log
  call $assembly/util/_testTextMessage
  local.set $0
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 6544
  local.get $0
  call $~lib/near-runtime-ts/storage/Storage#set<assembly/model/TextMessage>
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 6544
  i32.const 0
  call $~lib/near-runtime-ts/storage/Storage#get<assembly/model/TextMessage>
  local.set $1
  local.get $1
  i32.load
  i32.const 6448
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 6720
   i32.const 2344
   i32.const 183
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.load offset=4
  i32.const 6504
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 6840
   i32.const 2344
   i32.const 184
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i64.load offset=8
  i64.const 415
  i64.eq
  i32.eqz
  if
   i32.const 6952
   i32.const 2344
   i32.const 185
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 7072
  i32.const 0
  call $~lib/near-runtime-ts/storage/Storage#get<assembly/model/TextMessage>
  local.tee $2
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 7112
   i32.const 2344
   i32.const 186
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 7224
  i32.const 0
  call $assembly/model/TextMessage#constructor
  local.tee $3
  call $~lib/near-runtime-ts/storage/Storage#set<assembly/model/TextMessage>
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 7256
  i64.const 20
  call $~lib/near-runtime-ts/storage/Storage#set<u64>
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 7256
  i64.const 0
  call $~lib/near-runtime-ts/storage/Storage#getPrimitive<u64>
  i64.const 20
  i64.eq
  i32.eqz
  if
   i32.const 7288
   i32.const 2344
   i32.const 189
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 7072
  i64.const 1
  call $~lib/near-runtime-ts/storage/Storage#getPrimitive<u64>
  i64.const 1
  i64.eq
  i32.eqz
  if
   i32.const 7384
   i32.const 2344
   i32.const 190
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 7496
  i32.const 12
  call $~lib/near-runtime-ts/storage/Storage#set<u32>
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 7496
  i32.const 0
  call $~lib/near-runtime-ts/storage/Storage#getPrimitive<u32>
  i32.const 12
  i32.eq
  i32.eqz
  if
   i32.const 7528
   i32.const 2344
   i32.const 192
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 7072
  i32.const 2
  call $~lib/near-runtime-ts/storage/Storage#getPrimitive<u32>
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 7624
   i32.const 2344
   i32.const 193
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 7736
  i32.const -5
  call $~lib/near-runtime-ts/storage/Storage#set<i32>
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 7736
  i32.const 0
  call $~lib/near-runtime-ts/storage/Storage#getPrimitive<i32>
  i32.const -5
  i32.eq
  i32.eqz
  if
   i32.const 7768
   i32.const 2344
   i32.const 195
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 7072
  i32.const -10
  call $~lib/near-runtime-ts/storage/Storage#getPrimitive<i32>
  i32.const -10
  i32.eq
  i32.eqz
  if
   i32.const 7864
   i32.const 2344
   i32.const 196
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 7976
  i32.const 1
  call $~lib/near-runtime-ts/storage/Storage#set<bool>
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 7976
  i32.const 0
  call $~lib/near-runtime-ts/storage/Storage#getPrimitive<bool>
  i32.const 0
  i32.ne
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 8008
   i32.const 2344
   i32.const 198
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 7072
  i32.const 1
  call $~lib/near-runtime-ts/storage/Storage#getPrimitive<bool>
  i32.const 0
  i32.ne
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 8104
   i32.const 2344
   i32.const 199
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 8224
  i32.const 8264
  call $~lib/near-runtime-ts/storage/Storage#set<~lib/string/String>
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 8224
  i32.const 0
  call $~lib/near-runtime-ts/storage/Storage#get<~lib/string/String>
  local.set $4
  local.get $4
  i32.const 8264
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 8304
   i32.const 2344
   i32.const 202
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 7072
  i32.const 0
  call $~lib/near-runtime-ts/storage/Storage#get<~lib/string/String>
  local.tee $5
  i32.const 0
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 8408
   i32.const 2344
   i32.const 203
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  local.get $3
  call $~lib/rt/pure/__release
  local.get $4
  call $~lib/rt/pure/__release
  local.get $5
  call $~lib/rt/pure/__release
 )
 (func $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/model/TextMessage>#constructor (; 283 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  i32.eqz
  if
   i32.const 4
   i32.const 31
   call $~lib/rt/tlsf/__alloc
   call $~lib/rt/pure/__retain
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  local.tee $3
  local.get $1
  global.get $~lib/near-runtime-ts/collections/index/collections._KEY_ELEMENT_SUFFIX
  call $~lib/string/String.__concat
  local.tee $2
  local.tee $4
  local.get $3
  i32.load
  local.tee $3
  i32.ne
  if
   local.get $4
   call $~lib/rt/pure/__retain
   drop
   local.get $3
   call $~lib/rt/pure/__release
  end
  local.get $4
  i32.store
  local.get $2
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $0
 )
 (func $~lib/string/String#toString (; 284 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  call $~lib/rt/pure/__retain
 )
 (func $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/model/TextMessage>#_key (; 285 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  i32.load
  local.get $1
  call $~lib/string/String#toString
  local.tee $2
  call $~lib/string/String.__concat
  local.tee $3
  call $~lib/rt/pure/__retain
  local.set $4
  local.get $2
  call $~lib/rt/pure/__release
  local.get $3
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $4
 )
 (func $~lib/array/Array<~lib/string/String>#slice (; 286 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  local.get $0
  i32.load offset=12
  local.set $3
  local.get $1
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $1
   local.get $3
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
  else   
   local.get $1
   local.tee $4
   local.get $3
   local.tee $5
   local.get $4
   local.get $5
   i32.lt_s
   select
  end
  local.set $1
  local.get $2
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $2
   local.get $3
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
  else   
   local.get $2
   local.tee $4
   local.get $3
   local.tee $5
   local.get $4
   local.get $5
   i32.lt_s
   select
  end
  local.set $2
  local.get $2
  local.get $1
  i32.sub
  local.tee $4
  i32.const 0
  local.tee $5
  local.get $4
  local.get $5
  i32.gt_s
  select
  local.set $3
  local.get $3
  i32.const 2
  i32.const 9
  i32.const 0
  call $~lib/rt/__allocArray
  call $~lib/rt/pure/__retain
  local.set $6
  local.get $6
  i32.load offset=4
  local.set $7
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.set $8
  i32.const 0
  local.set $4
  local.get $3
  i32.const 2
  i32.shl
  local.set $5
  block $break|0
   loop $continue|0
    local.get $4
    local.get $5
    i32.lt_u
    i32.eqz
    br_if $break|0
    local.get $8
    local.get $4
    i32.add
    i32.load
    local.set $9
    local.get $7
    local.get $4
    i32.add
    local.get $9
    call $~lib/rt/pure/__retain
    i32.store
    local.get $4
    i32.const 4
    i32.add
    local.set $4
    br $continue|0
   end
   unreachable
  end
  local.get $6
 )
 (func $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/model/TextMessage>#values~anonymous|0 (; 287 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  drop
  local.get $2
  call $~lib/rt/pure/__retain
  drop
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  i32.const 0
  call $~lib/near-runtime-ts/storage/Storage#get<assembly/model/TextMessage>
  local.tee $3
  local.set $4
  local.get $3
  call $~lib/rt/pure/__release
  local.get $0
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  local.get $4
 )
 (func $~lib/array/Array<~lib/string/String>#map<assembly/model/TextMessage> (; 288 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  i32.load offset=12
  local.set $2
  local.get $2
  i32.const 2
  i32.const 32
  i32.const 0
  call $~lib/rt/__allocArray
  call $~lib/rt/pure/__retain
  local.set $3
  local.get $3
  i32.load offset=4
  local.set $4
  block $break|0
   i32.const 0
   local.set $5
   loop $loop|0
    local.get $5
    local.get $2
    local.tee $6
    local.get $0
    i32.load offset=12
    local.tee $7
    local.get $6
    local.get $7
    i32.lt_s
    select
    i32.lt_s
    i32.eqz
    br_if $break|0
    i32.const 3
    global.set $~lib/argc
    local.get $0
    i32.load offset=4
    local.get $5
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.get $5
    local.get $0
    local.get $1
    call_indirect (type $FUNCSIG$iiii)
    local.tee $6
    call $~lib/rt/pure/__retain
    local.set $7
    local.get $4
    local.get $5
    i32.const 2
    i32.shl
    i32.add
    local.get $7
    call $~lib/rt/pure/__retain
    i32.store
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    local.get $6
    call $~lib/rt/pure/__release
    local.get $7
    call $~lib/rt/pure/__release
    br $loop|0
   end
   unreachable
  end
  local.get $3
 )
 (func $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/model/TextMessage>#values (; 289 ;) (type $FUNCSIG$iiiiii) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $2
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/model/TextMessage>#_key
  local.set $5
  local.get $0
  local.get $2
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/model/TextMessage>#_key
  local.set $6
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $5
  local.get $6
  local.get $3
  call $~lib/near-runtime-ts/storage/Storage#keyRange
  local.set $7
  local.get $7
  call $~lib/array/Array<~lib/string/String>#get:length
  i32.const 0
  i32.gt_s
  if (result i32)
   local.get $4
   i32.const 0
   i32.ne
   i32.eqz
  else   
   i32.const 0
  end
  if (result i32)
   local.get $7
   i32.const 0
   call $~lib/array/Array<~lib/string/String>#__get
   local.tee $8
   local.get $5
   call $~lib/string/String.__eq
   local.set $9
   local.get $8
   call $~lib/rt/pure/__release
   local.get $9
  else   
   i32.const 0
  end
  if (result i32)
   i32.const 1
  else   
   i32.const 0
  end
  local.set $8
  local.get $7
  local.get $8
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<~lib/string/String>#slice
  local.tee $9
  i32.const 1
  call $~lib/array/Array<~lib/string/String>#map<assembly/model/TextMessage>
  local.set $10
  local.get $5
  call $~lib/rt/pure/__release
  local.get $6
  call $~lib/rt/pure/__release
  local.get $7
  call $~lib/rt/pure/__release
  local.get $9
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  local.get $10
 )
 (func $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/model/TextMessage>#values|trampoline (; 290 ;) (type $FUNCSIG$iiiiii) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~lib/argc
      i32.const 2
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const -1
    local.set $3
   end
   i32.const 1
   local.set $4
  end
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  local.get $4
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/model/TextMessage>#values
 )
 (func $~lib/array/Array<assembly/model/TextMessage>#get:length (; 291 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  i32.load offset=12
 )
 (func $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/model/TextMessage>#contains (; 292 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/model/TextMessage>#_key
  local.tee $2
  call $~lib/near-runtime-ts/storage/Storage#contains
  local.set $3
  local.get $2
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $3
 )
 (func $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/model/TextMessage>#get (; 293 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $2
  call $~lib/rt/pure/__retain
  drop
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/model/TextMessage>#_key
  local.tee $3
  local.get $2
  call $~lib/near-runtime-ts/storage/Storage#get<assembly/model/TextMessage>
  local.set $4
  local.get $3
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  local.get $4
 )
 (func $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/model/TextMessage>#set (; 294 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $2
  call $~lib/rt/pure/__retain
  drop
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/model/TextMessage>#_key
  local.tee $3
  local.get $2
  call $~lib/near-runtime-ts/storage/Storage#set<assembly/model/TextMessage>
  local.get $3
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
 )
 (func $assembly/util/_testTextMessageTwo (; 295 ;) (type $FUNCSIG$i) (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  i32.const 0
  call $assembly/model/TextMessage#constructor
  local.set $0
  local.get $0
  local.tee $1
  i32.const 9000
  local.tee $2
  local.get $1
  i32.load
  local.tee $1
  i32.ne
  if
   local.get $2
   call $~lib/rt/pure/__retain
   drop
   local.get $1
   call $~lib/rt/pure/__release
  end
  local.get $2
  i32.store
  local.get $0
  local.tee $2
  i32.const 9024
  local.tee $1
  local.get $2
  i32.load offset=4
  local.tee $2
  i32.ne
  if
   local.get $1
   call $~lib/rt/pure/__retain
   drop
   local.get $2
   call $~lib/rt/pure/__release
  end
  local.get $1
  i32.store offset=4
  local.get $0
  i64.const 20
  i64.store offset=8
  local.get $0
 )
 (func $~lib/array/Array<assembly/model/TextMessage>#__unchecked_get (; 296 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  call $~lib/rt/pure/__retain
 )
 (func $~lib/array/Array<assembly/model/TextMessage>#__get (; 297 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 1040
   i32.const 1152
   i32.const 106
   i32.const 45
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  local.get $0
  i32.load offset=8
  i32.const 2
  i32.shr_u
  i32.ge_u
  if
   i32.const 704
   i32.const 1152
   i32.const 109
   i32.const 61
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $1
  call $~lib/array/Array<assembly/model/TextMessage>#__unchecked_get
 )
 (func $assembly/main/_modelObjectEqual (; 298 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  drop
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  i32.load
  local.get $1
  i32.load
  call $~lib/string/String.__ne
  if
   i32.const 0
   local.set $2
   local.get $0
   call $~lib/rt/pure/__release
   local.get $1
   call $~lib/rt/pure/__release
   local.get $2
   return
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.load offset=4
  call $~lib/string/String.__ne
  if
   i32.const 0
   local.set $2
   local.get $0
   call $~lib/rt/pure/__release
   local.get $1
   call $~lib/rt/pure/__release
   local.get $2
   return
  end
  local.get $0
  i64.load offset=8
  local.get $1
  i64.load offset=8
  i64.ne
  if
   i32.const 0
   local.set $2
   local.get $0
   call $~lib/rt/pure/__release
   local.get $1
   call $~lib/rt/pure/__release
   local.get $2
   return
  end
  i32.const 1
  local.set $2
  local.get $0
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
 )
 (func $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/model/TextMessage>#delete (; 299 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/model/TextMessage>#_key
  local.tee $2
  call $~lib/near-runtime-ts/storage/Storage#delete
  local.get $2
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
 )
 (func $assembly/main/mapTests (; 300 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  i32.const 8536
  call $~lib/near-runtime-ts/logging/logging.log
  i32.const 0
  i32.const 8568
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/model/TextMessage>#constructor
  local.set $0
  i32.const 2
  global.set $~lib/argc
  local.get $0
  i32.const 1024
  i32.const 8600
  i32.const 0
  i32.const 1
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/model/TextMessage>#values|trampoline
  local.set $1
  local.get $1
  call $~lib/array/Array<assembly/model/TextMessage>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 8624
   i32.const 2344
   i32.const 248
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 8704
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/model/TextMessage>#contains
  i32.eqz
  i32.eqz
  if
   i32.const 8752
   i32.const 2344
   i32.const 249
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 8704
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/model/TextMessage>#get
  local.tee $2
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 8832
   i32.const 2344
   i32.const 250
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  call $assembly/util/_testTextMessage
  local.set $3
  local.get $0
  i32.const 8936
  local.get $3
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/model/TextMessage>#set
  local.get $0
  i32.const 8968
  call $assembly/util/_testTextMessageTwo
  local.tee $4
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/model/TextMessage>#set
  i32.const 2
  global.set $~lib/argc
  local.get $0
  i32.const 1024
  i32.const 8600
  i32.const 0
  i32.const 1
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/model/TextMessage>#values|trampoline
  local.set $5
  local.get $5
  call $~lib/array/Array<assembly/model/TextMessage>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 9056
   i32.const 2344
   i32.const 255
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $5
  i32.const 0
  call $~lib/array/Array<assembly/model/TextMessage>#__get
  local.tee $6
  local.get $3
  call $assembly/main/_modelObjectEqual
  i32.eqz
  if
   i32.const 9160
   i32.const 2344
   i32.const 256
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $5
  i32.const 1
  call $~lib/array/Array<assembly/model/TextMessage>#__get
  local.tee $7
  call $assembly/util/_testTextMessageTwo
  local.tee $8
  call $assembly/main/_modelObjectEqual
  i32.eqz
  if
   i32.const 9160
   i32.const 2344
   i32.const 257
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 2
  global.set $~lib/argc
  local.get $0
  i32.const 8968
  i32.const 8600
  i32.const 0
  i32.const 1
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/model/TextMessage>#values|trampoline
  local.tee $9
  call $~lib/array/Array<assembly/model/TextMessage>#get:length
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 9056
   i32.const 2344
   i32.const 258
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 2
  global.set $~lib/argc
  local.get $0
  i32.const 8936
  i32.const 9272
  i32.const 0
  i32.const 1
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/model/TextMessage>#values|trampoline
  local.tee $10
  call $~lib/array/Array<assembly/model/TextMessage>#get:length
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 9056
   i32.const 2344
   i32.const 259
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 8936
  i32.const 9304
  i32.const -1
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/model/TextMessage>#values
  local.tee $11
  call $~lib/array/Array<assembly/model/TextMessage>#get:length
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 9056
   i32.const 2344
   i32.const 260
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 8704
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/model/TextMessage>#contains
  i32.eqz
  i32.eqz
  if
   i32.const 8752
   i32.const 2344
   i32.const 261
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 8936
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/model/TextMessage>#contains
  i32.eqz
  if
   i32.const 9336
   i32.const 2344
   i32.const 262
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 8968
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/model/TextMessage>#contains
  i32.eqz
  if
   i32.const 9456
   i32.const 2344
   i32.const 263
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 8936
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/model/TextMessage>#get
  local.tee $12
  local.get $3
  call $assembly/main/_modelObjectEqual
  i32.eqz
  if
   i32.const 9576
   i32.const 2344
   i32.const 264
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 8968
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/model/TextMessage>#get
  local.tee $13
  call $assembly/util/_testTextMessageTwo
  local.tee $14
  call $assembly/main/_modelObjectEqual
  i32.eqz
  if
   i32.const 9576
   i32.const 2344
   i32.const 265
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 8968
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/model/TextMessage>#delete
  i32.const 2
  global.set $~lib/argc
  local.get $0
  i32.const 1024
  i32.const 8600
  i32.const 0
  i32.const 1
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/model/TextMessage>#values|trampoline
  local.tee $15
  call $~lib/array/Array<assembly/model/TextMessage>#get:length
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 9656
   i32.const 2344
   i32.const 267
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 2
  global.set $~lib/argc
  local.get $0
  i32.const 1024
  i32.const 8600
  i32.const 0
  i32.const 1
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/model/TextMessage>#values|trampoline
  local.tee $16
  i32.const 0
  call $~lib/array/Array<assembly/model/TextMessage>#__get
  local.tee $17
  local.get $3
  call $assembly/main/_modelObjectEqual
  i32.eqz
  if
   i32.const 9760
   i32.const 2344
   i32.const 268
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 2
  global.set $~lib/argc
  local.get $0
  i32.const 8936
  i32.const 8600
  i32.const 0
  i32.const 1
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/model/TextMessage>#values|trampoline
  local.tee $18
  call $~lib/array/Array<assembly/model/TextMessage>#get:length
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 9656
   i32.const 2344
   i32.const 269
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 8968
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/model/TextMessage>#contains
  i32.eqz
  i32.eqz
  if
   i32.const 9872
   i32.const 2344
   i32.const 270
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 8936
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/model/TextMessage>#contains
  i32.eqz
  if
   i32.const 9960
   i32.const 2344
   i32.const 271
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 8936
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/model/TextMessage>#get
  local.tee $19
  local.get $3
  call $assembly/main/_modelObjectEqual
  i32.eqz
  if
   i32.const 10136
   i32.const 2344
   i32.const 272
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 8968
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/model/TextMessage>#get
  local.tee $20
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 10240
   i32.const 2344
   i32.const 273
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  local.get $3
  call $~lib/rt/pure/__release
  local.get $4
  call $~lib/rt/pure/__release
  local.get $5
  call $~lib/rt/pure/__release
  local.get $6
  call $~lib/rt/pure/__release
  local.get $7
  call $~lib/rt/pure/__release
  local.get $8
  call $~lib/rt/pure/__release
  local.get $9
  call $~lib/rt/pure/__release
  local.get $10
  call $~lib/rt/pure/__release
  local.get $11
  call $~lib/rt/pure/__release
  local.get $12
  call $~lib/rt/pure/__release
  local.get $13
  call $~lib/rt/pure/__release
  local.get $14
  call $~lib/rt/pure/__release
  local.get $15
  call $~lib/rt/pure/__release
  local.get $16
  call $~lib/rt/pure/__release
  local.get $17
  call $~lib/rt/pure/__release
  local.get $18
  call $~lib/rt/pure/__release
  local.get $19
  call $~lib/rt/pure/__release
  local.get $20
  call $~lib/rt/pure/__release
 )
 (func $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<i32,i32>#constructor (; 301 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  i32.eqz
  if
   i32.const 4
   i32.const 33
   call $~lib/rt/tlsf/__alloc
   call $~lib/rt/pure/__retain
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  local.tee $3
  local.get $1
  global.get $~lib/near-runtime-ts/collections/index/collections._KEY_ELEMENT_SUFFIX
  call $~lib/string/String.__concat
  local.tee $2
  local.tee $4
  local.get $3
  i32.load
  local.tee $3
  i32.ne
  if
   local.get $4
   call $~lib/rt/pure/__retain
   drop
   local.get $3
   call $~lib/rt/pure/__release
  end
  local.get $4
  i32.store
  local.get $2
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $0
 )
 (func $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<i32,i32>#_key (; 302 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  i32.load
  local.get $1
  call $~lib/number/I32#toString
  local.tee $2
  call $~lib/string/String.__concat
  local.tee $3
  call $~lib/rt/pure/__retain
  local.set $4
  local.get $2
  call $~lib/rt/pure/__release
  local.get $3
  call $~lib/rt/pure/__release
  local.get $4
 )
 (func $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<i32,i32>#set (; 303 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<i32,i32>#_key
  local.tee $3
  local.get $2
  call $~lib/near-runtime-ts/storage/Storage#set<i32>
  local.get $3
  call $~lib/rt/pure/__release
 )
 (func $~lib/near-runtime-ts/storage/Storage#getSome<i32> (; 304 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  local.set $3
  local.get $1
  call $~lib/rt/pure/__retain
  local.set $2
  local.get $3
  local.get $2
  call $~lib/near-runtime-ts/storage/Storage#contains
  local.set $4
  local.get $2
  call $~lib/rt/pure/__release
  local.get $4
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 10400
   i32.const 10488
   i32.const 175
   i32.const 4
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/storage/Storage#getString
  local.tee $3
  call $~lib/near-runtime-ts/util/util.parseFromString<i32>
  local.set $2
  local.get $3
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  return
 )
 (func $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<i32,i32>#getSome (; 305 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<i32,i32>#_key
  local.tee $2
  call $~lib/near-runtime-ts/storage/Storage#getSome<i32>
  local.set $3
  local.get $2
  call $~lib/rt/pure/__release
  local.get $3
 )
 (func $assembly/main/mapTestsWithPrimitices (; 306 ;) (type $FUNCSIG$v)
  (local $0 i32)
  i32.const 0
  i32.const 10352
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<i32,i32>#constructor
  local.set $0
  local.get $0
  i32.const 1
  i32.const -20
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<i32,i32>#set
  local.get $0
  i32.const 1
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<i32,i32>#getSome
  i32.const -20
  i32.eq
  i32.eqz
  if
   i32.const 10568
   i32.const 2344
   i32.const 278
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/rt/pure/__release
 )
 (func $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#constructor (; 307 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  i32.eqz
  if
   i32.const 12
   i32.const 34
   call $~lib/rt/tlsf/__alloc
   call $~lib/rt/pure/__retain
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=8
  local.get $0
  local.tee $3
  local.get $1
  global.get $~lib/near-runtime-ts/collections/index/collections._KEY_LENGTH_SUFFIX
  call $~lib/string/String.__concat
  local.tee $2
  local.tee $4
  local.get $3
  i32.load offset=4
  local.tee $3
  i32.ne
  if
   local.get $4
   call $~lib/rt/pure/__retain
   drop
   local.get $3
   call $~lib/rt/pure/__release
  end
  local.get $4
  i32.store offset=4
  local.get $0
  local.tee $3
  local.get $1
  global.get $~lib/near-runtime-ts/collections/index/collections._KEY_ELEMENT_SUFFIX
  call $~lib/string/String.__concat
  local.tee $4
  local.tee $5
  local.get $3
  i32.load
  local.tee $3
  i32.ne
  if
   local.get $5
   call $~lib/rt/pure/__retain
   drop
   local.get $3
   call $~lib/rt/pure/__release
  end
  local.get $5
  i32.store
  local.get $0
  i32.const -1
  i32.store offset=8
  local.get $2
  call $~lib/rt/pure/__release
  local.get $4
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $0
 )
 (func $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:length (; 308 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  i32.load offset=8
  i32.const 0
  i32.lt_s
  if
   local.get $0
   global.get $~lib/near-runtime-ts/storage/storage
   local.get $0
   i32.load offset=4
   i32.const 0
   call $~lib/near-runtime-ts/storage/Storage#getPrimitive<i32>
   i32.store offset=8
  end
  local.get $0
  i32.load offset=8
 )
 (func $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#containsIndex (; 309 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  i32.const 0
  i32.ge_s
  if (result i32)
   local.get $1
   local.get $0
   call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
   i32.lt_s
  else   
   i32.const 0
  end
 )
 (func $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:isEmpty (; 310 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
  i32.const 0
  i32.eq
 )
 (func $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#set:length (; 311 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=8
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/near-runtime-ts/storage/Storage#set<i32>
 )
 (func $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#__unchecked_set (; 312 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $2
  call $~lib/rt/pure/__retain
  drop
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  local.set $4
  local.get $1
  local.set $3
  local.get $4
  i32.load
  local.get $3
  call $~lib/number/I32#toString
  local.tee $5
  call $~lib/string/String.__concat
  local.tee $6
  call $~lib/rt/pure/__retain
  local.set $7
  local.get $5
  call $~lib/rt/pure/__release
  local.get $6
  call $~lib/rt/pure/__release
  local.get $7
  local.tee $6
  local.get $2
  call $~lib/near-runtime-ts/storage/Storage#set<~lib/string/String>
  local.get $6
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
 )
 (func $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#push (; 313 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
  local.set $2
  local.get $0
  local.get $2
  i32.const 1
  i32.add
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#set:length
  local.get $0
  local.get $2
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#__unchecked_set
  local.get $2
  local.set $3
  local.get $1
  call $~lib/rt/pure/__release
  local.get $3
 )
 (func $~lib/near-runtime-ts/storage/Storage#getSome<~lib/string/String> (; 314 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  local.set $3
  local.get $1
  call $~lib/rt/pure/__retain
  local.set $2
  local.get $3
  local.get $2
  call $~lib/near-runtime-ts/storage/Storage#contains
  local.set $4
  local.get $2
  call $~lib/rt/pure/__release
  local.get $4
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 10400
   i32.const 10488
   i32.const 175
   i32.const 4
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/storage/Storage#getString
  local.tee $3
  call $~lib/near-runtime-ts/util/util.parseFromString<~lib/string/String>
  local.set $2
  local.get $3
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  return
 )
 (func $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#__unchecked_get (; 315 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  local.set $3
  local.get $1
  local.set $2
  local.get $3
  i32.load
  local.get $2
  call $~lib/number/I32#toString
  local.tee $4
  call $~lib/string/String.__concat
  local.tee $5
  call $~lib/rt/pure/__retain
  local.set $6
  local.get $4
  call $~lib/rt/pure/__release
  local.get $5
  call $~lib/rt/pure/__release
  local.get $6
  local.tee $5
  call $~lib/near-runtime-ts/storage/Storage#getSome<~lib/string/String>
  local.set $4
  local.get $5
  call $~lib/rt/pure/__release
  local.get $4
 )
 (func $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#__get (; 316 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#containsIndex
  i32.eqz
  if
   i32.const 704
   i32.const 11432
   i32.const 73
   i32.const 4
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#__unchecked_get
 )
 (func $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:back (; 317 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
  i32.const 1
  i32.sub
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#__get
 )
 (func $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:front (; 318 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#__get
 )
 (func $assembly/main/_vectorHasContents (; 319 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  drop
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
  local.get $1
  call $~lib/array/Array<~lib/string/String>#get:length
  i32.ne
  if
   i32.const 0
   local.set $2
   local.get $0
   call $~lib/rt/pure/__release
   local.get $1
   call $~lib/rt/pure/__release
   local.get $2
   return
  end
  block $break|0
   i32.const 0
   local.set $2
   loop $loop|0
    local.get $2
    local.get $1
    call $~lib/array/Array<~lib/string/String>#get:length
    i32.lt_s
    i32.eqz
    br_if $break|0
    local.get $1
    local.get $2
    call $~lib/array/Array<~lib/string/String>#__get
    local.tee $3
    local.get $0
    local.get $2
    call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#__get
    local.tee $4
    call $~lib/string/String.__ne
    if
     i32.const 11888
     local.get $1
     local.get $2
     call $~lib/array/Array<~lib/string/String>#__get
     local.tee $5
     call $~lib/string/String.__concat
     local.tee $6
     i32.const 1200
     call $~lib/string/String.__concat
     local.tee $7
     local.get $0
     local.get $2
     call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#__get
     local.tee $8
     call $~lib/string/String.__concat
     local.tee $9
     call $~lib/near-runtime-ts/logging/logging.log
     local.get $5
     call $~lib/rt/pure/__release
     local.get $6
     call $~lib/rt/pure/__release
     local.get $7
     call $~lib/rt/pure/__release
     local.get $8
     call $~lib/rt/pure/__release
     local.get $9
     call $~lib/rt/pure/__release
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    local.get $3
    call $~lib/rt/pure/__release
    local.get $4
    call $~lib/rt/pure/__release
    br $loop|0
   end
   unreachable
  end
  i32.const 1
  local.set $4
  local.get $0
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $4
 )
 (func $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#__set (; 320 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $2
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#containsIndex
  i32.eqz
  if
   i32.const 704
   i32.const 11432
   i32.const 95
   i32.const 4
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $1
  local.get $2
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#__unchecked_set
  local.get $2
  call $~lib/rt/pure/__release
 )
 (func $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#pop (; 321 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
  i32.const 0
  i32.gt_s
  i32.eqz
  if
   i32.const 12864
   i32.const 11432
   i32.const 137
   i32.const 4
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
  i32.const 1
  i32.sub
  local.set $1
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#set:length
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#__unchecked_get
  local.set $2
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  local.set $4
  local.get $1
  local.set $3
  local.get $4
  i32.load
  local.get $3
  call $~lib/number/I32#toString
  local.tee $5
  call $~lib/string/String.__concat
  local.tee $6
  call $~lib/rt/pure/__retain
  local.set $7
  local.get $5
  call $~lib/rt/pure/__release
  local.get $6
  call $~lib/rt/pure/__release
  local.get $7
  local.tee $6
  call $~lib/near-runtime-ts/storage/Storage#delete
  local.get $2
  local.set $5
  local.get $6
  call $~lib/rt/pure/__release
  local.get $5
 )
 (func $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<i32>#constructor (; 322 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  i32.eqz
  if
   i32.const 12
   i32.const 35
   call $~lib/rt/tlsf/__alloc
   call $~lib/rt/pure/__retain
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=8
  local.get $0
  local.tee $3
  local.get $1
  global.get $~lib/near-runtime-ts/collections/index/collections._KEY_LENGTH_SUFFIX
  call $~lib/string/String.__concat
  local.tee $2
  local.tee $4
  local.get $3
  i32.load offset=4
  local.tee $3
  i32.ne
  if
   local.get $4
   call $~lib/rt/pure/__retain
   drop
   local.get $3
   call $~lib/rt/pure/__release
  end
  local.get $4
  i32.store offset=4
  local.get $0
  local.tee $3
  local.get $1
  global.get $~lib/near-runtime-ts/collections/index/collections._KEY_ELEMENT_SUFFIX
  call $~lib/string/String.__concat
  local.tee $4
  local.tee $5
  local.get $3
  i32.load
  local.tee $3
  i32.ne
  if
   local.get $5
   call $~lib/rt/pure/__retain
   drop
   local.get $3
   call $~lib/rt/pure/__release
  end
  local.get $5
  i32.store
  local.get $0
  i32.const -1
  i32.store offset=8
  local.get $2
  call $~lib/rt/pure/__release
  local.get $4
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $0
 )
 (func $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<i32>#get:length (; 323 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  i32.load offset=8
  i32.const 0
  i32.lt_s
  if
   local.get $0
   global.get $~lib/near-runtime-ts/storage/storage
   local.get $0
   i32.load offset=4
   i32.const 0
   call $~lib/near-runtime-ts/storage/Storage#getPrimitive<i32>
   i32.store offset=8
  end
  local.get $0
  i32.load offset=8
 )
 (func $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<i32>#set:length (; 324 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=8
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/near-runtime-ts/storage/Storage#set<i32>
 )
 (func $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<i32>#__unchecked_set (; 325 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  local.set $4
  local.get $1
  local.set $3
  local.get $4
  i32.load
  local.get $3
  call $~lib/number/I32#toString
  local.tee $5
  call $~lib/string/String.__concat
  local.tee $6
  call $~lib/rt/pure/__retain
  local.set $7
  local.get $5
  call $~lib/rt/pure/__release
  local.get $6
  call $~lib/rt/pure/__release
  local.get $7
  local.tee $6
  local.get $2
  call $~lib/near-runtime-ts/storage/Storage#set<i32>
  local.get $6
  call $~lib/rt/pure/__release
 )
 (func $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<i32>#push (; 326 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<i32>#get:length
  local.set $2
  local.get $0
  local.get $2
  i32.const 1
  i32.add
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<i32>#set:length
  local.get $0
  local.get $2
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<i32>#__unchecked_set
  local.get $2
 )
 (func $assembly/main/vectorTests (; 327 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  i32.const 10648
  call $~lib/near-runtime-ts/logging/logging.log
  i32.const 0
  i32.const 10688
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#constructor
  local.set $0
  local.get $0
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 10720
   i32.const 2344
   i32.const 283
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 10784
   i32.const 2344
   i32.const 284
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#containsIndex
  i32.eqz
  i32.eqz
  if
   i32.const 10872
   i32.const 2344
   i32.const 285
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:isEmpty
  i32.eqz
  if
   i32.const 10960
   i32.const 2344
   i32.const 286
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 11048
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#push
  drop
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 11072
   i32.const 2344
   i32.const 288
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#containsIndex
  i32.eqz
  if
   i32.const 11144
   i32.const 2344
   i32.const 289
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 1
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#containsIndex
  i32.eqz
  i32.eqz
  if
   i32.const 11240
   i32.const 2344
   i32.const 290
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:isEmpty
  i32.eqz
  i32.eqz
  if
   i32.const 11336
   i32.const 2344
   i32.const 291
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:back
  local.tee $1
  i32.const 11048
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 11552
   i32.const 2344
   i32.const 292
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.set $2
  local.get $2
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:back
  local.tee $3
  call $~lib/rt/pure/__retain
  local.set $4
  local.get $3
  call $~lib/rt/pure/__release
  local.get $4
  local.tee $3
  i32.const 11048
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 11608
   i32.const 2344
   i32.const 293
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:front
  local.tee $2
  i32.const 11048
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 11664
   i32.const 2344
   i32.const 294
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.set $4
  local.get $4
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:front
  local.tee $5
  call $~lib/rt/pure/__retain
  local.set $6
  local.get $5
  call $~lib/rt/pure/__release
  local.get $6
  local.tee $5
  i32.const 11048
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 11728
   i32.const 2344
   i32.const 295
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#__get
  local.tee $4
  i32.const 11048
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 11792
   i32.const 2344
   i32.const 296
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 1
  i32.const 2
  i32.const 9
  i32.const 11864
  call $~lib/rt/__allocArray
  call $~lib/rt/pure/__retain
  local.tee $7
  call $assembly/main/_vectorHasContents
  i32.eqz
  if
   i32.const 11920
   i32.const 2344
   i32.const 297
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.set $8
  i32.const 12024
  call $~lib/rt/pure/__retain
  local.set $6
  local.get $8
  local.get $6
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#push
  local.set $9
  local.get $6
  call $~lib/rt/pure/__release
  local.get $9
  drop
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 11072
   i32.const 2344
   i32.const 299
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#containsIndex
  i32.eqz
  if
   i32.const 11144
   i32.const 2344
   i32.const 300
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 1
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#containsIndex
  i32.eqz
  if
   i32.const 12048
   i32.const 2344
   i32.const 301
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 2
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#containsIndex
  i32.eqz
  i32.eqz
  if
   i32.const 12136
   i32.const 2344
   i32.const 302
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:isEmpty
  i32.eqz
  i32.eqz
  if
   i32.const 11336
   i32.const 2344
   i32.const 303
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 2
  i32.const 2
  i32.const 9
  i32.const 12232
  call $~lib/rt/__allocArray
  call $~lib/rt/pure/__retain
  local.tee $6
  call $assembly/main/_vectorHasContents
  i32.eqz
  if
   i32.const 12256
   i32.const 2344
   i32.const 304
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 1
  i32.const 12368
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#__set
  local.get $0
  i32.const 2
  i32.const 2
  i32.const 9
  i32.const 12392
  call $~lib/rt/__allocArray
  call $~lib/rt/pure/__retain
  local.tee $9
  call $assembly/main/_vectorHasContents
  i32.eqz
  if
   i32.const 12416
   i32.const 2344
   i32.const 306
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 0
  i32.const 12528
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#__set
  local.get $0
  i32.const 2
  i32.const 2
  i32.const 9
  i32.const 12552
  call $~lib/rt/__allocArray
  call $~lib/rt/pure/__retain
  local.tee $10
  call $assembly/main/_vectorHasContents
  i32.eqz
  if
   i32.const 12576
   i32.const 2344
   i32.const 308
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 11072
   i32.const 2344
   i32.const 309
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.set $11
  i32.const 12688
  call $~lib/rt/pure/__retain
  local.set $8
  local.get $11
  local.get $8
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#push
  local.set $12
  local.get $8
  call $~lib/rt/pure/__release
  local.get $12
  drop
  local.get $0
  i32.const 3
  i32.const 2
  i32.const 9
  i32.const 12712
  call $~lib/rt/__allocArray
  call $~lib/rt/pure/__retain
  local.tee $8
  call $assembly/main/_vectorHasContents
  i32.eqz
  if
   i32.const 12744
   i32.const 2344
   i32.const 311
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 11072
   i32.const 2344
   i32.const 312
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:back
  local.tee $11
  i32.const 12688
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 11552
   i32.const 2344
   i32.const 313
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.set $12
  local.get $12
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:back
  local.tee $13
  call $~lib/rt/pure/__retain
  local.set $14
  local.get $13
  call $~lib/rt/pure/__release
  local.get $14
  local.tee $13
  i32.const 12688
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 11608
   i32.const 2344
   i32.const 314
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:front
  local.tee $12
  i32.const 12528
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 11664
   i32.const 2344
   i32.const 315
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.set $14
  local.get $14
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:front
  local.tee $15
  call $~lib/rt/pure/__retain
  local.set $16
  local.get $15
  call $~lib/rt/pure/__release
  local.get $16
  local.tee $15
  i32.const 12528
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 11728
   i32.const 2344
   i32.const 316
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#pop
  call $~lib/rt/pure/__release
  local.get $0
  i32.const 2
  i32.const 2
  i32.const 9
  i32.const 12912
  call $~lib/rt/__allocArray
  call $~lib/rt/pure/__retain
  local.tee $16
  call $assembly/main/_vectorHasContents
  i32.eqz
  if
   i32.const 12576
   i32.const 2344
   i32.const 318
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 12936
   i32.const 2344
   i32.const 319
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 0
  i32.const 13032
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#__set
  local.get $0
  i32.const 2
  i32.const 2
  i32.const 9
  i32.const 13056
  call $~lib/rt/__allocArray
  call $~lib/rt/pure/__retain
  local.tee $17
  call $assembly/main/_vectorHasContents
  i32.eqz
  if
   i32.const 12416
   i32.const 2344
   i32.const 321
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 11072
   i32.const 2344
   i32.const 322
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.set $18
  i32.const 13080
  call $~lib/rt/pure/__retain
  local.set $14
  local.get $18
  local.get $14
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#push
  local.set $19
  local.get $14
  call $~lib/rt/pure/__release
  local.get $19
  drop
  local.get $0
  i32.const 3
  i32.const 2
  i32.const 9
  i32.const 13104
  call $~lib/rt/__allocArray
  call $~lib/rt/pure/__retain
  local.tee $14
  call $assembly/main/_vectorHasContents
  i32.eqz
  if
   i32.const 13136
   i32.const 2344
   i32.const 324
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 11072
   i32.const 2344
   i32.const 325
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.set $19
  local.get $19
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#pop
  call $~lib/rt/pure/__release
  local.get $0
  i32.const 2
  i32.const 2
  i32.const 9
  i32.const 13256
  call $~lib/rt/__allocArray
  call $~lib/rt/pure/__retain
  local.tee $18
  call $assembly/main/_vectorHasContents
  i32.eqz
  if
   i32.const 12416
   i32.const 2344
   i32.const 327
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 11072
   i32.const 2344
   i32.const 328
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 0
  i32.const 10688
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#constructor
  local.set $19
  local.get $19
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 10720
   i32.const 2344
   i32.const 330
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $19
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 11072
   i32.const 2344
   i32.const 331
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 0
  i32.const 13280
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<i32>#constructor
  local.set $20
  local.get $20
  local.set $22
  i32.const 2
  local.set $21
  local.get $22
  local.get $21
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<i32>#push
  drop
  local.get $20
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<i32>#get:length
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 13320
   i32.const 2344
   i32.const 334
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $3
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  local.get $5
  call $~lib/rt/pure/__release
  local.get $4
  call $~lib/rt/pure/__release
  local.get $7
  call $~lib/rt/pure/__release
  local.get $6
  call $~lib/rt/pure/__release
  local.get $9
  call $~lib/rt/pure/__release
  local.get $10
  call $~lib/rt/pure/__release
  local.get $8
  call $~lib/rt/pure/__release
  local.get $11
  call $~lib/rt/pure/__release
  local.get $13
  call $~lib/rt/pure/__release
  local.get $12
  call $~lib/rt/pure/__release
  local.get $15
  call $~lib/rt/pure/__release
  local.get $16
  call $~lib/rt/pure/__release
  local.get $17
  call $~lib/rt/pure/__release
  local.get $14
  call $~lib/rt/pure/__release
  local.get $18
  call $~lib/rt/pure/__release
  local.get $19
  call $~lib/rt/pure/__release
  local.get $20
  call $~lib/rt/pure/__release
 )
 (func $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#constructor (; 328 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  i32.eqz
  if
   i32.const 20
   i32.const 36
   call $~lib/rt/tlsf/__alloc
   call $~lib/rt/pure/__retain
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=8
  local.get $0
  i32.const 0
  i32.store offset=12
  local.get $0
  i32.const 0
  i32.store offset=16
  local.get $0
  local.tee $3
  local.get $1
  global.get $~lib/near-runtime-ts/collections/index/collections._KEY_ELEMENT_SUFFIX
  call $~lib/string/String.__concat
  local.tee $2
  local.tee $4
  local.get $3
  i32.load
  local.tee $3
  i32.ne
  if
   local.get $4
   call $~lib/rt/pure/__retain
   drop
   local.get $3
   call $~lib/rt/pure/__release
  end
  local.get $4
  i32.store
  local.get $0
  local.tee $3
  local.get $1
  global.get $~lib/near-runtime-ts/collections/index/collections._KEY_FRONT_INDEX_SUFFIX
  call $~lib/string/String.__concat
  local.tee $4
  local.tee $5
  local.get $3
  i32.load offset=4
  local.tee $3
  i32.ne
  if
   local.get $5
   call $~lib/rt/pure/__retain
   drop
   local.get $3
   call $~lib/rt/pure/__release
  end
  local.get $5
  i32.store offset=4
  local.get $0
  local.tee $3
  local.get $1
  global.get $~lib/near-runtime-ts/collections/index/collections._KEY_BACK_INDEX_SUFFIX
  call $~lib/string/String.__concat
  local.tee $5
  local.tee $6
  local.get $3
  i32.load offset=8
  local.tee $3
  i32.ne
  if
   local.get $6
   call $~lib/rt/pure/__retain
   drop
   local.get $3
   call $~lib/rt/pure/__release
  end
  local.get $6
  i32.store offset=8
  local.get $0
  global.get $~lib/builtins/i32.MIN_VALUE
  i32.store offset=12
  local.get $0
  global.get $~lib/builtins/i32.MAX_VALUE
  i32.store offset=16
  local.get $2
  call $~lib/rt/pure/__release
  local.get $4
  call $~lib/rt/pure/__release
  local.get $5
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $0
 )
 (func $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:backIndex (; 329 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  i32.load offset=16
  i32.const 2147483647
  i32.eq
  if
   local.get $0
   global.get $~lib/near-runtime-ts/storage/storage
   local.get $0
   i32.load offset=8
   i32.const -1
   call $~lib/near-runtime-ts/storage/Storage#getPrimitive<i32>
   i32.store offset=16
  end
  local.get $0
  i32.load offset=16
 )
 (func $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:frontIndex (; 330 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  i32.load offset=12
  i32.const -2147483648
  i32.eq
  if
   local.get $0
   global.get $~lib/near-runtime-ts/storage/storage
   local.get $0
   i32.load offset=4
   i32.const 0
   call $~lib/near-runtime-ts/storage/Storage#getPrimitive<i32>
   i32.store offset=12
  end
  local.get $0
  i32.load offset=12
 )
 (func $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:length (; 331 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:backIndex
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:frontIndex
  i32.sub
  i32.const 1
  i32.add
 )
 (func $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#containsIndex (; 332 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  i32.const 0
  i32.ge_s
  if (result i32)
   local.get $1
   local.get $0
   call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:length
   i32.lt_s
  else   
   i32.const 0
  end
 )
 (func $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:isEmpty (; 333 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:length
  i32.const 0
  i32.eq
 )
 (func $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#set:backIndex (; 334 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=16
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  i32.load offset=8
  local.get $1
  call $~lib/near-runtime-ts/storage/Storage#set<i32>
 )
 (func $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#__unchecked_set (; 335 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $2
  call $~lib/rt/pure/__retain
  drop
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  local.set $4
  local.get $1
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:frontIndex
  i32.add
  local.set $3
  local.get $4
  i32.load
  local.get $3
  call $~lib/number/I32#toString
  local.tee $5
  call $~lib/string/String.__concat
  local.tee $6
  call $~lib/rt/pure/__retain
  local.set $7
  local.get $5
  call $~lib/rt/pure/__release
  local.get $6
  call $~lib/rt/pure/__release
  local.get $7
  local.tee $6
  local.get $2
  call $~lib/near-runtime-ts/storage/Storage#set<~lib/string/String>
  local.get $6
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
 )
 (func $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#pushBack (; 336 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:length
  local.set $2
  local.get $0
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:backIndex
  i32.const 1
  i32.add
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#set:backIndex
  local.get $0
  local.get $2
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#__unchecked_set
  local.get $2
  local.set $3
  local.get $1
  call $~lib/rt/pure/__release
  local.get $3
 )
 (func $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#__unchecked_get (; 337 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  local.set $3
  local.get $1
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:frontIndex
  i32.add
  local.set $2
  local.get $3
  i32.load
  local.get $2
  call $~lib/number/I32#toString
  local.tee $4
  call $~lib/string/String.__concat
  local.tee $5
  call $~lib/rt/pure/__retain
  local.set $6
  local.get $4
  call $~lib/rt/pure/__release
  local.get $5
  call $~lib/rt/pure/__release
  local.get $6
  local.tee $5
  call $~lib/near-runtime-ts/storage/Storage#getSome<~lib/string/String>
  local.set $4
  local.get $5
  call $~lib/rt/pure/__release
  local.get $4
 )
 (func $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#__get (; 338 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#containsIndex
  i32.eqz
  if
   i32.const 704
   i32.const 13960
   i32.const 101
   i32.const 4
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#__unchecked_get
 )
 (func $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:back (; 339 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:length
  i32.const 1
  i32.sub
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#__get
 )
 (func $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:front (; 340 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#__get
 )
 (func $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#set:frontIndex (; 341 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=12
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/near-runtime-ts/storage/Storage#set<i32>
 )
 (func $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#pushFront (; 342 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:frontIndex
  i32.const 1
  i32.sub
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#set:frontIndex
  local.get $0
  i32.const 0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#__unchecked_set
  i32.const 0
  local.set $2
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
 )
 (func $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#popFront (; 343 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:length
  i32.const 0
  i32.gt_s
  i32.eqz
  if
   i32.const 14480
   i32.const 13960
   i32.const 154
   i32.const 4
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#__unchecked_get
  local.set $1
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  local.set $3
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:frontIndex
  local.set $2
  local.get $3
  i32.load
  local.get $2
  call $~lib/number/I32#toString
  local.tee $4
  call $~lib/string/String.__concat
  local.tee $5
  call $~lib/rt/pure/__retain
  local.set $6
  local.get $4
  call $~lib/rt/pure/__release
  local.get $5
  call $~lib/rt/pure/__release
  local.get $6
  local.tee $5
  call $~lib/near-runtime-ts/storage/Storage#delete
  local.get $0
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:frontIndex
  i32.const 1
  i32.add
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#set:frontIndex
  local.get $1
  local.set $4
  local.get $5
  call $~lib/rt/pure/__release
  local.get $4
 )
 (func $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#popBack (; 344 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:length
  i32.const 1
  i32.sub
  local.set $1
  local.get $1
  i32.const 0
  i32.ge_s
  i32.eqz
  if
   i32.const 14480
   i32.const 13960
   i32.const 195
   i32.const 4
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#__unchecked_get
  local.set $2
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  local.set $4
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:backIndex
  local.set $3
  local.get $4
  i32.load
  local.get $3
  call $~lib/number/I32#toString
  local.tee $5
  call $~lib/string/String.__concat
  local.tee $6
  call $~lib/rt/pure/__retain
  local.set $7
  local.get $5
  call $~lib/rt/pure/__release
  local.get $6
  call $~lib/rt/pure/__release
  local.get $7
  local.tee $6
  call $~lib/near-runtime-ts/storage/Storage#delete
  local.get $0
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:backIndex
  i32.const 1
  i32.sub
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#set:backIndex
  local.get $2
  local.set $5
  local.get $6
  call $~lib/rt/pure/__release
  local.get $5
 )
 (func $assembly/main/dequeTests (; 345 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  i32.const 13400
  call $~lib/near-runtime-ts/logging/logging.log
  i32.const 0
  i32.const 13440
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#constructor
  local.set $0
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 13472
   i32.const 2344
   i32.const 339
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#containsIndex
  i32.eqz
  i32.eqz
  if
   i32.const 13544
   i32.const 2344
   i32.const 340
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:isEmpty
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 13616
   i32.const 2344
   i32.const 341
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 13712
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#pushBack
  drop
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:length
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 13736
   i32.const 2344
   i32.const 343
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#containsIndex
  i32.eqz
  if
   i32.const 13800
   i32.const 2344
   i32.const 344
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const -1
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#containsIndex
  i32.eqz
  i32.eqz
  if
   i32.const 13800
   i32.const 2344
   i32.const 345
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:isEmpty
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 13880
   i32.const 2344
   i32.const 346
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#__get
  local.tee $1
  i32.const 13712
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 14080
   i32.const 2344
   i32.const 347
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:back
  local.tee $2
  i32.const 13712
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 14152
   i32.const 2344
   i32.const 348
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:front
  local.tee $3
  i32.const 13712
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 14208
   i32.const 2344
   i32.const 349
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.set $4
  local.get $4
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:front
  local.tee $5
  call $~lib/rt/pure/__retain
  local.set $6
  local.get $5
  call $~lib/rt/pure/__release
  local.get $6
  local.tee $5
  i32.const 13712
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 14264
   i32.const 2344
   i32.const 350
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.set $6
  local.get $6
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:back
  local.tee $4
  call $~lib/rt/pure/__retain
  local.set $7
  local.get $4
  call $~lib/rt/pure/__release
  local.get $7
  local.tee $4
  i32.const 13712
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 14320
   i32.const 2344
   i32.const 351
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 14376
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#pushFront
  drop
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 13736
   i32.const 2344
   i32.const 353
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#containsIndex
  i32.eqz
  if
   i32.const 13800
   i32.const 2344
   i32.const 354
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 1
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#containsIndex
  i32.eqz
  if
   i32.const 14400
   i32.const 2344
   i32.const 355
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:isEmpty
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 13880
   i32.const 2344
   i32.const 356
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 1
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#__get
  local.tee $6
  i32.const 13712
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 14080
   i32.const 2344
   i32.const 357
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#__get
  local.tee $7
  i32.const 14376
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 14080
   i32.const 2344
   i32.const 358
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:back
  local.tee $8
  i32.const 13712
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 14152
   i32.const 2344
   i32.const 359
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:front
  local.tee $9
  i32.const 14376
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 14208
   i32.const 2344
   i32.const 360
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.set $10
  local.get $10
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:front
  local.tee $11
  call $~lib/rt/pure/__retain
  local.set $12
  local.get $11
  call $~lib/rt/pure/__release
  local.get $12
  local.tee $11
  i32.const 14376
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 14264
   i32.const 2344
   i32.const 361
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.set $12
  local.get $12
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:back
  local.tee $10
  call $~lib/rt/pure/__retain
  local.set $13
  local.get $10
  call $~lib/rt/pure/__release
  local.get $13
  local.tee $10
  i32.const 13712
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 14320
   i32.const 2344
   i32.const 362
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#popFront
  call $~lib/rt/pure/__release
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:length
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 13736
   i32.const 2344
   i32.const 364
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#containsIndex
  i32.eqz
  if
   i32.const 13800
   i32.const 2344
   i32.const 365
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 1
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#containsIndex
  i32.eqz
  i32.eqz
  if
   i32.const 14528
   i32.const 2344
   i32.const 366
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:isEmpty
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 13880
   i32.const 2344
   i32.const 367
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#__get
  local.tee $12
  i32.const 13712
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 14080
   i32.const 2344
   i32.const 368
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:back
  local.tee $13
  i32.const 13712
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 14152
   i32.const 2344
   i32.const 369
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:front
  local.tee $14
  i32.const 13712
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 14208
   i32.const 2344
   i32.const 370
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.set $15
  local.get $15
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:front
  local.tee $16
  call $~lib/rt/pure/__retain
  local.set $17
  local.get $16
  call $~lib/rt/pure/__release
  local.get $17
  local.tee $16
  i32.const 13712
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 14264
   i32.const 2344
   i32.const 371
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.set $17
  local.get $17
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:back
  local.tee $15
  call $~lib/rt/pure/__retain
  local.set $18
  local.get $15
  call $~lib/rt/pure/__release
  local.get $18
  local.tee $15
  i32.const 13712
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 14320
   i32.const 2344
   i32.const 372
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 14376
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#pushFront
  drop
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#popBack
  call $~lib/rt/pure/__release
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:length
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 13736
   i32.const 2344
   i32.const 375
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#containsIndex
  i32.eqz
  if
   i32.const 13800
   i32.const 2344
   i32.const 376
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 1
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#containsIndex
  i32.eqz
  i32.eqz
  if
   i32.const 14528
   i32.const 2344
   i32.const 377
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:isEmpty
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 13880
   i32.const 2344
   i32.const 378
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#__get
  local.tee $17
  i32.const 14376
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 14080
   i32.const 2344
   i32.const 379
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:back
  local.tee $18
  i32.const 14376
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 14152
   i32.const 2344
   i32.const 380
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:front
  local.tee $19
  i32.const 14376
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 14208
   i32.const 2344
   i32.const 381
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.set $20
  local.get $20
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:front
  local.tee $21
  call $~lib/rt/pure/__retain
  local.set $22
  local.get $21
  call $~lib/rt/pure/__release
  local.get $22
  local.tee $21
  i32.const 14376
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 14264
   i32.const 2344
   i32.const 382
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.set $22
  local.get $22
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:back
  local.tee $20
  call $~lib/rt/pure/__retain
  local.set $23
  local.get $20
  call $~lib/rt/pure/__release
  local.get $23
  local.tee $20
  i32.const 14376
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 14320
   i32.const 2344
   i32.const 383
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  local.get $3
  call $~lib/rt/pure/__release
  local.get $5
  call $~lib/rt/pure/__release
  local.get $4
  call $~lib/rt/pure/__release
  local.get $6
  call $~lib/rt/pure/__release
  local.get $7
  call $~lib/rt/pure/__release
  local.get $8
  call $~lib/rt/pure/__release
  local.get $9
  call $~lib/rt/pure/__release
  local.get $11
  call $~lib/rt/pure/__release
  local.get $10
  call $~lib/rt/pure/__release
  local.get $12
  call $~lib/rt/pure/__release
  local.get $13
  call $~lib/rt/pure/__release
  local.get $14
  call $~lib/rt/pure/__release
  local.get $16
  call $~lib/rt/pure/__release
  local.get $15
  call $~lib/rt/pure/__release
  local.get $17
  call $~lib/rt/pure/__release
  local.get $18
  call $~lib/rt/pure/__release
  local.get $19
  call $~lib/rt/pure/__release
  local.get $21
  call $~lib/rt/pure/__release
  local.get $20
  call $~lib/rt/pure/__release
 )
 (func $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,i32>#constructor (; 346 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  i32.eqz
  if
   i32.const 4
   i32.const 38
   call $~lib/rt/tlsf/__alloc
   call $~lib/rt/pure/__retain
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  local.tee $3
  local.get $1
  global.get $~lib/near-runtime-ts/collections/index/collections._KEY_ELEMENT_SUFFIX
  call $~lib/string/String.__concat
  local.tee $2
  local.tee $4
  local.get $3
  i32.load
  local.tee $3
  i32.ne
  if
   local.get $4
   call $~lib/rt/pure/__retain
   drop
   local.get $3
   call $~lib/rt/pure/__release
  end
  local.get $4
  i32.store
  local.get $2
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $0
 )
 (func $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#constructor (; 347 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  i32.eqz
  if
   i32.const 20
   i32.const 37
   call $~lib/rt/tlsf/__alloc
   call $~lib/rt/pure/__retain
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store8 offset=4
  local.get $0
  i32.const 0
  i32.store offset=8
  local.get $0
  i32.const 0
  i32.store offset=12
  local.get $0
  i32.const 0
  i32.store offset=16
  local.get $0
  local.tee $4
  i32.const 0
  local.get $1
  global.get $~lib/near-runtime-ts/collections/index/collections._KEY_RATING_SUFFIX
  call $~lib/string/String.__concat
  local.tee $3
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,i32>#constructor
  local.set $5
  local.get $4
  i32.load offset=16
  call $~lib/rt/pure/__release
  local.get $5
  i32.store offset=16
  local.get $0
  local.tee $4
  local.get $1
  global.get $~lib/near-runtime-ts/collections/index/collections._KEY_ELEMENT_SUFFIX
  call $~lib/string/String.__concat
  local.tee $5
  local.tee $6
  local.get $4
  i32.load
  local.tee $4
  i32.ne
  if
   local.get $6
   call $~lib/rt/pure/__retain
   drop
   local.get $4
   call $~lib/rt/pure/__release
  end
  local.get $6
  i32.store
  local.get $0
  local.get $2
  i32.store8 offset=4
  local.get $0
  local.tee $4
  local.get $1
  global.get $~lib/near-runtime-ts/collections/index/collections._KEY_LENGTH_SUFFIX
  call $~lib/string/String.__concat
  local.tee $6
  local.tee $7
  local.get $4
  i32.load offset=12
  local.tee $4
  i32.ne
  if
   local.get $7
   call $~lib/rt/pure/__retain
   drop
   local.get $4
   call $~lib/rt/pure/__release
  end
  local.get $7
  i32.store offset=12
  local.get $0
  i32.const -1
  i32.store offset=8
  local.get $3
  call $~lib/rt/pure/__release
  local.get $5
  call $~lib/rt/pure/__release
  local.get $6
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $0
 )
 (func $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#get:length (; 348 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  i32.load offset=8
  i32.const 0
  i32.lt_s
  if
   local.get $0
   global.get $~lib/near-runtime-ts/storage/storage
   local.get $0
   i32.load offset=12
   i32.const 0
   call $~lib/near-runtime-ts/storage/Storage#getPrimitive<i32>
   i32.store offset=8
  end
  local.get $0
  i32.load offset=8
 )
 (func $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#get:isEmpty (; 349 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#get:length
  i32.const 0
  i32.eq
 )
 (func $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,i32>#_key (; 350 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  i32.load
  local.get $1
  call $~lib/string/String#toString
  local.tee $2
  call $~lib/string/String.__concat
  local.tee $3
  call $~lib/rt/pure/__retain
  local.set $4
  local.get $2
  call $~lib/rt/pure/__release
  local.get $3
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $4
 )
 (func $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,i32>#contains (; 351 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,i32>#_key
  local.tee $2
  call $~lib/near-runtime-ts/storage/Storage#contains
  local.set $3
  local.get $2
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $3
 )
 (func $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#contains (; 352 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  i32.load offset=16
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,i32>#contains
  local.set $2
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
 )
 (func $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,i32>#getSome (; 353 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,i32>#_key
  local.tee $2
  call $~lib/near-runtime-ts/storage/Storage#getSome<i32>
  local.set $3
  local.get $2
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $3
 )
 (func $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,i32>#delete (; 354 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,i32>#_key
  local.tee $2
  call $~lib/near-runtime-ts/storage/Storage#delete
  local.get $2
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
 )
 (func $~lib/string/String#padStart (; 355 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  local.get $2
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  call $~lib/string/String#get:length
  i32.const 1
  i32.shl
  local.set $3
  local.get $1
  i32.const 1
  i32.shl
  local.set $4
  local.get $2
  call $~lib/string/String#get:length
  i32.const 1
  i32.shl
  local.set $5
  local.get $4
  local.get $3
  i32.lt_u
  if (result i32)
   i32.const 1
  else   
   local.get $5
   i32.eqz
  end
  if
   local.get $0
   call $~lib/rt/pure/__retain
   local.set $6
   local.get $2
   call $~lib/rt/pure/__release
   local.get $6
   return
  end
  local.get $4
  local.get $3
  i32.sub
  local.set $7
  local.get $4
  i32.const 1
  call $~lib/rt/tlsf/__alloc
  local.set $8
  local.get $7
  local.get $5
  i32.gt_u
  if
   local.get $7
   i32.const 2
   i32.sub
   local.get $5
   i32.div_u
   local.set $6
   local.get $6
   local.get $5
   i32.mul
   local.set $9
   local.get $7
   local.get $9
   i32.sub
   local.set $10
   local.get $8
   local.get $2
   local.get $5
   local.get $6
   call $~lib/memory/memory.repeat
   local.get $8
   local.get $9
   i32.add
   local.get $2
   local.get $10
   call $~lib/memory/memory.copy
  else   
   local.get $8
   local.get $2
   local.get $7
   call $~lib/memory/memory.copy
  end
  local.get $8
  local.get $7
  i32.add
  local.get $0
  local.get $3
  call $~lib/memory/memory.copy
  local.get $8
  call $~lib/rt/pure/__retain
  local.set $10
  local.get $2
  call $~lib/rt/pure/__release
  local.get $10
 )
 (func $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#_ratingKey (; 356 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  i64.extend_i32_s
  global.get $~lib/near-runtime-ts/collections/index/collections._RATING_OFFSET
  i64.add
  i32.wrap_i64
  local.set $2
  local.get $0
  i32.load8_u offset=4
  if
   global.get $~lib/builtins/u32.MAX_VALUE
   local.get $2
   i32.sub
   local.set $2
  end
  local.get $2
  call $~lib/number/U32#toString
  local.tee $3
  i32.const 10
  i32.const 608
  call $~lib/string/String#padStart
  local.set $4
  local.get $3
  call $~lib/rt/pure/__release
  local.get $4
 )
 (func $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#_keySuffix (; 357 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  global.get $~lib/near-runtime-ts/collections/index/collections._KEY_ELEMENT_SUFFIX
  local.get $1
  call $~lib/string/String#toString
  local.tee $2
  call $~lib/string/String.__concat
  local.tee $3
  call $~lib/rt/pure/__retain
  local.set $4
  local.get $2
  call $~lib/rt/pure/__release
  local.get $3
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $4
 )
 (func $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#_orderKey (; 358 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $2
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  i32.load
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#_ratingKey
  local.tee $3
  call $~lib/string/String.__concat
  local.tee $4
  local.get $0
  local.get $2
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#_keySuffix
  local.tee $5
  call $~lib/string/String.__concat
  local.tee $6
  call $~lib/rt/pure/__retain
  local.set $7
  local.get $3
  call $~lib/rt/pure/__release
  local.get $4
  call $~lib/rt/pure/__release
  local.get $5
  call $~lib/rt/pure/__release
  local.get $6
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  local.get $7
 )
 (func $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#set:length (; 359 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=8
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  i32.load offset=12
  local.get $1
  call $~lib/near-runtime-ts/storage/Storage#set<i32>
 )
 (func $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#delete (; 360 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#contains
  if
   local.get $0
   i32.load offset=16
   local.get $1
   call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,i32>#getSome
   local.set $2
   local.get $0
   i32.load offset=16
   local.get $1
   call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,i32>#delete
   global.get $~lib/near-runtime-ts/storage/storage
   local.get $0
   local.get $2
   local.get $1
   call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#_orderKey
   local.tee $3
   call $~lib/near-runtime-ts/storage/Storage#delete
   local.get $0
   local.get $0
   call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#get:length
   i32.const 1
   i32.sub
   call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#set:length
   local.get $3
   call $~lib/rt/pure/__release
  end
  local.get $1
  call $~lib/rt/pure/__release
 )
 (func $~lib/array/Array.create<~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>> (; 361 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  i32.const 268435452
  i32.gt_u
  if
   i32.const 840
   i32.const 1152
   i32.const 45
   i32.const 61
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 2
  i32.const 40
  i32.const 0
  call $~lib/rt/__allocArray
  call $~lib/rt/pure/__retain
  local.set $1
  local.get $1
  i32.const 0
  i32.store offset=12
  local.get $1
  i32.load offset=4
  i32.const 0
  local.get $1
  i32.load offset=8
  call $~lib/memory/memory.fill
  local.get $1
 )
 (func $~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>#constructor (; 362 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  i32.eqz
  if
   i32.const 8
   i32.const 39
   call $~lib/rt/tlsf/__alloc
   call $~lib/rt/pure/__retain
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  local.tee $3
  local.get $1
  local.tee $4
  local.get $3
  i32.load
  local.tee $3
  i32.ne
  if
   local.get $4
   call $~lib/rt/pure/__retain
   drop
   local.get $3
   call $~lib/rt/pure/__release
  end
  local.get $4
  i32.store
  local.get $0
  local.get $2
  i32.store offset=4
  local.get $1
  call $~lib/rt/pure/__release
  local.get $0
 )
 (func $~lib/array/Array<~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>>#__unchecked_set (; 363 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $2
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.set $3
  local.get $3
  i32.load
  local.set $4
  local.get $2
  local.get $4
  i32.ne
  if
   local.get $3
   local.get $2
   call $~lib/rt/pure/__retain
   i32.store
   local.get $4
   call $~lib/rt/pure/__release
  end
  local.get $2
  call $~lib/rt/pure/__release
 )
 (func $~lib/array/Array<~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>>#__set (; 364 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  local.get $2
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  i32.load offset=12
  local.set $3
  local.get $1
  local.get $3
  i32.gt_u
  if
   local.get $2
   call $~lib/rt/pure/__release
   i32.const 1040
   i32.const 1152
   i32.const 121
   i32.const 38
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $1
  i32.const 1
  i32.add
  i32.const 2
  call $~lib/array/ensureSize
  local.get $0
  local.get $1
  local.get $2
  call $~lib/array/Array<~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>>#__unchecked_set
  local.get $1
  local.get $3
  i32.ge_s
  if
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   i32.store offset=12
  end
  local.get $2
  call $~lib/rt/pure/__release
 )
 (func $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#keysToRatings (; 365 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $1
  call $~lib/array/Array<~lib/string/String>#get:length
  call $~lib/array/Array.create<~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>>
  local.set $2
  block $break|0
   i32.const 0
   local.set $3
   loop $loop|0
    local.get $3
    local.get $1
    call $~lib/array/Array<~lib/string/String>#get:length
    i32.lt_s
    i32.eqz
    br_if $break|0
    local.get $1
    local.get $3
    call $~lib/array/Array<~lib/string/String>#__get
    local.set $4
    local.get $2
    local.get $3
    i32.const 0
    local.get $4
    local.get $0
    i32.load offset=16
    local.get $4
    call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,i32>#getSome
    call $~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>#constructor
    local.tee $5
    call $~lib/array/Array<~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>>#__set
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    local.get $4
    call $~lib/rt/pure/__release
    local.get $5
    call $~lib/rt/pure/__release
    br $loop|0
   end
   unreachable
  end
  local.get $2
  local.set $5
  local.get $1
  call $~lib/rt/pure/__release
  local.get $5
 )
 (func $~lib/array/Array<~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>>#get:length (; 366 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  i32.load offset=12
 )
 (func $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTop~anonymous|0 (; 367 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  drop
  local.get $2
  call $~lib/rt/pure/__retain
  drop
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  call $~lib/near-runtime-ts/storage/Storage#getSome<~lib/string/String>
  local.tee $3
  local.set $4
  local.get $3
  call $~lib/rt/pure/__release
  local.get $0
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  local.get $4
 )
 (func $~lib/array/Array<~lib/string/String>#map<~lib/string/String> (; 368 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  i32.load offset=12
  local.set $2
  local.get $2
  i32.const 2
  i32.const 9
  i32.const 0
  call $~lib/rt/__allocArray
  call $~lib/rt/pure/__retain
  local.set $3
  local.get $3
  i32.load offset=4
  local.set $4
  block $break|0
   i32.const 0
   local.set $5
   loop $loop|0
    local.get $5
    local.get $2
    local.tee $6
    local.get $0
    i32.load offset=12
    local.tee $7
    local.get $6
    local.get $7
    i32.lt_s
    select
    i32.lt_s
    i32.eqz
    br_if $break|0
    i32.const 3
    global.set $~lib/argc
    local.get $0
    i32.load offset=4
    local.get $5
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.get $5
    local.get $0
    local.get $1
    call_indirect (type $FUNCSIG$iiii)
    local.tee $6
    call $~lib/rt/pure/__retain
    local.set $7
    local.get $4
    local.get $5
    i32.const 2
    i32.shl
    i32.add
    local.get $7
    call $~lib/rt/pure/__retain
    i32.store
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    local.get $6
    call $~lib/rt/pure/__release
    local.get $7
    call $~lib/rt/pure/__release
    br $loop|0
   end
   unreachable
  end
  local.get $3
 )
 (func $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTop (; 369 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  i32.load
  local.get $1
  call $~lib/near-runtime-ts/storage/Storage#keys
  local.set $2
  local.get $2
  i32.const 2
  call $~lib/array/Array<~lib/string/String>#map<~lib/string/String>
  local.set $3
  local.get $2
  call $~lib/rt/pure/__release
  local.get $3
 )
 (func $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTopWithRating (; 370 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTop
  local.tee $2
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#keysToRatings
  local.set $3
  local.get $2
  call $~lib/rt/pure/__release
  local.get $3
 )
 (func $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getRating (; 371 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  i32.load offset=16
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,i32>#contains
  if (result i32)
   local.get $0
   i32.load offset=16
   local.get $1
   call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,i32>#getSome
  else   
   local.get $2
  end
  local.set $3
  local.get $1
  call $~lib/rt/pure/__release
  local.get $3
 )
 (func $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,i32>#set (; 372 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,i32>#_key
  local.tee $3
  local.get $2
  call $~lib/near-runtime-ts/storage/Storage#set<i32>
  local.get $3
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
 )
 (func $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#setRating (; 373 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#contains
  if
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getRating
   local.set $3
   global.get $~lib/near-runtime-ts/storage/storage
   local.get $0
   local.get $3
   local.get $1
   call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#_orderKey
   local.tee $4
   call $~lib/near-runtime-ts/storage/Storage#delete
   local.get $4
   call $~lib/rt/pure/__release
  else   
   local.get $0
   local.get $0
   call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#get:length
   i32.const 1
   i32.add
   call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#set:length
  end
  local.get $0
  i32.load offset=16
  local.get $1
  local.get $2
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,i32>#set
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  local.get $2
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#_orderKey
  local.tee $4
  local.get $1
  call $~lib/near-runtime-ts/storage/Storage#set<~lib/string/String>
  local.get $4
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
 )
 (func $~lib/array/Array<~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>>#__unchecked_get (; 374 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  call $~lib/rt/pure/__retain
 )
 (func $~lib/array/Array<~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>>#__get (; 375 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 1040
   i32.const 1152
   i32.const 106
   i32.const 45
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  local.get $0
  i32.load offset=8
  i32.const 2
  i32.shr_u
  i32.ge_u
  if
   i32.const 704
   i32.const 1152
   i32.const 109
   i32.const 61
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>>#__unchecked_get
 )
 (func $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTopFromKey~anonymous|0 (; 376 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  drop
  local.get $2
  call $~lib/rt/pure/__retain
  drop
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  call $~lib/near-runtime-ts/storage/Storage#getSome<~lib/string/String>
  local.tee $3
  local.set $4
  local.get $3
  call $~lib/rt/pure/__release
  local.get $0
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  local.get $4
 )
 (func $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTopFromKey (; 377 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  local.get $2
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  local.get $2
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#contains
  i32.eqz
  if
   i32.const 15952
   local.get $2
   call $~lib/string/String.__concat
   local.tee $3
   i32.const 16008
   call $~lib/string/String.__concat
   local.tee $4
   i32.const 16056
   i32.const 150
   i32.const 4
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $2
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getRating
  local.set $5
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  local.get $5
  local.get $2
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#_orderKey
  local.tee $6
  local.get $0
  i32.load
  i32.const 1
  global.set $~lib/argc
  i32.const 255
  i32.const 0
  call $~lib/string/String.fromCharCode|trampoline
  local.tee $7
  call $~lib/string/String.__concat
  local.tee $8
  local.get $1
  call $~lib/near-runtime-ts/storage/Storage#keyRange
  local.set $9
  local.get $9
  i32.const 1
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<~lib/string/String>#slice
  local.tee $10
  i32.const 3
  call $~lib/array/Array<~lib/string/String>#map<~lib/string/String>
  local.set $11
  local.get $3
  call $~lib/rt/pure/__release
  local.get $4
  call $~lib/rt/pure/__release
  local.get $6
  call $~lib/rt/pure/__release
  local.get $7
  call $~lib/rt/pure/__release
  local.get $8
  call $~lib/rt/pure/__release
  local.get $9
  call $~lib/rt/pure/__release
  local.get $10
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  local.get $11
 )
 (func $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTopWithRatingFromKey (; 378 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  local.get $2
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  local.get $0
  local.get $1
  local.get $2
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTopFromKey
  local.tee $3
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#keysToRatings
  local.set $4
  local.get $3
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  local.get $4
 )
 (func $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#incrementRating (; 379 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  i32.const 0
  local.set $3
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#contains
  if
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getRating
   local.set $3
   global.get $~lib/near-runtime-ts/storage/storage
   local.get $0
   local.get $3
   local.get $1
   call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#_orderKey
   local.tee $4
   call $~lib/near-runtime-ts/storage/Storage#delete
   local.get $4
   call $~lib/rt/pure/__release
  else   
   local.get $0
   local.get $0
   call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#get:length
   i32.const 1
   i32.add
   call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#set:length
  end
  local.get $3
  local.get $2
  i32.add
  local.set $4
  local.get $0
  i32.load offset=16
  local.get $1
  local.get $4
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,i32>#set
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  local.get $4
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#_orderKey
  local.tee $5
  local.get $1
  call $~lib/near-runtime-ts/storage/Storage#set<~lib/string/String>
  local.get $5
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
 )
 (func $assembly/main/topnTests (; 380 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local $38 i32)
  (local $39 i32)
  (local $40 i32)
  (local $41 i32)
  (local $42 i32)
  (local $43 i32)
  (local $44 i32)
  (local $45 i32)
  (local $46 i32)
  (local $47 i32)
  (local $48 i32)
  (local $49 i32)
  (local $50 i32)
  (local $51 i32)
  (local $52 i32)
  (local $53 i32)
  i32.const 14616
  call $~lib/near-runtime-ts/logging/logging.log
  i32.const 0
  i32.const 14656
  i32.const 1
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#constructor
  local.set $0
  local.get $0
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 14688
   i32.const 2344
   i32.const 388
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#get:isEmpty
  i32.eqz
  if
   i32.const 14728
   i32.const 2344
   i32.const 389
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 14824
   i32.const 2344
   i32.const 390
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 5896
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#contains
  i32.eqz
  i32.eqz
  if
   i32.const 14896
   i32.const 2344
   i32.const 391
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 5896
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#delete
  local.get $0
  i32.const 0
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#constructor
  local.tee $1
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#keysToRatings
  local.tee $2
  call $~lib/array/Array<~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 14992
   i32.const 2344
   i32.const 393
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 10
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTop
  local.tee $3
  call $~lib/array/Array<~lib/string/String>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 15096
   i32.const 2344
   i32.const 394
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 10
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTopWithRating
  local.tee $4
  call $~lib/array/Array<~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 15208
   i32.const 2344
   i32.const 395
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 15312
  i32.const 5
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#setRating
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#get:isEmpty
  i32.eqz
  i32.eqz
  if
   i32.const 15336
   i32.const 2344
   i32.const 397
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#get:length
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 15416
   i32.const 2344
   i32.const 398
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 5896
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#contains
  i32.eqz
  i32.eqz
  if
   i32.const 15472
   i32.const 2344
   i32.const 399
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 15312
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#contains
  i32.eqz
  if
   i32.const 15552
   i32.const 2344
   i32.const 400
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 5896
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#delete
  local.get $0
  i32.const 1
  i32.const 2
  i32.const 9
  i32.const 15672
  call $~lib/rt/__allocArray
  call $~lib/rt/pure/__retain
  local.tee $6
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#keysToRatings
  local.tee $5
  call $~lib/array/Array<~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>>#get:length
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 15696
   i32.const 2344
   i32.const 402
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 1
  i32.const 2
  i32.const 9
  i32.const 15776
  call $~lib/rt/__allocArray
  call $~lib/rt/pure/__retain
  local.tee $8
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#keysToRatings
  local.tee $7
  i32.const 0
  call $~lib/array/Array<~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>>#__get
  local.tee $9
  i32.load offset=4
  i32.const 5
  i32.eq
  i32.eqz
  if
   i32.const 15696
   i32.const 2344
   i32.const 403
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 10
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTop
  local.tee $10
  call $~lib/array/Array<~lib/string/String>#get:length
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 15800
   i32.const 2344
   i32.const 404
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 10
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTop
  local.tee $11
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#__get
  local.tee $12
  i32.const 15312
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 15896
   i32.const 2344
   i32.const 405
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 10
  i32.const 15312
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTopFromKey
  local.tee $13
  call $~lib/array/Array<~lib/string/String>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 16176
   i32.const 2344
   i32.const 406
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 10
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTopWithRating
  local.tee $14
  call $~lib/array/Array<~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>>#get:length
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 16264
   i32.const 2344
   i32.const 407
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 10
  i32.const 15312
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTopWithRatingFromKey
  local.tee $15
  call $~lib/array/Array<~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 16392
   i32.const 2344
   i32.const 408
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 16504
  i32.const 5
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#setRating
  local.get $0
  i32.const 15312
  i32.const 1
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#incrementRating
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#get:isEmpty
  i32.eqz
  i32.eqz
  if
   i32.const 15336
   i32.const 2344
   i32.const 411
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 15416
   i32.const 2344
   i32.const 412
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 5896
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#contains
  i32.eqz
  i32.eqz
  if
   i32.const 15472
   i32.const 2344
   i32.const 413
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 16504
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#contains
  i32.eqz
  if
   i32.const 15552
   i32.const 2344
   i32.const 414
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 15312
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#contains
  i32.eqz
  if
   i32.const 15552
   i32.const 2344
   i32.const 415
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 5896
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#delete
  local.get $0
  i32.const 1
  i32.const 2
  i32.const 9
  i32.const 16528
  call $~lib/rt/__allocArray
  call $~lib/rt/pure/__retain
  local.tee $17
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#keysToRatings
  local.tee $16
  call $~lib/array/Array<~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>>#get:length
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 15696
   i32.const 2344
   i32.const 417
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 2
  i32.const 2
  i32.const 9
  i32.const 16552
  call $~lib/rt/__allocArray
  call $~lib/rt/pure/__retain
  local.tee $19
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#keysToRatings
  local.tee $18
  call $~lib/array/Array<~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 15696
   i32.const 2344
   i32.const 418
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 2
  i32.const 2
  i32.const 9
  i32.const 16576
  call $~lib/rt/__allocArray
  call $~lib/rt/pure/__retain
  local.tee $21
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#keysToRatings
  local.tee $20
  i32.const 0
  call $~lib/array/Array<~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>>#__get
  local.tee $22
  i32.load offset=4
  i32.const 6
  i32.eq
  i32.eqz
  if
   i32.const 15696
   i32.const 2344
   i32.const 419
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 2
  i32.const 2
  i32.const 9
  i32.const 16600
  call $~lib/rt/__allocArray
  call $~lib/rt/pure/__retain
  local.tee $24
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#keysToRatings
  local.tee $23
  i32.const 1
  call $~lib/array/Array<~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>>#__get
  local.tee $25
  i32.load offset=4
  i32.const 5
  i32.eq
  i32.eqz
  if
   i32.const 15696
   i32.const 2344
   i32.const 420
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 10
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTop
  local.tee $26
  call $~lib/array/Array<~lib/string/String>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 16624
   i32.const 2344
   i32.const 421
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 10
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTop
  local.tee $27
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#__get
  local.tee $28
  i32.const 15312
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 15896
   i32.const 2344
   i32.const 422
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 10
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTop
  local.tee $29
  i32.const 1
  call $~lib/array/Array<~lib/string/String>#__get
  local.tee $30
  i32.const 16504
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 15896
   i32.const 2344
   i32.const 423
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 1
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTop
  local.tee $31
  call $~lib/array/Array<~lib/string/String>#get:length
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 16696
   i32.const 2344
   i32.const 424
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 1
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTop
  local.tee $32
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#__get
  local.tee $33
  i32.const 15312
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 15896
   i32.const 2344
   i32.const 425
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 10
  i32.const 16504
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTopFromKey
  local.tee $34
  call $~lib/array/Array<~lib/string/String>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 16176
   i32.const 2344
   i32.const 426
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 10
  i32.const 15312
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTopFromKey
  local.tee $35
  call $~lib/array/Array<~lib/string/String>#get:length
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 16176
   i32.const 2344
   i32.const 427
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 10
  i32.const 15312
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTopFromKey
  local.tee $36
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#__get
  local.tee $37
  i32.const 16504
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 16176
   i32.const 2344
   i32.const 428
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 10
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTopWithRating
  local.tee $38
  call $~lib/array/Array<~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 16264
   i32.const 2344
   i32.const 429
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 10
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTopWithRating
  local.tee $39
  i32.const 0
  call $~lib/array/Array<~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>>#__get
  local.tee $40
  i32.load offset=4
  i32.const 6
  i32.eq
  i32.eqz
  if
   i32.const 16264
   i32.const 2344
   i32.const 430
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 10
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTopWithRating
  local.tee $41
  i32.const 1
  call $~lib/array/Array<~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>>#__get
  local.tee $42
  i32.load offset=4
  i32.const 5
  i32.eq
  i32.eqz
  if
   i32.const 16264
   i32.const 2344
   i32.const 431
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 15312
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#delete
  local.get $0
  i32.const 16504
  i32.const 1
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#incrementRating
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#get:isEmpty
  i32.eqz
  i32.eqz
  if
   i32.const 15336
   i32.const 2344
   i32.const 434
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#get:length
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 15416
   i32.const 2344
   i32.const 435
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 5896
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#contains
  i32.eqz
  i32.eqz
  if
   i32.const 15472
   i32.const 2344
   i32.const 436
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 16504
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#contains
  i32.eqz
  if
   i32.const 15552
   i32.const 2344
   i32.const 437
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 5896
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#delete
  local.get $0
  i32.const 1
  i32.const 2
  i32.const 9
  i32.const 16808
  call $~lib/rt/__allocArray
  call $~lib/rt/pure/__retain
  local.tee $44
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#keysToRatings
  local.tee $43
  call $~lib/array/Array<~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>>#get:length
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 15696
   i32.const 2344
   i32.const 439
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 1
  i32.const 2
  i32.const 9
  i32.const 16832
  call $~lib/rt/__allocArray
  call $~lib/rt/pure/__retain
  local.tee $46
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#keysToRatings
  local.tee $45
  i32.const 0
  call $~lib/array/Array<~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>>#__get
  local.tee $47
  i32.load offset=4
  i32.const 6
  i32.eq
  i32.eqz
  if
   i32.const 15696
   i32.const 2344
   i32.const 440
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 10
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTop
  local.tee $48
  call $~lib/array/Array<~lib/string/String>#get:length
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 15800
   i32.const 2344
   i32.const 441
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 10
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTop
  local.tee $49
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#__get
  local.tee $50
  i32.const 16504
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 15896
   i32.const 2344
   i32.const 442
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 10
  i32.const 16504
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTopFromKey
  local.tee $51
  call $~lib/array/Array<~lib/string/String>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 16176
   i32.const 2344
   i32.const 443
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 10
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTopWithRating
  local.tee $52
  call $~lib/array/Array<~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>>#get:length
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 16264
   i32.const 2344
   i32.const 444
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 10
  i32.const 16504
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTopWithRatingFromKey
  local.tee $53
  call $~lib/array/Array<~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 16392
   i32.const 2344
   i32.const 445
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  local.get $3
  call $~lib/rt/pure/__release
  local.get $4
  call $~lib/rt/pure/__release
  local.get $6
  call $~lib/rt/pure/__release
  local.get $5
  call $~lib/rt/pure/__release
  local.get $8
  call $~lib/rt/pure/__release
  local.get $7
  call $~lib/rt/pure/__release
  local.get $9
  call $~lib/rt/pure/__release
  local.get $10
  call $~lib/rt/pure/__release
  local.get $11
  call $~lib/rt/pure/__release
  local.get $12
  call $~lib/rt/pure/__release
  local.get $13
  call $~lib/rt/pure/__release
  local.get $14
  call $~lib/rt/pure/__release
  local.get $15
  call $~lib/rt/pure/__release
  local.get $17
  call $~lib/rt/pure/__release
  local.get $16
  call $~lib/rt/pure/__release
  local.get $19
  call $~lib/rt/pure/__release
  local.get $18
  call $~lib/rt/pure/__release
  local.get $21
  call $~lib/rt/pure/__release
  local.get $20
  call $~lib/rt/pure/__release
  local.get $22
  call $~lib/rt/pure/__release
  local.get $24
  call $~lib/rt/pure/__release
  local.get $23
  call $~lib/rt/pure/__release
  local.get $25
  call $~lib/rt/pure/__release
  local.get $26
  call $~lib/rt/pure/__release
  local.get $27
  call $~lib/rt/pure/__release
  local.get $28
  call $~lib/rt/pure/__release
  local.get $29
  call $~lib/rt/pure/__release
  local.get $30
  call $~lib/rt/pure/__release
  local.get $31
  call $~lib/rt/pure/__release
  local.get $32
  call $~lib/rt/pure/__release
  local.get $33
  call $~lib/rt/pure/__release
  local.get $34
  call $~lib/rt/pure/__release
  local.get $35
  call $~lib/rt/pure/__release
  local.get $36
  call $~lib/rt/pure/__release
  local.get $37
  call $~lib/rt/pure/__release
  local.get $38
  call $~lib/rt/pure/__release
  local.get $39
  call $~lib/rt/pure/__release
  local.get $40
  call $~lib/rt/pure/__release
  local.get $41
  call $~lib/rt/pure/__release
  local.get $42
  call $~lib/rt/pure/__release
  local.get $44
  call $~lib/rt/pure/__release
  local.get $43
  call $~lib/rt/pure/__release
  local.get $46
  call $~lib/rt/pure/__release
  local.get $45
  call $~lib/rt/pure/__release
  local.get $47
  call $~lib/rt/pure/__release
  local.get $48
  call $~lib/rt/pure/__release
  local.get $49
  call $~lib/rt/pure/__release
  local.get $50
  call $~lib/rt/pure/__release
  local.get $51
  call $~lib/rt/pure/__release
  local.get $52
  call $~lib/rt/pure/__release
  local.get $53
  call $~lib/rt/pure/__release
 )
 (func $~lib/near-runtime-ts/contract/Context#_readRegisterContentsAsString (; 381 ;) (type $FUNCSIG$iij) (param $0 i32) (param $1 i64) (result i32)
  (local $2 i32)
  (local $3 i32)
  i32.const 0
  local.get $1
  call $~lib/near-runtime-ts/runtime_api/runtime_api.register_len
  i32.wrap_i64
  call $~lib/typedarray/Uint8Array#constructor
  local.set $2
  local.get $1
  local.get $2
  i32.load offset=4
  i64.extend_i32_u
  call $~lib/near-runtime-ts/runtime_api/runtime_api.read_register
  local.get $2
  call $~lib/near-runtime-ts/util/util.bytesToString
  local.tee $3
  if (result i32)
   local.get $3
  else   
   unreachable
  end
  call $~lib/rt/pure/__retain
  local.set $3
  local.get $2
  call $~lib/rt/pure/__release
  local.get $3
 )
 (func $~lib/near-runtime-ts/contract/Context#get:sender (; 382 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  i64.const 0
  call $~lib/near-runtime-ts/runtime_api/runtime_api.signer_account_id
  local.get $0
  i64.const 0
  call $~lib/near-runtime-ts/contract/Context#_readRegisterContentsAsString
 )
 (func $~lib/near-runtime-ts/contract/Context#get:contractName (; 383 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  i64.const 0
  call $~lib/near-runtime-ts/runtime_api/runtime_api.current_account_id
  local.get $0
  i64.const 0
  call $~lib/near-runtime-ts/contract/Context#_readRegisterContentsAsString
 )
 (func $~lib/near-runtime-ts/contract/Context#get:blockIndex (; 384 ;) (type $FUNCSIG$ji) (param $0 i32) (result i64)
  call $~lib/near-runtime-ts/runtime_api/runtime_api.block_index
 )
 (func $~lib/bignum/integer/u128/u128#constructor (; 385 ;) (type $FUNCSIG$iijj) (param $0 i32) (param $1 i64) (param $2 i64) (result i32)
  local.get $0
  i32.eqz
  if
   i32.const 16
   i32.const 5
   call $~lib/rt/tlsf/__alloc
   call $~lib/rt/pure/__retain
   local.set $0
  end
  local.get $0
  local.get $1
  i64.store
  local.get $0
  local.get $2
  i64.store offset=8
  local.get $0
 )
 (func $~lib/polyfills/bswap<u64> (; 386 ;) (type $FUNCSIG$jj) (param $0 i64) (result i64)
  (local $1 i64)
  (local $2 i64)
  (local $3 i64)
  local.get $0
  i64.const 8
  i64.shr_u
  i64.const 71777214294589695
  i64.and
  local.set $1
  local.get $0
  i64.const 71777214294589695
  i64.and
  i64.const 8
  i64.shl
  local.set $2
  local.get $1
  local.get $2
  i64.or
  local.set $3
  local.get $3
  i64.const 16
  i64.shr_u
  i64.const 281470681808895
  i64.and
  local.set $1
  local.get $3
  i64.const 281470681808895
  i64.and
  i64.const 16
  i64.shl
  local.set $2
  local.get $1
  local.get $2
  i64.or
  i64.const 32
  i64.rotr
  return
 )
 (func $~lib/bignum/integer/u128/u128.fromUint8ArrayBE (; 387 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  call $~lib/typedarray/Uint8Array#get:length
  if (result i32)
   local.get $0
   call $~lib/typedarray/Uint8Array#get:length
   i32.const 15
   i32.and
   i32.const 0
   i32.eq
  else   
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 17064
   i32.const 145
   i32.const 4
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.set $1
  i32.const 0
  local.get $1
  i64.load offset=8
  call $~lib/polyfills/bswap<u64>
  local.get $1
  i64.load
  call $~lib/polyfills/bswap<u64>
  call $~lib/bignum/integer/u128/u128#constructor
  local.set $2
  local.get $0
  call $~lib/rt/pure/__release
  local.get $2
 )
 (func $~lib/bignum/integer/u128/u128.fromUint8ArrayLE (; 388 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  call $~lib/typedarray/Uint8Array#get:length
  if (result i32)
   local.get $0
   call $~lib/typedarray/Uint8Array#get:length
   i32.const 15
   i32.and
   i32.const 0
   i32.eq
  else   
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 17064
   i32.const 136
   i32.const 4
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.set $1
  i32.const 0
  local.get $1
  i64.load
  local.get $1
  i64.load offset=8
  call $~lib/bignum/integer/u128/u128#constructor
  local.set $2
  local.get $0
  call $~lib/rt/pure/__release
  local.get $2
 )
 (func $~lib/near-runtime-ts/contract/Context#get:attachedDeposit (; 389 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  i32.const 0
  i32.const 16
  call $~lib/typedarray/Uint8Array#constructor
  local.set $1
  local.get $1
  i32.load offset=4
  i64.extend_i32_u
  call $~lib/near-runtime-ts/runtime_api/runtime_api.attached_deposit
  block $~lib/bignum/integer/u128/u128.fromBytes<~lib/typedarray/Uint8Array>|inlined.0 (result i32)
   local.get $1
   call $~lib/rt/pure/__retain
   local.set $3
   i32.const 0
   local.set $2
   local.get $2
   if (result i32)
    local.get $3
    call $~lib/bignum/integer/u128/u128.fromUint8ArrayBE
   else    
    local.get $3
    call $~lib/bignum/integer/u128/u128.fromUint8ArrayLE
   end
   local.set $4
   local.get $3
   call $~lib/rt/pure/__release
   local.get $4
   br $~lib/bignum/integer/u128/u128.fromBytes<~lib/typedarray/Uint8Array>|inlined.0
  end
  local.tee $3
  call $~lib/rt/pure/__retain
  local.set $2
  local.get $1
  call $~lib/rt/pure/__release
  local.get $3
  call $~lib/rt/pure/__release
  local.get $2
 )
 (func $~lib/near-runtime-ts/contract/Context#get:accountBalance (; 390 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  i32.const 0
  i32.const 16
  call $~lib/typedarray/Uint8Array#constructor
  local.set $1
  local.get $1
  i32.load offset=4
  i64.extend_i32_u
  call $~lib/near-runtime-ts/runtime_api/runtime_api.account_balance
  block $~lib/bignum/integer/u128/u128.fromBytes<~lib/typedarray/Uint8Array>|inlined.1 (result i32)
   local.get $1
   call $~lib/rt/pure/__retain
   local.set $3
   i32.const 0
   local.set $2
   local.get $2
   if (result i32)
    local.get $3
    call $~lib/bignum/integer/u128/u128.fromUint8ArrayBE
   else    
    local.get $3
    call $~lib/bignum/integer/u128/u128.fromUint8ArrayLE
   end
   local.set $4
   local.get $3
   call $~lib/rt/pure/__release
   local.get $4
   br $~lib/bignum/integer/u128/u128.fromBytes<~lib/typedarray/Uint8Array>|inlined.1
  end
  local.tee $3
  call $~lib/rt/pure/__retain
  local.set $2
  local.get $1
  call $~lib/rt/pure/__release
  local.get $3
  call $~lib/rt/pure/__release
  local.get $2
 )
 (func $~lib/near-runtime-ts/contract/Context#get:prepaidGas (; 391 ;) (type $FUNCSIG$ji) (param $0 i32) (result i64)
  call $~lib/near-runtime-ts/runtime_api/runtime_api.prepaid_gas
 )
 (func $~lib/near-runtime-ts/contract/Context#get:usedGas (; 392 ;) (type $FUNCSIG$ji) (param $0 i32) (result i64)
  call $~lib/near-runtime-ts/runtime_api/runtime_api.used_gas
 )
 (func $assembly/main/contextTests (; 393 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i64)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  i32.const 16856
  call $~lib/near-runtime-ts/logging/logging.log
  global.get $~lib/near-runtime-ts/contract/context
  call $~lib/near-runtime-ts/contract/Context#get:sender
  local.tee $0
  i32.const 16896
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 16920
   i32.const 2344
   i32.const 449
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/near-runtime-ts/contract/context
  call $~lib/near-runtime-ts/contract/Context#get:contractName
  local.tee $1
  i32.const 16960
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 17008
   i32.const 2344
   i32.const 450
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/near-runtime-ts/contract/context
  call $~lib/near-runtime-ts/contract/Context#get:blockIndex
  i64.const 113
  i64.eq
  i32.eqz
  if
   i32.const 17008
   i32.const 2344
   i32.const 451
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/near-runtime-ts/contract/context
  call $~lib/near-runtime-ts/contract/Context#get:attachedDeposit
  local.tee $2
  call $~lib/rt/pure/__retain
  local.set $6
  i64.const 7
  local.set $3
  i32.const 0
  local.get $3
  i64.const 0
  call $~lib/bignum/integer/u128/u128#constructor
  local.tee $4
  call $~lib/rt/pure/__retain
  local.set $5
  local.get $6
  i64.load offset=8
  local.get $5
  i64.load offset=8
  i64.eq
  if (result i32)
   local.get $6
   i64.load
   local.get $5
   i64.load
   i64.eq
  else   
   i32.const 0
  end
  local.set $7
  local.get $5
  call $~lib/rt/pure/__release
  local.get $6
  call $~lib/rt/pure/__release
  local.get $7
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 17136
   i32.const 2344
   i32.const 452
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/near-runtime-ts/contract/context
  call $~lib/near-runtime-ts/contract/Context#get:accountBalance
  local.tee $6
  call $~lib/rt/pure/__retain
  local.set $8
  i64.const 14
  local.set $3
  i32.const 0
  local.get $3
  i64.const 0
  call $~lib/bignum/integer/u128/u128#constructor
  local.tee $5
  call $~lib/rt/pure/__retain
  local.set $7
  local.get $8
  i64.load offset=8
  local.get $7
  i64.load offset=8
  i64.eq
  if (result i32)
   local.get $8
   i64.load
   local.get $7
   i64.load
   i64.eq
  else   
   i32.const 0
  end
  local.set $9
  local.get $7
  call $~lib/rt/pure/__release
  local.get $8
  call $~lib/rt/pure/__release
  local.get $9
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 17136
   i32.const 2344
   i32.const 453
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/near-runtime-ts/contract/context
  call $~lib/near-runtime-ts/contract/Context#get:prepaidGas
  i64.const 1000000000
  i64.eq
  i32.eqz
  if
   i32.const 17192
   i32.const 2344
   i32.const 454
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/near-runtime-ts/contract/context
  call $~lib/near-runtime-ts/contract/Context#get:usedGas
  i64.const 1000000000
  i64.le_u
  i32.eqz
  if
   i32.const 17248
   i32.const 2344
   i32.const 455
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/near-runtime-ts/contract/context
  call $~lib/near-runtime-ts/contract/Context#get:usedGas
  i64.const 0
  i64.gt_u
  i32.eqz
  if
   i32.const 17248
   i32.const 2344
   i32.const 456
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  local.get $4
  call $~lib/rt/pure/__release
  local.get $6
  call $~lib/rt/pure/__release
  local.get $5
  call $~lib/rt/pure/__release
 )
 (func $~lib/array/Array.create<~lib/near-runtime-ts/contract/ContractPromiseResult> (; 394 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  i32.const 268435452
  i32.gt_u
  if
   i32.const 840
   i32.const 1152
   i32.const 45
   i32.const 61
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 2
  i32.const 43
  i32.const 0
  call $~lib/rt/__allocArray
  call $~lib/rt/pure/__retain
  local.set $1
  local.get $1
  i32.const 0
  i32.store offset=12
  local.get $1
  i32.load offset=4
  i32.const 0
  local.get $1
  i32.load offset=8
  call $~lib/memory/memory.fill
  local.get $1
 )
 (func $~lib/array/Array<~lib/near-runtime-ts/contract/ContractPromiseResult>#__unchecked_set (; 395 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $2
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.set $3
  local.get $3
  i32.load
  local.set $4
  local.get $2
  local.get $4
  i32.ne
  if
   local.get $3
   local.get $2
   call $~lib/rt/pure/__retain
   i32.store
   local.get $4
   call $~lib/rt/pure/__release
  end
  local.get $2
  call $~lib/rt/pure/__release
 )
 (func $~lib/array/Array<~lib/near-runtime-ts/contract/ContractPromiseResult>#__set (; 396 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  local.get $2
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  i32.load offset=12
  local.set $3
  local.get $1
  local.get $3
  i32.gt_u
  if
   local.get $2
   call $~lib/rt/pure/__release
   i32.const 1040
   i32.const 1152
   i32.const 121
   i32.const 38
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $1
  i32.const 1
  i32.add
  i32.const 2
  call $~lib/array/ensureSize
  local.get $0
  local.get $1
  local.get $2
  call $~lib/array/Array<~lib/near-runtime-ts/contract/ContractPromiseResult>#__unchecked_set
  local.get $1
  local.get $3
  i32.ge_s
  if
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   i32.store offset=12
  end
  local.get $2
  call $~lib/rt/pure/__release
 )
 (func $~lib/near-runtime-ts/contract/ContractPromise.getResults (; 397 ;) (type $FUNCSIG$i) (result i32)
  (local $0 i64)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  call $~lib/near-runtime-ts/runtime_api/runtime_api.promise_results_count
  local.set $0
  local.get $0
  i32.wrap_i64
  call $~lib/array/Array.create<~lib/near-runtime-ts/contract/ContractPromiseResult>
  local.set $1
  block $break|0
   i32.const 0
   local.set $2
   loop $loop|0
    local.get $2
    i64.extend_i32_s
    local.get $0
    i64.lt_s
    i32.eqz
    br_if $break|0
    block $continue|0
     local.get $2
     i64.extend_i32_s
     i64.const 0
     call $~lib/near-runtime-ts/runtime_api/runtime_api.promise_result
     i32.wrap_i64
     local.set $3
     local.get $3
     i32.const 1
     i32.eq
     local.set $4
     local.get $4
     i32.eqz
     if
      local.get $1
      local.get $2
      i32.const 8
      i32.const 42
      call $~lib/rt/tlsf/__alloc
      call $~lib/rt/pure/__retain
      local.set $5
      local.get $5
      local.get $3
      i32.store
      local.get $5
      call $~lib/array/Array<~lib/near-runtime-ts/contract/ContractPromiseResult>#__set
      local.get $5
      call $~lib/rt/pure/__release
      br $continue|0
     end
     i32.const 0
     i64.const 0
     call $~lib/near-runtime-ts/runtime_api/runtime_api.register_len
     i32.wrap_i64
     call $~lib/typedarray/Uint8Array#constructor
     local.set $5
     i64.const 0
     local.get $5
     i32.load offset=4
     i64.extend_i32_u
     call $~lib/near-runtime-ts/runtime_api/runtime_api.read_register
     local.get $1
     local.get $2
     i32.const 8
     i32.const 42
     call $~lib/rt/tlsf/__alloc
     call $~lib/rt/pure/__retain
     local.set $6
     local.get $6
     local.get $3
     i32.store
     local.get $6
     local.get $5
     i32.store offset=4
     local.get $6
     call $~lib/array/Array<~lib/near-runtime-ts/contract/ContractPromiseResult>#__set
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    local.get $5
    call $~lib/rt/pure/__release
    local.get $6
    call $~lib/rt/pure/__release
    br $loop|0
   end
   unreachable
  end
  local.get $1
 )
 (func $~lib/array/Array<~lib/near-runtime-ts/contract/ContractPromiseResult>#get:length (; 398 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  i32.load offset=12
 )
 (func $~lib/near-runtime-ts/contract/ContractPromise.create (; 399 ;) (type $FUNCSIG$iiiiji) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i64) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i64)
  (local $8 i32)
  (local $9 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  drop
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $2
  call $~lib/rt/pure/__retain
  drop
  local.get $4
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  call $~lib/near-runtime-ts/util/util.stringToBytes
  local.set $5
  local.get $1
  call $~lib/near-runtime-ts/util/util.stringToBytes
  local.set $6
  local.get $5
  call $~lib/arraybuffer/ArrayBufferView#get:byteLength
  i64.extend_i32_s
  local.get $5
  i32.load offset=4
  i64.extend_i32_u
  local.get $6
  call $~lib/arraybuffer/ArrayBufferView#get:byteLength
  i64.extend_i32_s
  local.get $6
  i32.load offset=4
  i64.extend_i32_u
  local.get $2
  call $~lib/arraybuffer/ArrayBufferView#get:byteLength
  i64.extend_i32_s
  local.get $2
  i32.load offset=4
  i64.extend_i32_u
  i64.const 0
  local.get $3
  call $~lib/near-runtime-ts/runtime_api/runtime_api.promise_create
  local.set $7
  i32.const 8
  i32.const 44
  call $~lib/rt/tlsf/__alloc
  call $~lib/rt/pure/__retain
  local.set $8
  local.get $8
  local.get $7
  i64.store
  local.get $8
  call $~lib/rt/pure/__retain
  local.set $9
  local.get $5
  call $~lib/rt/pure/__release
  local.get $6
  call $~lib/rt/pure/__release
  local.get $8
  call $~lib/rt/pure/__release
  local.get $0
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  local.get $4
  call $~lib/rt/pure/__release
  local.get $9
 )
 (func $~lib/near-runtime-ts/contract/ContractPromise.create|trampoline (; 400 ;) (type $FUNCSIG$iiiiji) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i64) (param $4 i32) (result i32)
  (local $5 i64)
  (local $6 i32)
  (local $7 i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~lib/argc
     i32.const 4
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   i64.const 0
   local.set $5
   i32.const 0
   local.get $5
   i64.const 0
   call $~lib/bignum/integer/u128/u128#constructor
   local.tee $6
   local.set $4
  end
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  local.get $4
  call $~lib/near-runtime-ts/contract/ContractPromise.create
  local.set $7
  local.get $6
  call $~lib/rt/pure/__release
  local.get $7
 )
 (func $~lib/near-runtime-ts/contract/ContractPromise#then (; 401 ;) (type $FUNCSIG$iiiiiji) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i64) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i64)
  (local $9 i32)
  (local $10 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  drop
  local.get $2
  call $~lib/rt/pure/__retain
  drop
  local.get $3
  call $~lib/rt/pure/__retain
  drop
  local.get $5
  call $~lib/rt/pure/__retain
  drop
  local.get $1
  call $~lib/near-runtime-ts/util/util.stringToBytes
  local.set $6
  local.get $2
  call $~lib/near-runtime-ts/util/util.stringToBytes
  local.set $7
  local.get $0
  i64.load
  local.get $6
  call $~lib/arraybuffer/ArrayBufferView#get:byteLength
  i64.extend_i32_s
  local.get $6
  i32.load offset=4
  i64.extend_i32_u
  local.get $7
  call $~lib/arraybuffer/ArrayBufferView#get:byteLength
  i64.extend_i32_s
  local.get $7
  i32.load offset=4
  i64.extend_i32_u
  local.get $3
  call $~lib/arraybuffer/ArrayBufferView#get:byteLength
  i64.extend_i32_s
  local.get $3
  i32.load offset=4
  i64.extend_i32_u
  i64.const 0
  local.get $4
  call $~lib/near-runtime-ts/runtime_api/runtime_api.promise_then
  local.set $8
  i32.const 8
  i32.const 44
  call $~lib/rt/tlsf/__alloc
  call $~lib/rt/pure/__retain
  local.set $9
  local.get $9
  local.get $8
  i64.store
  local.get $9
  call $~lib/rt/pure/__retain
  local.set $10
  local.get $6
  call $~lib/rt/pure/__release
  local.get $7
  call $~lib/rt/pure/__release
  local.get $9
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  local.get $3
  call $~lib/rt/pure/__release
  local.get $5
  call $~lib/rt/pure/__release
  local.get $10
 )
 (func $~lib/near-runtime-ts/contract/ContractPromise#then|trampoline (; 402 ;) (type $FUNCSIG$iiiiiji) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i64) (param $5 i32) (result i32)
  (local $6 i64)
  (local $7 i32)
  (local $8 i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~lib/argc
     i32.const 4
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   i64.const 0
   local.set $6
   i32.const 0
   local.get $6
   i64.const 0
   call $~lib/bignum/integer/u128/u128#constructor
   local.tee $7
   local.set $5
  end
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  local.get $4
  local.get $5
  call $~lib/near-runtime-ts/contract/ContractPromise#then
  local.set $8
  local.get $7
  call $~lib/rt/pure/__release
  local.get $8
 )
 (func $~lib/near-runtime-ts/contract/ContractPromise#returnAsResult (; 403 ;) (type $FUNCSIG$vi) (param $0 i32)
  local.get $0
  i64.load
  call $~lib/near-runtime-ts/runtime_api/runtime_api.promise_return
 )
 (func $assembly/main/promiseTests (; 404 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  i32.const 17296
  call $~lib/near-runtime-ts/logging/logging.log
  call $~lib/near-runtime-ts/contract/ContractPromise.getResults
  local.set $0
  local.get $0
  call $~lib/array/Array<~lib/near-runtime-ts/contract/ContractPromiseResult>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 17336
   i32.const 2344
   i32.const 461
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 4
  global.set $~lib/argc
  i32.const 17400
  i32.const 17464
  i32.const 0
  i32.const 0
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $1
  i64.const 100
  i32.const 0
  call $~lib/near-runtime-ts/contract/ContractPromise.create|trampoline
  local.set $2
  i32.const 4
  global.set $~lib/argc
  local.get $2
  i32.const 17400
  i32.const 17464
  i32.const 0
  i32.const 0
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $3
  i64.const 100
  i32.const 0
  call $~lib/near-runtime-ts/contract/ContractPromise#then|trampoline
  local.set $4
  local.get $4
  call $~lib/near-runtime-ts/contract/ContractPromise#returnAsResult
  local.get $0
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  local.get $3
  call $~lib/rt/pure/__release
  local.get $4
  call $~lib/rt/pure/__release
 )
 (func $~lib/near-runtime-ts/math/math._uint8ArrayToU32 (; 405 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  i32.const 0
  i32.ne
  if (result i32)
   local.get $0
   call $~lib/typedarray/Uint8Array#get:length
   i32.const 4
   i32.ge_s
  else   
   i32.const 0
  end
  i32.eqz
  if
   i32.const 17544
   i32.const 17640
   i32.const 44
   i32.const 4
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 255
  local.get $0
  i32.const 0
  call $~lib/typedarray/Uint8Array#__get
  i32.and
  i32.const 24
  i32.shl
  i32.const 255
  local.get $0
  i32.const 1
  call $~lib/typedarray/Uint8Array#__get
  i32.and
  i32.const 16
  i32.shl
  i32.or
  i32.const 255
  local.get $0
  i32.const 2
  call $~lib/typedarray/Uint8Array#__get
  i32.and
  i32.const 8
  i32.shl
  i32.or
  i32.const 255
  local.get $0
  i32.const 3
  call $~lib/typedarray/Uint8Array#__get
  i32.and
  i32.const 0
  i32.shl
  i32.or
  local.set $1
  local.get $0
  call $~lib/rt/pure/__release
  local.get $1
 )
 (func $~lib/near-runtime-ts/math/math.hash32Bytes (; 406 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  call $~lib/arraybuffer/ArrayBufferView#get:byteLength
  i64.extend_i32_s
  local.get $0
  i32.load offset=4
  i64.extend_i32_u
  i64.const 0
  call $~lib/near-runtime-ts/runtime_api/runtime_api.sha256
  i32.const 0
  i64.const 0
  call $~lib/near-runtime-ts/runtime_api/runtime_api.register_len
  i32.wrap_i64
  call $~lib/typedarray/Uint8Array#constructor
  local.set $1
  i64.const 0
  local.get $1
  i32.load offset=4
  i64.extend_i32_u
  call $~lib/near-runtime-ts/runtime_api/runtime_api.read_register
  local.get $1
  call $~lib/near-runtime-ts/math/math._uint8ArrayToU32
  local.set $2
  local.get $1
  call $~lib/rt/pure/__release
  local.get $0
  call $~lib/rt/pure/__release
  local.get $2
 )
 (func $~lib/near-runtime-ts/math/math.hash32<~lib/string/String> (; 407 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  call $~lib/string/String#toString
  local.tee $1
  call $~lib/near-runtime-ts/util/util.stringToBytes
  local.set $2
  local.get $2
  call $~lib/arraybuffer/ArrayBufferView#get:byteLength
  i64.extend_i32_s
  local.get $2
  i32.load offset=4
  i64.extend_i32_u
  i64.const 0
  call $~lib/near-runtime-ts/runtime_api/runtime_api.sha256
  i32.const 0
  i64.const 0
  call $~lib/near-runtime-ts/runtime_api/runtime_api.register_len
  i32.wrap_i64
  call $~lib/typedarray/Uint8Array#constructor
  local.set $3
  i64.const 0
  local.get $3
  i32.load offset=4
  i64.extend_i32_u
  call $~lib/near-runtime-ts/runtime_api/runtime_api.read_register
  local.get $3
  call $~lib/near-runtime-ts/math/math._uint8ArrayToU32
  local.set $4
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  local.get $3
  call $~lib/rt/pure/__release
  local.get $0
  call $~lib/rt/pure/__release
  local.get $4
 )
 (func $~lib/near-runtime-ts/math/math.hash<~lib/string/String> (; 408 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  drop
  local.get $0
  call $~lib/string/String#toString
  local.tee $1
  call $~lib/near-runtime-ts/util/util.stringToBytes
  local.set $2
  local.get $2
  call $~lib/arraybuffer/ArrayBufferView#get:byteLength
  i64.extend_i32_s
  local.get $2
  i32.load offset=4
  i64.extend_i32_u
  i64.const 0
  call $~lib/near-runtime-ts/runtime_api/runtime_api.sha256
  i32.const 0
  i64.const 0
  call $~lib/near-runtime-ts/runtime_api/runtime_api.register_len
  i32.wrap_i64
  call $~lib/typedarray/Uint8Array#constructor
  local.set $3
  i64.const 0
  local.get $3
  i32.load offset=4
  i64.extend_i32_u
  call $~lib/near-runtime-ts/runtime_api/runtime_api.read_register
  local.get $3
  local.set $4
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  local.get $0
  call $~lib/rt/pure/__release
  local.get $4
 )
 (func $assembly/main/mathTests (; 409 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  i32.const 17504
  call $~lib/near-runtime-ts/logging/logging.log
  call $assembly/util/_testBytes
  local.set $0
  local.get $0
  call $~lib/near-runtime-ts/math/math.hash32Bytes
  local.set $1
  local.get $1
  i32.const -701271954
  i32.eq
  i32.eqz
  if
   i32.const 17712
   i32.const 2344
   i32.const 470
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 17752
  call $~lib/near-runtime-ts/math/math.hash32<~lib/string/String>
  local.set $2
  local.get $2
  i32.const -900924094
  i32.eq
  i32.eqz
  if
   i32.const 17784
   i32.const 2344
   i32.const 473
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 17752
  call $~lib/near-runtime-ts/math/math.hash<~lib/string/String>
  local.tee $3
  call $~lib/rt/pure/__retain
  local.set $4
  i32.const 3
  i32.const 2
  i32.const 8
  i32.const 17848
  call $~lib/rt/__allocArray
  call $~lib/rt/pure/__retain
  local.tee $6
  call $~lib/rt/pure/__retain
  local.set $5
  local.get $4
  call $~lib/typedarray/Uint8Array#get:length
  i32.const 32
  i32.eq
  i32.eqz
  if
   i32.const 17880
   i32.const 2344
   i32.const 476
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  i32.const 0
  call $~lib/typedarray/Uint8Array#__get
  i32.const 202
  i32.eq
  i32.eqz
  if
   i32.const 17960
   i32.const 2344
   i32.const 477
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  i32.const 1
  call $~lib/typedarray/Uint8Array#__get
  i32.const 76
  i32.eq
  i32.eqz
  if
   i32.const 17960
   i32.const 2344
   i32.const 478
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  i32.const 31
  call $~lib/typedarray/Uint8Array#__get
  i32.const 184
  i32.eq
  i32.eqz
  if
   i32.const 17960
   i32.const 2344
   i32.const 479
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/rt/pure/__release
  local.get $3
  call $~lib/rt/pure/__release
  local.get $4
  call $~lib/rt/pure/__release
  local.get $6
  call $~lib/rt/pure/__release
  local.get $5
  call $~lib/rt/pure/__release
 )
 (func $start (; 410 ;) (type $FUNCSIG$v)
  call $start:~lib/rt/index-full
  call $start:~lib/nearEntry
 )
 (func $~lib/array/Array<i32>#__visit_impl (; 411 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  nop
 )
 (func $~lib/rt/pure/__visit (; 412 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  global.get $~lib/heap/__heap_base
  i32.lt_u
  if
   return
  end
  local.get $0
  i32.const 16
  i32.sub
  local.set $2
  block $break|0
   block $case5|0
    block $case4|0
     block $case3|0
      block $case2|0
       block $case1|0
        block $case0|0
         local.get $1
         local.set $3
         local.get $3
         i32.const 1
         i32.eq
         br_if $case0|0
         local.get $3
         i32.const 2
         i32.eq
         br_if $case1|0
         local.get $3
         i32.const 3
         i32.eq
         br_if $case2|0
         local.get $3
         i32.const 4
         i32.eq
         br_if $case3|0
         local.get $3
         i32.const 5
         i32.eq
         br_if $case4|0
         br $case5|0
        end
        local.get $2
        call $~lib/rt/pure/decrement
        br $break|0
       end
       local.get $2
       i32.load offset=4
       i32.const 268435455
       i32.and
       i32.const 0
       i32.gt_u
       i32.eqz
       if
        i32.const 0
        i32.const 128
        i32.const 75
        i32.const 17
        call $~lib/builtins/abort
        unreachable
       end
       local.get $2
       local.get $2
       i32.load offset=4
       i32.const 1
       i32.sub
       i32.store offset=4
       local.get $2
       call $~lib/rt/pure/markGray
       br $break|0
      end
      local.get $2
      call $~lib/rt/pure/scan
      br $break|0
     end
     local.get $2
     i32.load offset=4
     local.set $3
     local.get $3
     i32.const -268435456
     i32.and
     local.get $3
     i32.const 1
     i32.add
     i32.const -268435456
     i32.and
     i32.eq
     i32.eqz
     if
      i32.const 0
      i32.const 128
      i32.const 86
      i32.const 6
      call $~lib/builtins/abort
      unreachable
     end
     local.get $2
     local.get $3
     i32.const 1
     i32.add
     i32.store offset=4
     local.get $3
     i32.const 1879048192
     i32.and
     i32.const 0
     i32.ne
     if
      local.get $2
      call $~lib/rt/pure/scanBlack
     end
     br $break|0
    end
    local.get $2
    call $~lib/rt/pure/collectWhite
    br $break|0
   end
   i32.const 0
   i32.eqz
   if
    i32.const 0
    i32.const 128
    i32.const 97
    i32.const 24
    call $~lib/builtins/abort
    unreachable
   end
  end
 )
 (func $~lib/array/Array<~lib/string/String>#__visit_impl (; 413 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $2
  local.get $0
  i32.load offset=12
  i32.const 2
  i32.shl
  i32.add
  local.set $3
  block $break|0
   loop $continue|0
    local.get $2
    local.get $3
    i32.lt_u
    i32.eqz
    br_if $break|0
    local.get $2
    i32.load
    local.set $4
    local.get $4
    if
     local.get $4
     local.get $1
     call $~lib/rt/pure/__visit
    end
    local.get $2
    i32.const 4
    i32.add
    local.set $2
    br $continue|0
   end
   unreachable
  end
 )
 (func $~lib/array/Array<u32>#__visit_impl (; 414 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  nop
 )
 (func $~lib/array/Array<assembly/model/TextMessage>#__visit_impl (; 415 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $2
  local.get $0
  i32.load offset=12
  i32.const 2
  i32.shl
  i32.add
  local.set $3
  block $break|0
   loop $continue|0
    local.get $2
    local.get $3
    i32.lt_u
    i32.eqz
    br_if $break|0
    local.get $2
    i32.load
    local.set $4
    local.get $4
    if
     local.get $4
     local.get $1
     call $~lib/rt/pure/__visit
    end
    local.get $2
    i32.const 4
    i32.add
    local.set $2
    br $continue|0
   end
   unreachable
  end
 )
 (func $~lib/array/Array<~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>>#__visit_impl (; 416 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $2
  local.get $0
  i32.load offset=12
  i32.const 2
  i32.shl
  i32.add
  local.set $3
  block $break|0
   loop $continue|0
    local.get $2
    local.get $3
    i32.lt_u
    i32.eqz
    br_if $break|0
    local.get $2
    i32.load
    local.set $4
    local.get $4
    if
     local.get $4
     local.get $1
     call $~lib/rt/pure/__visit
    end
    local.get $2
    i32.const 4
    i32.add
    local.set $2
    br $continue|0
   end
   unreachable
  end
 )
 (func $~lib/array/Array<u8>#__visit_impl (; 417 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  nop
 )
 (func $~lib/array/Array<~lib/near-runtime-ts/contract/ContractPromiseResult>#__visit_impl (; 418 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $2
  local.get $0
  i32.load offset=12
  i32.const 2
  i32.shl
  i32.add
  local.set $3
  block $break|0
   loop $continue|0
    local.get $2
    local.get $3
    i32.lt_u
    i32.eqz
    br_if $break|0
    local.get $2
    i32.load
    local.set $4
    local.get $4
    if
     local.get $4
     local.get $1
     call $~lib/rt/pure/__visit
    end
    local.get $2
    i32.const 4
    i32.add
    local.set $2
    br $continue|0
   end
   unreachable
  end
 )
 (func $~lib/rt/__visit_members (; 419 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  (local $2 i32)
  block $block$13$break
   block $block$4$break
    block $switch$1$default
     block $switch$1$case$45
      block $switch$1$case$44
       block $switch$1$case$43
        block $switch$1$case$42
         block $switch$1$case$39
          block $switch$1$case$38
           block $switch$1$case$34
            block $switch$1$case$28
             block $switch$1$case$20
              block $switch$1$case$18
               block $switch$1$case$17
                block $switch$1$case$15
                 block $switch$1$case$12
                  block $switch$1$case$11
                   block $switch$1$case$10
                    block $switch$1$case$9
                     block $switch$1$case$4
                      block $switch$1$case$2
                       local.get $0
                       i32.const 8
                       i32.sub
                       i32.load
                       br_table $switch$1$case$2 $switch$1$case$2 $switch$1$case$4 $switch$1$case$2 $switch$1$case$2 $switch$1$case$2 $switch$1$case$4 $switch$1$case$9 $switch$1$case$10 $switch$1$case$11 $switch$1$case$12 $switch$1$case$2 $switch$1$case$2 $switch$1$case$15 $switch$1$case$9 $switch$1$case$17 $switch$1$case$18 $switch$1$case$9 $switch$1$case$20 $switch$1$case$9 $switch$1$case$20 $switch$1$case$9 $switch$1$case$18 $switch$1$case$9 $switch$1$case$18 $switch$1$case$9 $switch$1$case$28 $switch$1$case$9 $switch$1$case$9 $switch$1$case$28 $switch$1$case$9 $switch$1$case$4 $switch$1$case$34 $switch$1$case$4 $switch$1$case$9 $switch$1$case$9 $switch$1$case$38 $switch$1$case$39 $switch$1$case$4 $switch$1$case$4 $switch$1$case$42 $switch$1$case$43 $switch$1$case$44 $switch$1$case$45 $switch$1$case$2 $switch$1$default
                      end
                      return
                     end
                     br $block$4$break
                    end
                    local.get $0
                    i32.load
                    local.tee $2
                    if
                     local.get $2
                     local.get $1
                     call $~lib/rt/pure/__visit
                    end
                    local.get $0
                    i32.load offset=4
                    local.tee $2
                    if
                     local.get $2
                     local.get $1
                     call $~lib/rt/pure/__visit
                    end
                    return
                   end
                   local.get $0
                   local.get $1
                   call $~lib/array/Array<i32>#__visit_impl
                   br $block$4$break
                  end
                  local.get $0
                  local.get $1
                  call $~lib/array/Array<~lib/string/String>#__visit_impl
                  br $block$4$break
                 end
                 local.get $0
                 local.get $1
                 call $~lib/array/Array<u32>#__visit_impl
                 br $block$4$break
                end
                local.get $0
                i32.load
                local.tee $2
                if
                 local.get $2
                 local.get $1
                 call $~lib/rt/pure/__visit
                end
                local.get $0
                i32.load offset=4
                local.tee $2
                if
                 local.get $2
                 local.get $1
                 call $~lib/rt/pure/__visit
                end
                br $block$13$break
               end
               local.get $0
               i32.load
               local.tee $2
               if
                local.get $2
                local.get $1
                call $~lib/rt/pure/__visit
               end
               local.get $0
               i32.load offset=8
               local.tee $2
               if
                local.get $2
                local.get $1
                call $~lib/rt/pure/__visit
               end
               return
              end
              local.get $0
              i32.load offset=4
              local.tee $2
              if
               local.get $2
               local.get $1
               call $~lib/rt/pure/__visit
              end
              br $block$13$break
             end
             local.get $0
             i32.load offset=8
             local.tee $2
             if
              local.get $2
              local.get $1
              call $~lib/rt/pure/__visit
             end
             br $block$13$break
            end
            local.get $0
            i32.load
            local.tee $2
            if
             local.get $2
             local.get $1
             call $~lib/rt/pure/__visit
            end
            local.get $0
            i32.load offset=4
            local.tee $2
            if
             local.get $2
             local.get $1
             call $~lib/rt/pure/__visit
            end
            local.get $0
            i32.load offset=12
            local.tee $2
            if
             local.get $2
             local.get $1
             call $~lib/rt/pure/__visit
            end
            br $block$13$break
           end
           local.get $0
           local.get $1
           call $~lib/array/Array<assembly/model/TextMessage>#__visit_impl
           br $block$4$break
          end
          local.get $0
          i32.load
          local.tee $2
          if
           local.get $2
           local.get $1
           call $~lib/rt/pure/__visit
          end
          local.get $0
          i32.load offset=4
          local.tee $2
          if
           local.get $2
           local.get $1
           call $~lib/rt/pure/__visit
          end
          local.get $0
          i32.load offset=8
          local.tee $2
          if
           local.get $2
           local.get $1
           call $~lib/rt/pure/__visit
          end
          return
         end
         local.get $0
         i32.load
         local.tee $2
         if
          local.get $2
          local.get $1
          call $~lib/rt/pure/__visit
         end
         local.get $0
         i32.load offset=12
         local.tee $2
         if
          local.get $2
          local.get $1
          call $~lib/rt/pure/__visit
         end
         local.get $0
         i32.load offset=16
         local.tee $2
         if
          local.get $2
          local.get $1
          call $~lib/rt/pure/__visit
         end
         return
        end
        local.get $0
        local.get $1
        call $~lib/array/Array<~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>>#__visit_impl
        br $block$4$break
       end
       local.get $0
       local.get $1
       call $~lib/array/Array<u8>#__visit_impl
       br $block$4$break
      end
      local.get $0
      i32.load offset=4
      local.tee $2
      if
       local.get $2
       local.get $1
       call $~lib/rt/pure/__visit
      end
      return
     end
     local.get $0
     local.get $1
     call $~lib/array/Array<~lib/near-runtime-ts/contract/ContractPromiseResult>#__visit_impl
     br $block$4$break
    end
    unreachable
   end
   local.get $0
   i32.load
   local.tee $2
   if
    local.get $2
    local.get $1
    call $~lib/rt/pure/__visit
   end
   return
  end
  return
 )
 (func $null (; 420 ;) (type $FUNCSIG$v)
 )
 (func $__near_ArgsParser_simple#get:buffer (; 421 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  i32.load
  call $~lib/rt/pure/__retain
 )
 (func $__near_ArgsParser_simple#set:buffer (; 422 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  local.tee $0
  local.get $0
  i32.load
  local.tee $1
  i32.ne
  if
   local.get $0
   call $~lib/rt/pure/__retain
   drop
   local.get $1
   call $~lib/rt/pure/__release
  end
  local.get $0
  i32.store
 )
 (func $__near_ArgsParser_simple#get:decoder (; 423 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  i32.load offset=4
  call $~lib/rt/pure/__retain
 )
 (func $__near_ArgsParser_simple#set:decoder (; 424 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  local.tee $1
  local.get $0
  i32.load offset=4
  local.tee $0
  i32.ne
  if
   local.get $1
   call $~lib/rt/pure/__retain
   drop
   local.get $0
   call $~lib/rt/pure/__release
  end
  local.get $1
  i32.store offset=4
 )
 (func $__near_ArgsParser_simple#get:handledRoot (; 425 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  i32.load8_u offset=8
 )
 (func $__near_ArgsParser_simple#set:handledRoot (; 426 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store8 offset=8
 )
 (func $__near_ArgsParser_simple#get:__near_param_s (; 427 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  i32.load offset=12
  call $~lib/rt/pure/__retain
 )
 (func $__near_ArgsParser_simple#set:__near_param_s (; 428 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  local.tee $1
  local.get $0
  i32.load offset=12
  local.tee $0
  i32.ne
  if
   local.get $1
   call $~lib/rt/pure/__retain
   drop
   local.get $0
   call $~lib/rt/pure/__release
  end
  local.get $1
  i32.store offset=12
 )
)
