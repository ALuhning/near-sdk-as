"use strict";
//@ts-ignore
const path = require("path");
//@ts-ignore
let assemblyscriptPath = Object.getOwnPropertyNames(require.cache).filter(s => s.endsWith("assemblyscript.js"))[0];
let transformerPath;
if (assemblyscriptPath) {
    let splitPath = assemblyscriptPath.split(path.sep).slice(0, -2);
    transformerPath = splitPath.concat(["cli", "transform"]).join(path.sep);
}
else {
    assemblyscriptPath = require.resolve("assemblyscript");
    transformerPath = require.resolve("assemblyscript/cli/transform");
}
const assemblyscript = require(assemblyscriptPath);
//@ts-ignore
module.exports.Transform = require(transformerPath).Transform;
module.exports = {
    ...module.exports,
    ...assemblyscript,
    ...assemblyscript.util // Need to add because newer version adds namespace
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2FzdC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsWUFBWTtBQUNaLE1BQU0sSUFBSSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUU3QixZQUFZO0FBQ1osSUFBSSxrQkFBa0IsR0FBRyxNQUFNLENBQUMsbUJBQW1CLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ25ILElBQUksZUFBZSxDQUFDO0FBQ3BCLElBQUksa0JBQWtCLEVBQUU7SUFDdEIsSUFBSSxTQUFTLEdBQUcsa0JBQWtCLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDaEUsZUFBZSxHQUFJLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBRSxLQUFLLEVBQUUsV0FBVyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0NBQzNFO0tBQU07SUFDTCxrQkFBa0IsR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLGdCQUFnQixDQUFDLENBQUM7SUFDdkQsZUFBZSxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsOEJBQThCLENBQUMsQ0FBQztDQUNuRTtBQUNELE1BQU0sY0FBYyxHQUFHLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0FBRW5ELFlBQVk7QUFDWixNQUFNLENBQUMsT0FBTyxDQUFDLFNBQVMsR0FBRyxPQUFPLENBQUMsZUFBZSxDQUFDLENBQUMsU0FBUyxDQUFDO0FBQzlELE1BQU0sQ0FBQyxPQUFPLEdBQUc7SUFDQyxHQUFHLE1BQU0sQ0FBQyxPQUFPO0lBQ2pCLEdBQUcsY0FBYztJQUNqQixHQUFHLGNBQWMsQ0FBQyxJQUFJLENBQUMsbURBQW1EO0NBQzNFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvL0B0cy1pZ25vcmVcbmNvbnN0IHBhdGggPSByZXF1aXJlKFwicGF0aFwiKTtcblxuLy9AdHMtaWdub3JlXG5sZXQgYXNzZW1ibHlzY3JpcHRQYXRoID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMocmVxdWlyZS5jYWNoZSkuZmlsdGVyKHMgPT4gcy5lbmRzV2l0aChcImFzc2VtYmx5c2NyaXB0LmpzXCIpKVswXTtcbmxldCB0cmFuc2Zvcm1lclBhdGg7XG5pZiAoYXNzZW1ibHlzY3JpcHRQYXRoKSB7XG4gIGxldCBzcGxpdFBhdGggPSBhc3NlbWJseXNjcmlwdFBhdGguc3BsaXQocGF0aC5zZXApLnNsaWNlKDAsIC0yKTtcbiAgdHJhbnNmb3JtZXJQYXRoID0gIHNwbGl0UGF0aC5jb25jYXQoWyBcImNsaVwiLCBcInRyYW5zZm9ybVwiXSkuam9pbihwYXRoLnNlcCk7XG59IGVsc2Uge1xuICBhc3NlbWJseXNjcmlwdFBhdGggPSByZXF1aXJlLnJlc29sdmUoXCJhc3NlbWJseXNjcmlwdFwiKTtcbiAgdHJhbnNmb3JtZXJQYXRoID0gcmVxdWlyZS5yZXNvbHZlKFwiYXNzZW1ibHlzY3JpcHQvY2xpL3RyYW5zZm9ybVwiKTtcbn1cbmNvbnN0IGFzc2VtYmx5c2NyaXB0ID0gcmVxdWlyZShhc3NlbWJseXNjcmlwdFBhdGgpO1xuXG4vL0B0cy1pZ25vcmVcbm1vZHVsZS5leHBvcnRzLlRyYW5zZm9ybSA9IHJlcXVpcmUodHJhbnNmb3JtZXJQYXRoKS5UcmFuc2Zvcm07XG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICAgICAgICAgICAgICAgIC4uLm1vZHVsZS5leHBvcnRzLFxuICAgICAgICAgICAgICAgICAgLi4uYXNzZW1ibHlzY3JpcHQsXG4gICAgICAgICAgICAgICAgICAuLi5hc3NlbWJseXNjcmlwdC51dGlsIC8vIE5lZWQgdG8gYWRkIGJlY2F1c2UgbmV3ZXIgdmVyc2lvbiBhZGRzIG5hbWVzcGFjZVxuICAgICAgICAgICAgICAgIH07Il19