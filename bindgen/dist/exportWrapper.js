"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const exportWalker_1 = require("./exportWalker");
class TypesTransformer extends exportWalker_1.TSDBuilder {
    static build(program) {
        return (new TypesTransformer(program)).build();
    }
    visitFunction(name, element) {
        const realFuncName = element.internalName.replace("__wrapper_", "");
        // console.log(realFuncName);
        const realFuncProto = this.program.elementsByName.get(realFuncName);
        // console.log(realFunc);
        let realFunc = Array.from(realFuncProto.instances.values())[0];
        element.signature = realFunc.signature;
        console.log(realFunc.signature.toString());
        super.visitFunction(name, element);
    }
}
exports.TypesTransformer = TypesTransformer;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwb3J0V3JhcHBlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9leHBvcnRXcmFwcGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBbUJBLGlEQUE0QztBQUU1QyxNQUFhLGdCQUFpQixTQUFRLHlCQUFVO0lBQzlDLE1BQU0sQ0FBQyxLQUFLLENBQUMsT0FBZ0I7UUFDM0IsT0FBTyxDQUFDLElBQUksZ0JBQWdCLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUNqRCxDQUFDO0lBRUQsYUFBYSxDQUFDLElBQVksRUFBRSxPQUFpQjtRQUMzQyxNQUFNLFlBQVksR0FBRyxPQUFPLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxZQUFZLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDcEUsNkJBQTZCO1FBQzdCLE1BQU0sYUFBYSxHQUFzQixJQUFJLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFFLENBQUM7UUFDeEYseUJBQXlCO1FBQ3pCLElBQUksUUFBUSxHQUFHLEtBQUssQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLFNBQVUsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2hFLE9BQU8sQ0FBQyxTQUFTLEdBQUcsUUFBUSxDQUFDLFNBQVMsQ0FBQztRQUN2QyxPQUFPLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQztRQUMzQyxLQUFLLENBQUMsYUFBYSxDQUFDLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQztJQUNyQyxDQUFDO0NBQ0Y7QUFmRCw0Q0FlQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEV4cG9ydHNXYWxrZXIsXG4gIEVsZW1lbnQsXG4gIEZ1bmN0aW9uLFxuICBQcm9ncmFtLFxuICBHbG9iYWwsXG4gIENvbW1vbkZsYWdzLFxuICBpbmRlbnQsXG4gIEVudW0sXG4gIEVsZW1lbnRLaW5kLFxuICBFbnVtVmFsdWUsXG4gIENvbnN0YW50VmFsdWVLaW5kLFxuICBDbGFzcyxcbiAgSW50ZXJmYWNlLFxuICBGaWVsZCxcbiAgVHlwZSxcbiAgVHlwZUtpbmQsXG4gIEZ1bmN0aW9uUHJvdG90eXBlXG59IGZyb20gXCJ2aXNpdG9yLWFzL2FzXCI7XG5pbXBvcnQgeyBUU0RCdWlsZGVyIH0gZnJvbSBcIi4vZXhwb3J0V2Fsa2VyXCI7XG5cbmV4cG9ydCBjbGFzcyBUeXBlc1RyYW5zZm9ybWVyIGV4dGVuZHMgVFNEQnVpbGRlciB7XG4gIHN0YXRpYyBidWlsZChwcm9ncmFtOiBQcm9ncmFtKTogc3RyaW5nIHtcbiAgICByZXR1cm4gKG5ldyBUeXBlc1RyYW5zZm9ybWVyKHByb2dyYW0pKS5idWlsZCgpO1xuICB9XG4gIFxuICB2aXNpdEZ1bmN0aW9uKG5hbWU6IHN0cmluZywgZWxlbWVudDogRnVuY3Rpb24pOiB2b2lkIHtcbiAgICBjb25zdCByZWFsRnVuY05hbWUgPSBlbGVtZW50LmludGVybmFsTmFtZS5yZXBsYWNlKFwiX193cmFwcGVyX1wiLCBcIlwiKTtcbiAgICAvLyBjb25zb2xlLmxvZyhyZWFsRnVuY05hbWUpO1xuICAgIGNvbnN0IHJlYWxGdW5jUHJvdG8gPSA8RnVuY3Rpb25Qcm90b3R5cGU+dGhpcy5wcm9ncmFtLmVsZW1lbnRzQnlOYW1lLmdldChyZWFsRnVuY05hbWUpITtcbiAgICAvLyBjb25zb2xlLmxvZyhyZWFsRnVuYyk7XG4gICAgbGV0IHJlYWxGdW5jID0gQXJyYXkuZnJvbShyZWFsRnVuY1Byb3RvLmluc3RhbmNlcyEudmFsdWVzKCkpWzBdO1xuICAgIGVsZW1lbnQuc2lnbmF0dXJlID0gcmVhbEZ1bmMuc2lnbmF0dXJlO1xuICAgIGNvbnNvbGUubG9nKHJlYWxGdW5jLnNpZ25hdHVyZS50b1N0cmluZygpKTtcbiAgICBzdXBlci52aXNpdEZ1bmN0aW9uKG5hbWUsIGVsZW1lbnQpO1xuICB9XG59Il19